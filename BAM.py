# Form implementation generated from reading ui file 'BAM.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import (
    QCalendarWidget, QMessageBox, QTableWidgetItem, QCheckBox,
    QHBoxLayout, QWidget, QMenu, QPushButton, QWidgetAction, QApplication
)
from PyQt6.QtGui import QColor
from PyQt6.QtCore import Qt
import psycopg2
import random 
import datetime


class Ui_BAM(object):
    def setupUi(self, BAM):
        BAM.setObjectName("BAM")
        BAM.resize(871, 716)
        self.centralwidget = QtWidgets.QWidget(parent=BAM)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.stackedWidget_3 = QtWidgets.QStackedWidget(parent=self.centralwidget)
        self.stackedWidget_3.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.stackedWidget_3.setObjectName("stackedWidget_3")
        self.LeftArrowRightArrow_Page_0 = QtWidgets.QWidget()
        self.LeftArrowRightArrow_Page_0.setObjectName("LeftArrowRightArrow_Page_0")
        self.gridLayout_141 = QtWidgets.QGridLayout(self.LeftArrowRightArrow_Page_0)
        self.gridLayout_141.setObjectName("gridLayout_141")
        self.LeftArrow_PushButton = QtWidgets.QPushButton(parent=self.LeftArrowRightArrow_Page_0)
        self.LeftArrow_PushButton.setMinimumSize(QtCore.QSize(20, 20))
        self.LeftArrow_PushButton.setMaximumSize(QtCore.QSize(20, 20))
        self.LeftArrow_PushButton.setStyleSheet("QPushButton\n"
"{border: 0px solid; border-color: rgb(173, 173, 173);\n"
"    font: 700 15pt \"Segoe UI\";\n"
"padding-bottom: 5px;\n"
"\n"
"}\n"
"QPushButton:Hover\n"
"{    \n"
"    background-color: rgb(210, 210, 210);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(186, 213, 214);\n"
"}")
        self.LeftArrow_PushButton.setObjectName("LeftArrow_PushButton")
        self.gridLayout_141.addWidget(self.LeftArrow_PushButton, 0, 0, 1, 1)
        self.RightArrow_PushButton = QtWidgets.QPushButton(parent=self.LeftArrowRightArrow_Page_0)
        self.RightArrow_PushButton.setMinimumSize(QtCore.QSize(20, 20))
        self.RightArrow_PushButton.setMaximumSize(QtCore.QSize(20, 20))
        self.RightArrow_PushButton.setStyleSheet("QPushButton\n"
"{border: 0px solid; border-color: rgb(173, 173, 173);\n"
"    font: 700 15pt \"Segoe UI\";\n"
"padding-bottom: 5px;\n"
"\n"
"}\n"
"QPushButton:Hover\n"
"{    \n"
"    background-color: rgb(210, 210, 210);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(186, 213, 214);\n"
"}")
        self.RightArrow_PushButton.setObjectName("RightArrow_PushButton")
        self.gridLayout_141.addWidget(self.RightArrow_PushButton, 0, 1, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(780, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_141.addItem(spacerItem, 0, 2, 1, 1)
        self.stackedWidget = QtWidgets.QStackedWidget(parent=self.LeftArrowRightArrow_Page_0)
        self.stackedWidget.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.stackedWidget.setObjectName("stackedWidget")
        self.Welcome_Page_0 = QtWidgets.QWidget()
        self.Welcome_Page_0.setObjectName("Welcome_Page_0")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.Welcome_Page_0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.Welcome_ScrollArea = QtWidgets.QScrollArea(parent=self.Welcome_Page_0)
        self.Welcome_ScrollArea.setStyleSheet("")
        self.Welcome_ScrollArea.setWidgetResizable(True)
        self.Welcome_ScrollArea.setObjectName("Welcome_ScrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 815, 591))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.LoginRegister_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents)
        self.LoginRegister_Frame.setStyleSheet("background-color: rgb(235, 235, 235);")
        self.LoginRegister_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.LoginRegister_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.LoginRegister_Frame.setObjectName("LoginRegister_Frame")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.LoginRegister_Frame)
        self.gridLayout_4.setObjectName("gridLayout_4")
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_4.addItem(spacerItem1, 0, 0, 1, 1)
        self.Login_PushButton_1 = QtWidgets.QPushButton(parent=self.LoginRegister_Frame)
        self.Login_PushButton_1.setMinimumSize(QtCore.QSize(0, 60))
        self.Login_PushButton_1.setMaximumSize(QtCore.QSize(200, 16777215))
        self.Login_PushButton_1.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 18pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.Login_PushButton_1.setObjectName("Login_PushButton_1")
        self.gridLayout_4.addWidget(self.Login_PushButton_1, 1, 0, 1, 1)
        self.Register_PushButton_2 = QtWidgets.QPushButton(parent=self.LoginRegister_Frame)
        self.Register_PushButton_2.setMinimumSize(QtCore.QSize(0, 60))
        self.Register_PushButton_2.setMaximumSize(QtCore.QSize(200, 16777215))
        self.Register_PushButton_2.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 18pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.Register_PushButton_2.setObjectName("Register_PushButton_2")
        self.gridLayout_4.addWidget(self.Register_PushButton_2, 2, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_4.addItem(spacerItem2, 3, 0, 1, 1)
        self.gridLayout_5.addWidget(self.LoginRegister_Frame, 2, 0, 1, 4)
        self.Welcome_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents)
        self.Welcome_Frame.setMinimumSize(QtCore.QSize(0, 0))
        self.Welcome_Frame.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.Welcome_Frame.setStyleSheet("\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(171, 171, 171, 255), stop:1 rgba(220, 220, 220, 255));")
        self.Welcome_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.Welcome_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.Welcome_Frame.setObjectName("Welcome_Frame")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.Welcome_Frame)
        self.gridLayout_3.setObjectName("gridLayout_3")
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_3.addItem(spacerItem3, 0, 0, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_3.addItem(spacerItem4, 2, 0, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_3.addItem(spacerItem5, 1, 1, 1, 1)
        self.LetsGetStarted_Label = QtWidgets.QLabel(parent=self.Welcome_Frame)
        self.LetsGetStarted_Label.setMinimumSize(QtCore.QSize(250, 100))
        self.LetsGetStarted_Label.setMaximumSize(QtCore.QSize(250, 100))
        self.LetsGetStarted_Label.setStyleSheet(" font: 600 18pt \"Segoe UI\";\n"
"border-radius: 50px;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(171, 171, 171, 255), stop:1 rgba(220, 220, 220, 255));\n"
"\n"
"")
        self.LetsGetStarted_Label.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.LetsGetStarted_Label.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.LetsGetStarted_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.LetsGetStarted_Label.setObjectName("LetsGetStarted_Label")
        self.gridLayout_3.addWidget(self.LetsGetStarted_Label, 1, 2, 1, 1)
        self.WelcomeToJBBank_Label = QtWidgets.QLabel(parent=self.Welcome_Frame)
        self.WelcomeToJBBank_Label.setMinimumSize(QtCore.QSize(300, 150))
        self.WelcomeToJBBank_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.WelcomeToJBBank_Label.setStyleSheet("font: 600 italic 25pt \"Segoe UI\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"")
        self.WelcomeToJBBank_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.WelcomeToJBBank_Label.setObjectName("WelcomeToJBBank_Label")
        self.gridLayout_3.addWidget(self.WelcomeToJBBank_Label, 1, 0, 1, 1)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_3.addItem(spacerItem6, 0, 3, 3, 1)
        self.gridLayout_5.addWidget(self.Welcome_Frame, 1, 0, 1, 4)
        self.Welcome_ScrollArea.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout_2.addWidget(self.Welcome_ScrollArea, 0, 0, 1, 3)
        self.stackedWidget.addWidget(self.Welcome_Page_0)
        self.Login_Page_1 = QtWidgets.QWidget()
        self.Login_Page_1.setObjectName("Login_Page_1")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.Login_Page_1)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.Login_ScrollArea = QtWidgets.QScrollArea(parent=self.Login_Page_1)
        self.Login_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.Login_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.Login_ScrollArea.setWidgetResizable(True)
        self.Login_ScrollArea.setObjectName("Login_ScrollArea")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 817, 593))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_2)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.Login_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_2)
        self.Login_Frame.setMinimumSize(QtCore.QSize(500, 460))
        self.Login_Frame.setStyleSheet("padding-left: 5px;\n"
"padding-right: 5px;")
        self.Login_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.Login_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.Login_Frame.setObjectName("Login_Frame")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.Login_Frame)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.HeythereReadyTo_Label = QtWidgets.QLabel(parent=self.Login_Frame)
        self.HeythereReadyTo_Label.setStyleSheet("font: 600 20pt \"Segoe UI\";")
        self.HeythereReadyTo_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.HeythereReadyTo_Label.setObjectName("HeythereReadyTo_Label")
        self.gridLayout_7.addWidget(self.HeythereReadyTo_Label, 1, 0, 1, 2)
        self.ForgotPassword_PushButton_4 = QtWidgets.QPushButton(parent=self.Login_Frame)
        self.ForgotPassword_PushButton_4.setMaximumSize(QtCore.QSize(140, 16777215))
        self.ForgotPassword_PushButton_4.setStyleSheet("QPushButton\n"
"{border: 0px solid; border-color: rgb(173, 173, 173);\n"
"font: 600 11pt \"Segoe UI\"; \n"
"}\n"
"QPushButton:Hover\n"
"{    \n"
"    color:  rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(186, 213, 214);\n"
"}")
        self.ForgotPassword_PushButton_4.setObjectName("ForgotPassword_PushButton_4")
        self.gridLayout_7.addWidget(self.ForgotPassword_PushButton_4, 9, 0, 1, 1)
        self.Login_Label = QtWidgets.QLabel(parent=self.Login_Frame)
        self.Login_Label.setStyleSheet("font: 600 25pt \"Segoe UI\";")
        self.Login_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.Login_Label.setObjectName("Login_Label")
        self.gridLayout_7.addWidget(self.Login_Label, 2, 0, 1, 2)
        self.Login_PushButton_2 = QtWidgets.QPushButton(parent=self.Login_Frame)
        self.Login_PushButton_2.setMinimumSize(QtCore.QSize(80, 50))
        self.Login_PushButton_2.setMaximumSize(QtCore.QSize(90, 16777215))
        self.Login_PushButton_2.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}\n"
"")
        self.Login_PushButton_2.setObjectName("Login_PushButton_2")
        self.gridLayout_7.addWidget(self.Login_PushButton_2, 8, 1, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_7.addItem(spacerItem7, 0, 0, 1, 2)
        self.Login_Password_Label = QtWidgets.QLabel(parent=self.Login_Frame)
        self.Login_Password_Label.setStyleSheet("font: 600 14pt \"Segoe UI\";")
        self.Login_Password_Label.setObjectName("Login_Password_Label")
        self.gridLayout_7.addWidget(self.Login_Password_Label, 6, 0, 1, 1)
        self.LoginUsername_LineEdit_1 = QtWidgets.QLineEdit(parent=self.Login_Frame)
        self.LoginUsername_LineEdit_1.setMinimumSize(QtCore.QSize(0, 50))
        self.LoginUsername_LineEdit_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.LoginUsername_LineEdit_1.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(173, 173, 173);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"")
        self.LoginUsername_LineEdit_1.setObjectName("LoginUsername_LineEdit_1")
        self.gridLayout_7.addWidget(self.LoginUsername_LineEdit_1, 5, 0, 1, 2)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_7.addItem(spacerItem8, 3, 0, 1, 2)
        self.Login_Password_LineEdit_2 = QtWidgets.QLineEdit(parent=self.Login_Frame)
        self.Login_Password_LineEdit_2.setMinimumSize(QtCore.QSize(0, 50))
        self.Login_Password_LineEdit_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.Login_Password_LineEdit_2.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(173, 173, 173);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"")
        self.Login_Password_LineEdit_2.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.Login_Password_LineEdit_2.setObjectName("Login_Password_LineEdit_2")
        self.gridLayout_7.addWidget(self.Login_Password_LineEdit_2, 7, 0, 1, 2)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_7.addItem(spacerItem9, 11, 0, 1, 1)
        self.ForgotUsername_PushButton_5 = QtWidgets.QPushButton(parent=self.Login_Frame)
        self.ForgotUsername_PushButton_5.setMaximumSize(QtCore.QSize(144, 16777215))
        self.ForgotUsername_PushButton_5.setStyleSheet("QPushButton\n"
"{border: 0px solid; border-color: rgb(173, 173, 173);\n"
"font: 600 11pt \"Segoe UI\"; \n"
"}\n"
"QPushButton:Hover\n"
"{    \n"
"    color:  rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(186, 213, 214);\n"
"}")
        self.ForgotUsername_PushButton_5.setObjectName("ForgotUsername_PushButton_5")
        self.gridLayout_7.addWidget(self.ForgotUsername_PushButton_5, 10, 0, 1, 1)
        self.Login_Username_Label = QtWidgets.QLabel(parent=self.Login_Frame)
        self.Login_Username_Label.setStyleSheet("font: 600 14pt \"Segoe UI\";")
        self.Login_Username_Label.setObjectName("Login_Username_Label")
        self.gridLayout_7.addWidget(self.Login_Username_Label, 4, 0, 1, 1)
        self.gridLayout_8.addWidget(self.Login_Frame, 1, 1, 1, 1)
        spacerItem10 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_8.addItem(spacerItem10, 0, 1, 1, 1)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_8.addItem(spacerItem11, 1, 0, 1, 1)
        spacerItem12 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_8.addItem(spacerItem12, 2, 1, 1, 1)
        spacerItem13 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_8.addItem(spacerItem13, 1, 2, 1, 1)
        self.Login_ScrollArea.setWidget(self.scrollAreaWidgetContents_2)
        self.gridLayout_6.addWidget(self.Login_ScrollArea, 0, 0, 1, 2)
        self.stackedWidget.addWidget(self.Login_Page_1)
        self.ForgotUsername_Page_2 = QtWidgets.QWidget()
        self.ForgotUsername_Page_2.setObjectName("ForgotUsername_Page_2")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.ForgotUsername_Page_2)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.ForgotUsername_ScrollArea = QtWidgets.QScrollArea(parent=self.ForgotUsername_Page_2)
        self.ForgotUsername_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ForgotUsername_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ForgotUsername_ScrollArea.setWidgetResizable(True)
        self.ForgotUsername_ScrollArea.setObjectName("ForgotUsername_ScrollArea")
        self.scrollAreaWidgetContents_3 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_3.setGeometry(QtCore.QRect(0, 0, 817, 593))
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_3)
        self.gridLayout_12.setObjectName("gridLayout_12")
        spacerItem14 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_12.addItem(spacerItem14, 1, 2, 1, 1)
        spacerItem15 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_12.addItem(spacerItem15, 1, 0, 1, 1)
        spacerItem16 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_12.addItem(spacerItem16, 2, 1, 1, 1)
        self.ForgotUsername_Frame_1 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_3)
        self.ForgotUsername_Frame_1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ForgotUsername_Frame_1.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ForgotUsername_Frame_1.setObjectName("ForgotUsername_Frame_1")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.ForgotUsername_Frame_1)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.Submit_PushButton_6 = QtWidgets.QPushButton(parent=self.ForgotUsername_Frame_1)
        self.Submit_PushButton_6.setMinimumSize(QtCore.QSize(80, 50))
        self.Submit_PushButton_6.setMaximumSize(QtCore.QSize(90, 16777215))
        self.Submit_PushButton_6.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}\n"
"")
        self.Submit_PushButton_6.setObjectName("Submit_PushButton_6")
        self.gridLayout_10.addWidget(self.Submit_PushButton_6, 2, 1, 1, 1)
        self.ForgotUsername_Frame_2 = QtWidgets.QFrame(parent=self.ForgotUsername_Frame_1)
        self.ForgotUsername_Frame_2.setMinimumSize(QtCore.QSize(548, 250))
        self.ForgotUsername_Frame_2.setStyleSheet("background-color: rgb(226, 226, 226);\n"
"padding-left: 5px;\n"
"padding-right: 14px;")
        self.ForgotUsername_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ForgotUsername_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ForgotUsername_Frame_2.setObjectName("ForgotUsername_Frame_2")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.ForgotUsername_Frame_2)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.ForgotUsername_Answer_Label = QtWidgets.QLabel(parent=self.ForgotUsername_Frame_2)
        self.ForgotUsername_Answer_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ForgotUsername_Answer_Label.setObjectName("ForgotUsername_Answer_Label")
        self.gridLayout_11.addWidget(self.ForgotUsername_Answer_Label, 5, 0, 1, 1)
        self.ForgotUsername_SecurityQuestion_ComboBox = QtWidgets.QComboBox(parent=self.ForgotUsername_Frame_2)
        self.ForgotUsername_SecurityQuestion_ComboBox.setMinimumSize(QtCore.QSize(0, 30))
        self.ForgotUsername_SecurityQuestion_ComboBox.setStyleSheet("QComboBox {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QComboBox:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QComboBox:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ForgotUsername_SecurityQuestion_ComboBox.setObjectName("ForgotUsername_SecurityQuestion_ComboBox")
        self.gridLayout_11.addWidget(self.ForgotUsername_SecurityQuestion_ComboBox, 4, 1, 1, 1)
        self.ForgotUsername_ConfirmProfilePin_Label = QtWidgets.QLabel(parent=self.ForgotUsername_Frame_2)
        self.ForgotUsername_ConfirmProfilePin_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ForgotUsername_ConfirmProfilePin_Label.setObjectName("ForgotUsername_ConfirmProfilePin_Label")
        self.gridLayout_11.addWidget(self.ForgotUsername_ConfirmProfilePin_Label, 1, 0, 1, 1)
        spacerItem17 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_11.addItem(spacerItem17, 3, 0, 1, 2)
        self.ForgotUsername_Email_Label = QtWidgets.QLabel(parent=self.ForgotUsername_Frame_2)
        self.ForgotUsername_Email_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ForgotUsername_Email_Label.setObjectName("ForgotUsername_Email_Label")
        self.gridLayout_11.addWidget(self.ForgotUsername_Email_Label, 2, 0, 1, 1)
        self.ForgotUsername_ProfilePin_Label = QtWidgets.QLabel(parent=self.ForgotUsername_Frame_2)
        self.ForgotUsername_ProfilePin_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ForgotUsername_ProfilePin_Label.setObjectName("ForgotUsername_ProfilePin_Label")
        self.gridLayout_11.addWidget(self.ForgotUsername_ProfilePin_Label, 0, 0, 1, 1)
        self.ForgotUsername_ProfilePin_LineEdit = QtWidgets.QLineEdit(parent=self.ForgotUsername_Frame_2)
        self.ForgotUsername_ProfilePin_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ForgotUsername_ProfilePin_LineEdit.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ForgotUsername_ProfilePin_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ForgotUsername_ProfilePin_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.ForgotUsername_ProfilePin_LineEdit.setObjectName("ForgotUsername_ProfilePin_LineEdit")
        self.gridLayout_11.addWidget(self.ForgotUsername_ProfilePin_LineEdit, 0, 1, 1, 1)
        self.ForgotUsername_ConfirmProfilePin_LineEdit = QtWidgets.QLineEdit(parent=self.ForgotUsername_Frame_2)
        self.ForgotUsername_ConfirmProfilePin_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ForgotUsername_ConfirmProfilePin_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ForgotUsername_ConfirmProfilePin_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.ForgotUsername_ConfirmProfilePin_LineEdit.setObjectName("ForgotUsername_ConfirmProfilePin_LineEdit")
        self.gridLayout_11.addWidget(self.ForgotUsername_ConfirmProfilePin_LineEdit, 1, 1, 1, 1)
        self.ForgotUsername_Email_LineEdit = QtWidgets.QLineEdit(parent=self.ForgotUsername_Frame_2)
        self.ForgotUsername_Email_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ForgotUsername_Email_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ForgotUsername_Email_LineEdit.setObjectName("ForgotUsername_Email_LineEdit")
        self.gridLayout_11.addWidget(self.ForgotUsername_Email_LineEdit, 2, 1, 1, 1)
        self.ForgotUsername_SecurityQuestion_Label = QtWidgets.QLabel(parent=self.ForgotUsername_Frame_2)
        self.ForgotUsername_SecurityQuestion_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ForgotUsername_SecurityQuestion_Label.setObjectName("ForgotUsername_SecurityQuestion_Label")
        self.gridLayout_11.addWidget(self.ForgotUsername_SecurityQuestion_Label, 4, 0, 1, 1)
        self.ForgotUsername_Answer_LineEdit = QtWidgets.QLineEdit(parent=self.ForgotUsername_Frame_2)
        self.ForgotUsername_Answer_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ForgotUsername_Answer_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ForgotUsername_Answer_LineEdit.setObjectName("ForgotUsername_Answer_LineEdit")
        self.gridLayout_11.addWidget(self.ForgotUsername_Answer_LineEdit, 5, 1, 1, 1)
        self.gridLayout_10.addWidget(self.ForgotUsername_Frame_2, 1, 0, 1, 2)
        self.ForgotUsername_Label = QtWidgets.QLabel(parent=self.ForgotUsername_Frame_1)
        self.ForgotUsername_Label.setStyleSheet("font: 600 18pt \"Segoe UI\";\n"
"")
        self.ForgotUsername_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ForgotUsername_Label.setObjectName("ForgotUsername_Label")
        self.gridLayout_10.addWidget(self.ForgotUsername_Label, 0, 0, 1, 2)
        self.gridLayout_12.addWidget(self.ForgotUsername_Frame_1, 1, 1, 1, 1)
        spacerItem18 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_12.addItem(spacerItem18, 0, 1, 1, 1)
        self.ForgotUsername_ScrollArea.setWidget(self.scrollAreaWidgetContents_3)
        self.gridLayout_9.addWidget(self.ForgotUsername_ScrollArea, 0, 0, 1, 2)
        self.stackedWidget.addWidget(self.ForgotUsername_Page_2)
        self.ForgotPassword_Page_3 = QtWidgets.QWidget()
        self.ForgotPassword_Page_3.setObjectName("ForgotPassword_Page_3")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.ForgotPassword_Page_3)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.ForgotPassword_ScrollArea = QtWidgets.QScrollArea(parent=self.ForgotPassword_Page_3)
        self.ForgotPassword_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ForgotPassword_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ForgotPassword_ScrollArea.setWidgetResizable(True)
        self.ForgotPassword_ScrollArea.setObjectName("ForgotPassword_ScrollArea")
        self.scrollAreaWidgetContents_4 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_4.setGeometry(QtCore.QRect(0, 0, 817, 593))
        self.scrollAreaWidgetContents_4.setObjectName("scrollAreaWidgetContents_4")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_4)
        self.gridLayout_16.setObjectName("gridLayout_16")
        spacerItem19 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_16.addItem(spacerItem19, 1, 2, 1, 1)
        self.ForgotPassword_Frame_1 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_4)
        self.ForgotPassword_Frame_1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ForgotPassword_Frame_1.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ForgotPassword_Frame_1.setObjectName("ForgotPassword_Frame_1")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.ForgotPassword_Frame_1)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.ForgotPassword_Frame_2 = QtWidgets.QFrame(parent=self.ForgotPassword_Frame_1)
        self.ForgotPassword_Frame_2.setMinimumSize(QtCore.QSize(548, 400))
        self.ForgotPassword_Frame_2.setStyleSheet("background-color: rgb(226, 226, 226);\n"
"padding-left: 5px;\n"
"padding-right: 14px;")
        self.ForgotPassword_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ForgotPassword_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ForgotPassword_Frame_2.setObjectName("ForgotPassword_Frame_2")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.ForgotPassword_Frame_2)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.ForgotPassword_NewPassword_Label = QtWidgets.QLabel(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_NewPassword_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ForgotPassword_NewPassword_Label.setObjectName("ForgotPassword_NewPassword_Label")
        self.gridLayout_15.addWidget(self.ForgotPassword_NewPassword_Label, 10, 0, 1, 1)
        self.ForgotPassword_Username_LineEdit = QtWidgets.QLineEdit(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_Username_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ForgotPassword_Username_LineEdit.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ForgotPassword_Username_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ForgotPassword_Username_LineEdit.setObjectName("ForgotPassword_Username_LineEdit")
        self.gridLayout_15.addWidget(self.ForgotPassword_Username_LineEdit, 0, 1, 1, 1)
        self.ForgotPassword_Username_Label = QtWidgets.QLabel(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_Username_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ForgotPassword_Username_Label.setObjectName("ForgotPassword_Username_Label")
        self.gridLayout_15.addWidget(self.ForgotPassword_Username_Label, 0, 0, 1, 1)
        self.ForgotPassword_Answer_Label = QtWidgets.QLabel(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_Answer_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ForgotPassword_Answer_Label.setObjectName("ForgotPassword_Answer_Label")
        self.gridLayout_15.addWidget(self.ForgotPassword_Answer_Label, 8, 0, 1, 1)
        self.ForgotPassword_SecurityQuestion_ComboBox = QtWidgets.QComboBox(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_SecurityQuestion_ComboBox.setMinimumSize(QtCore.QSize(0, 30))
        self.ForgotPassword_SecurityQuestion_ComboBox.setStyleSheet("QComboBox {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QComboBox:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QComboBox:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ForgotPassword_SecurityQuestion_ComboBox.setObjectName("ForgotPassword_SecurityQuestion_ComboBox")
        self.gridLayout_15.addWidget(self.ForgotPassword_SecurityQuestion_ComboBox, 7, 1, 1, 1)
        self.ForgotPassword_NewPassword_LineEdit = QtWidgets.QLineEdit(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_NewPassword_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ForgotPassword_NewPassword_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ForgotPassword_NewPassword_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.ForgotPassword_NewPassword_LineEdit.setObjectName("ForgotPassword_NewPassword_LineEdit")
        self.gridLayout_15.addWidget(self.ForgotPassword_NewPassword_LineEdit, 10, 1, 1, 1)
        self.ForgotPassword_ProfilePin_LineEdit = QtWidgets.QLineEdit(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_ProfilePin_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ForgotPassword_ProfilePin_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ForgotPassword_ProfilePin_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.ForgotPassword_ProfilePin_LineEdit.setObjectName("ForgotPassword_ProfilePin_LineEdit")
        self.gridLayout_15.addWidget(self.ForgotPassword_ProfilePin_LineEdit, 1, 1, 1, 1)
        self.ForgotPassword_Email_Label = QtWidgets.QLabel(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_Email_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ForgotPassword_Email_Label.setObjectName("ForgotPassword_Email_Label")
        self.gridLayout_15.addWidget(self.ForgotPassword_Email_Label, 4, 0, 1, 1)
        self.ForgotPassword_SecurityQuestion_Label = QtWidgets.QLabel(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_SecurityQuestion_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ForgotPassword_SecurityQuestion_Label.setObjectName("ForgotPassword_SecurityQuestion_Label")
        self.gridLayout_15.addWidget(self.ForgotPassword_SecurityQuestion_Label, 7, 0, 1, 1)
        self.ForgotPassword_Email_LineEdit = QtWidgets.QLineEdit(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_Email_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ForgotPassword_Email_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ForgotPassword_Email_LineEdit.setObjectName("ForgotPassword_Email_LineEdit")
        self.gridLayout_15.addWidget(self.ForgotPassword_Email_LineEdit, 4, 1, 1, 1)
        self.ForgotPassword_ConfirmProfilePin_Label = QtWidgets.QLabel(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_ConfirmProfilePin_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ForgotPassword_ConfirmProfilePin_Label.setObjectName("ForgotPassword_ConfirmProfilePin_Label")
        self.gridLayout_15.addWidget(self.ForgotPassword_ConfirmProfilePin_Label, 3, 0, 1, 1)
        self.ForgotPassword_ProfilePin_Label = QtWidgets.QLabel(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_ProfilePin_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ForgotPassword_ProfilePin_Label.setObjectName("ForgotPassword_ProfilePin_Label")
        self.gridLayout_15.addWidget(self.ForgotPassword_ProfilePin_Label, 1, 0, 1, 1)
        self.ForgotPassword_ConfirmNewPassword_Label = QtWidgets.QLabel(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_ConfirmNewPassword_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ForgotPassword_ConfirmNewPassword_Label.setObjectName("ForgotPassword_ConfirmNewPassword_Label")
        self.gridLayout_15.addWidget(self.ForgotPassword_ConfirmNewPassword_Label, 11, 0, 1, 1)
        spacerItem20 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_15.addItem(spacerItem20, 6, 0, 1, 2)
        spacerItem21 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_15.addItem(spacerItem21, 9, 0, 1, 2)
        self.ForgotPassword_Answer_LineEdit = QtWidgets.QLineEdit(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_Answer_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ForgotPassword_Answer_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ForgotPassword_Answer_LineEdit.setObjectName("ForgotPassword_Answer_LineEdit")
        self.gridLayout_15.addWidget(self.ForgotPassword_Answer_LineEdit, 8, 1, 1, 1)
        self.ForgotPassword_ConfirmNewPassword_LineEdit = QtWidgets.QLineEdit(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_ConfirmNewPassword_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ForgotPassword_ConfirmNewPassword_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ForgotPassword_ConfirmNewPassword_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.ForgotPassword_ConfirmNewPassword_LineEdit.setObjectName("ForgotPassword_ConfirmNewPassword_LineEdit")
        self.gridLayout_15.addWidget(self.ForgotPassword_ConfirmNewPassword_LineEdit, 11, 1, 1, 1)
        self.ForgotPassword_ConfirmProfilePin_LineEdit = QtWidgets.QLineEdit(parent=self.ForgotPassword_Frame_2)
        self.ForgotPassword_ConfirmProfilePin_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ForgotPassword_ConfirmProfilePin_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ForgotPassword_ConfirmProfilePin_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.ForgotPassword_ConfirmProfilePin_LineEdit.setObjectName("ForgotPassword_ConfirmProfilePin_LineEdit")
        self.gridLayout_15.addWidget(self.ForgotPassword_ConfirmProfilePin_LineEdit, 3, 1, 1, 1)
        self.gridLayout_14.addWidget(self.ForgotPassword_Frame_2, 1, 0, 1, 2)
        self.Submit_PushButton_7 = QtWidgets.QPushButton(parent=self.ForgotPassword_Frame_1)
        self.Submit_PushButton_7.setMinimumSize(QtCore.QSize(80, 50))
        self.Submit_PushButton_7.setMaximumSize(QtCore.QSize(90, 16777215))
        self.Submit_PushButton_7.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}\n"
"")
        self.Submit_PushButton_7.setObjectName("Submit_PushButton_7")
        self.gridLayout_14.addWidget(self.Submit_PushButton_7, 2, 1, 1, 1)
        self.ForgotPassword_Label = QtWidgets.QLabel(parent=self.ForgotPassword_Frame_1)
        self.ForgotPassword_Label.setStyleSheet("font: 600 18pt \"Segoe UI\";\n"
"")
        self.ForgotPassword_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ForgotPassword_Label.setObjectName("ForgotPassword_Label")
        self.gridLayout_14.addWidget(self.ForgotPassword_Label, 0, 0, 1, 2)
        self.gridLayout_16.addWidget(self.ForgotPassword_Frame_1, 1, 1, 1, 1)
        spacerItem22 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_16.addItem(spacerItem22, 0, 1, 1, 1)
        spacerItem23 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_16.addItem(spacerItem23, 1, 0, 1, 1)
        spacerItem24 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_16.addItem(spacerItem24, 2, 1, 1, 1)
        self.ForgotPassword_ScrollArea.setWidget(self.scrollAreaWidgetContents_4)
        self.gridLayout_13.addWidget(self.ForgotPassword_ScrollArea, 0, 0, 1, 2)
        self.stackedWidget.addWidget(self.ForgotPassword_Page_3)
        self.Registration_Page_4 = QtWidgets.QWidget()
        self.Registration_Page_4.setObjectName("Registration_Page_4")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.Registration_Page_4)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.Registration_ScrollArea = QtWidgets.QScrollArea(parent=self.Registration_Page_4)
        self.Registration_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.Registration_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.Registration_ScrollArea.setWidgetResizable(True)
        self.Registration_ScrollArea.setObjectName("Registration_ScrollArea")
        self.scrollAreaWidgetContents_5 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_5.setGeometry(QtCore.QRect(0, 0, 1142, 576))
        self.scrollAreaWidgetContents_5.setObjectName("scrollAreaWidgetContents_5")
        self.gridLayout_21 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_5)
        self.gridLayout_21.setObjectName("gridLayout_21")
        self.Registration_Frame_1 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_5)
        self.Registration_Frame_1.setMinimumSize(QtCore.QSize(0, 0))
        self.Registration_Frame_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.Registration_Frame_1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.Registration_Frame_1.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.Registration_Frame_1.setObjectName("Registration_Frame_1")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.Registration_Frame_1)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.Submit_PushButton_8 = QtWidgets.QPushButton(parent=self.Registration_Frame_1)
        self.Submit_PushButton_8.setMinimumSize(QtCore.QSize(80, 50))
        self.Submit_PushButton_8.setMaximumSize(QtCore.QSize(90, 16777215))
        self.Submit_PushButton_8.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}\n"
"")
        self.Submit_PushButton_8.setObjectName("Submit_PushButton_8")
        self.gridLayout_18.addWidget(self.Submit_PushButton_8, 2, 2, 1, 1)
        spacerItem25 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_18.addItem(spacerItem25, 1, 4, 1, 1)
        self.Registration_Label = QtWidgets.QLabel(parent=self.Registration_Frame_1)
        self.Registration_Label.setStyleSheet("font: 600 18pt \"Segoe UI\";")
        self.Registration_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.Registration_Label.setObjectName("Registration_Label")
        self.gridLayout_18.addWidget(self.Registration_Label, 0, 1, 1, 3)
        self.Registration_Frame_2 = QtWidgets.QFrame(parent=self.Registration_Frame_1)
        self.Registration_Frame_2.setMinimumSize(QtCore.QSize(500, 0))
        self.Registration_Frame_2.setMaximumSize(QtCore.QSize(16777215, 400))
        self.Registration_Frame_2.setStyleSheet("background-color: rgb(226, 226, 226);\n"
"padding-left: 5px;\n"
"padding-right: 14px;")
        self.Registration_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.Registration_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.Registration_Frame_2.setObjectName("Registration_Frame_2")
        self.gridLayout_19 = QtWidgets.QGridLayout(self.Registration_Frame_2)
        self.gridLayout_19.setObjectName("gridLayout_19")
        self.Registration_DateEdit = QtWidgets.QDateEdit(parent=self.Registration_Frame_2)
        self.Registration_DateEdit.setStyleSheet("QDateEdit{\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QDateEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QDateEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"\n"
"")
        self.Registration_DateEdit.setObjectName("Registration_DateEdit")
        self.gridLayout_19.addWidget(self.Registration_DateEdit, 5, 2, 1, 1)
        self.Registration_CreateProfilePin_LineEdit = QtWidgets.QLineEdit(parent=self.Registration_Frame_2)
        self.Registration_CreateProfilePin_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_CreateProfilePin_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.Registration_CreateProfilePin_LineEdit.setObjectName("Registration_CreateProfilePin_LineEdit")
        self.gridLayout_19.addWidget(self.Registration_CreateProfilePin_LineEdit, 9, 2, 1, 1)
        self.Registration_FirstName_LineEdit = QtWidgets.QLineEdit(parent=self.Registration_Frame_2)
        self.Registration_FirstName_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_FirstName_LineEdit.setObjectName("Registration_FirstName_LineEdit")
        self.gridLayout_19.addWidget(self.Registration_FirstName_LineEdit, 3, 2, 1, 1)
        self.Registration_Gender_Label = QtWidgets.QLabel(parent=self.Registration_Frame_2)
        self.Registration_Gender_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_Gender_Label.setObjectName("Registration_Gender_Label")
        self.gridLayout_19.addWidget(self.Registration_Gender_Label, 7, 0, 1, 1)
        self.Registration_Password_Label = QtWidgets.QLabel(parent=self.Registration_Frame_2)
        self.Registration_Password_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_Password_Label.setObjectName("Registration_Password_Label")
        self.gridLayout_19.addWidget(self.Registration_Password_Label, 1, 0, 1, 1)
        self.Registration_ConfirmPassword_LineEdit = QtWidgets.QLineEdit(parent=self.Registration_Frame_2)
        self.Registration_ConfirmPassword_LineEdit.setMinimumSize(QtCore.QSize(0, 0))
        self.Registration_ConfirmPassword_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_ConfirmPassword_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.Registration_ConfirmPassword_LineEdit.setObjectName("Registration_ConfirmPassword_LineEdit")
        self.gridLayout_19.addWidget(self.Registration_ConfirmPassword_LineEdit, 2, 2, 1, 1)
        self.Registration_Username_LineEdit = QtWidgets.QLineEdit(parent=self.Registration_Frame_2)
        self.Registration_Username_LineEdit.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.Registration_Username_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_Username_LineEdit.setObjectName("Registration_Username_LineEdit")
        self.gridLayout_19.addWidget(self.Registration_Username_LineEdit, 0, 2, 1, 1)
        self.Registration_Email_LineEdit = QtWidgets.QLineEdit(parent=self.Registration_Frame_2)
        self.Registration_Email_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_Email_LineEdit.setObjectName("Registration_Email_LineEdit")
        self.gridLayout_19.addWidget(self.Registration_Email_LineEdit, 6, 2, 1, 1)
        self.Registration_ConfirmPassword_Label = QtWidgets.QLabel(parent=self.Registration_Frame_2)
        self.Registration_ConfirmPassword_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_ConfirmPassword_Label.setObjectName("Registration_ConfirmPassword_Label")
        self.gridLayout_19.addWidget(self.Registration_ConfirmPassword_Label, 2, 0, 1, 1)
        self.Registration_Surname_Label = QtWidgets.QLabel(parent=self.Registration_Frame_2)
        self.Registration_Surname_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_Surname_Label.setObjectName("Registration_Surname_Label")
        self.gridLayout_19.addWidget(self.Registration_Surname_Label, 4, 0, 1, 1)
        self.Registration_Username_Label = QtWidgets.QLabel(parent=self.Registration_Frame_2)
        self.Registration_Username_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_Username_Label.setObjectName("Registration_Username_Label")
        self.gridLayout_19.addWidget(self.Registration_Username_Label, 0, 0, 1, 1)
        self.Registration_AccountType_Label = QtWidgets.QLabel(parent=self.Registration_Frame_2)
        self.Registration_AccountType_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_AccountType_Label.setObjectName("Registration_AccountType_Label")
        self.gridLayout_19.addWidget(self.Registration_AccountType_Label, 8, 0, 1, 1)
        self.Registration_Surname_LineEdit = QtWidgets.QLineEdit(parent=self.Registration_Frame_2)
        self.Registration_Surname_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_Surname_LineEdit.setObjectName("Registration_Surname_LineEdit")
        self.gridLayout_19.addWidget(self.Registration_Surname_LineEdit, 4, 2, 1, 1)
        self.Registration_SelectAccountType_ComboBox = QtWidgets.QComboBox(parent=self.Registration_Frame_2)
        self.Registration_SelectAccountType_ComboBox.setStyleSheet("QComboBox{\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QComboBox:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QComboBox:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_SelectAccountType_ComboBox.setObjectName("Registration_SelectAccountType_ComboBox")
        self.gridLayout_19.addWidget(self.Registration_SelectAccountType_ComboBox, 8, 2, 1, 1)
        self.Registration_FirstName_Label = QtWidgets.QLabel(parent=self.Registration_Frame_2)
        self.Registration_FirstName_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_FirstName_Label.setObjectName("Registration_FirstName_Label")
        self.gridLayout_19.addWidget(self.Registration_FirstName_Label, 3, 0, 1, 1)
        self.Registration_CreateProfilePin_Label = QtWidgets.QLabel(parent=self.Registration_Frame_2)
        self.Registration_CreateProfilePin_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_CreateProfilePin_Label.setObjectName("Registration_CreateProfilePin_Label")
        self.gridLayout_19.addWidget(self.Registration_CreateProfilePin_Label, 9, 0, 1, 1)
        self.Registration_Password_LineEdit = QtWidgets.QLineEdit(parent=self.Registration_Frame_2)
        self.Registration_Password_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_Password_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.Registration_Password_LineEdit.setObjectName("Registration_Password_LineEdit")
        self.gridLayout_19.addWidget(self.Registration_Password_LineEdit, 1, 2, 1, 1)
        self.Registration_Gender_ComboBox = QtWidgets.QComboBox(parent=self.Registration_Frame_2)
        self.Registration_Gender_ComboBox.setStyleSheet("QComboBox{\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QComboBox:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QComboBox:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_Gender_ComboBox.setObjectName("Registration_Gender_ComboBox")
        self.gridLayout_19.addWidget(self.Registration_Gender_ComboBox, 7, 2, 1, 1)
        self.Registration_DateOfBirth_Label = QtWidgets.QLabel(parent=self.Registration_Frame_2)
        self.Registration_DateOfBirth_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_DateOfBirth_Label.setObjectName("Registration_DateOfBirth_Label")
        self.gridLayout_19.addWidget(self.Registration_DateOfBirth_Label, 5, 0, 1, 1)
        self.Registration_Email_Label = QtWidgets.QLabel(parent=self.Registration_Frame_2)
        self.Registration_Email_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_Email_Label.setObjectName("Registration_Email_Label")
        self.gridLayout_19.addWidget(self.Registration_Email_Label, 6, 0, 1, 1)
        self.Registration_ConfirmProfilePin_Label = QtWidgets.QLabel(parent=self.Registration_Frame_2)
        self.Registration_ConfirmProfilePin_Label.setMinimumSize(QtCore.QSize(0, 0))
        self.Registration_ConfirmProfilePin_Label.setMaximumSize(QtCore.QSize(16777215, 20))
        self.Registration_ConfirmProfilePin_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_ConfirmProfilePin_Label.setObjectName("Registration_ConfirmProfilePin_Label")
        self.gridLayout_19.addWidget(self.Registration_ConfirmProfilePin_Label, 10, 0, 1, 1)
        self.Registration_ConfirmProfilePin_LineEdit = QtWidgets.QLineEdit(parent=self.Registration_Frame_2)
        self.Registration_ConfirmProfilePin_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_ConfirmProfilePin_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.Registration_ConfirmProfilePin_LineEdit.setObjectName("Registration_ConfirmProfilePin_LineEdit")
        self.gridLayout_19.addWidget(self.Registration_ConfirmProfilePin_LineEdit, 10, 2, 1, 1)
        self.gridLayout_18.addWidget(self.Registration_Frame_2, 1, 1, 1, 1)
        spacerItem26 = QtWidgets.QSpacerItem(20, 496, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_18.addItem(spacerItem26, 1, 2, 1, 1)
        self.Registration_Frame_3 = QtWidgets.QFrame(parent=self.Registration_Frame_1)
        self.Registration_Frame_3.setMinimumSize(QtCore.QSize(500, 0))
        self.Registration_Frame_3.setMaximumSize(QtCore.QSize(16777215, 400))
        self.Registration_Frame_3.setStyleSheet("background-color: rgb(226, 226, 226);\n"
"padding-left: 5px;\n"
"padding-right: 14px;")
        self.Registration_Frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.Registration_Frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.Registration_Frame_3.setObjectName("Registration_Frame_3")
        self.gridLayout_20 = QtWidgets.QGridLayout(self.Registration_Frame_3)
        self.gridLayout_20.setObjectName("gridLayout_20")
        self.Registration_Answer_Label = QtWidgets.QLabel(parent=self.Registration_Frame_3)
        self.Registration_Answer_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_Answer_Label.setObjectName("Registration_Answer_Label")
        self.gridLayout_20.addWidget(self.Registration_Answer_Label, 7, 0, 1, 1)
        self.Registration_State_LineEdit = QtWidgets.QLineEdit(parent=self.Registration_Frame_3)
        self.Registration_State_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_State_LineEdit.setObjectName("Registration_State_LineEdit")
        self.gridLayout_20.addWidget(self.Registration_State_LineEdit, 3, 1, 1, 1)
        self.Registration_Answer_LineEdit = QtWidgets.QLineEdit(parent=self.Registration_Frame_3)
        self.Registration_Answer_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_Answer_LineEdit.setObjectName("Registration_Answer_LineEdit")
        self.gridLayout_20.addWidget(self.Registration_Answer_LineEdit, 7, 1, 1, 1)
        self.Registration_SecurityQuestion_Label = QtWidgets.QLabel(parent=self.Registration_Frame_3)
        self.Registration_SecurityQuestion_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_SecurityQuestion_Label.setObjectName("Registration_SecurityQuestion_Label")
        self.gridLayout_20.addWidget(self.Registration_SecurityQuestion_Label, 6, 0, 1, 1)
        self.Registration_State_Label = QtWidgets.QLabel(parent=self.Registration_Frame_3)
        self.Registration_State_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_State_Label.setObjectName("Registration_State_Label")
        self.gridLayout_20.addWidget(self.Registration_State_Label, 3, 0, 1, 1)
        self.Registration_Street_Label = QtWidgets.QLabel(parent=self.Registration_Frame_3)
        self.Registration_Street_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_Street_Label.setObjectName("Registration_Street_Label")
        self.gridLayout_20.addWidget(self.Registration_Street_Label, 1, 0, 1, 1)
        self.Registration_Country_LineEdit = QtWidgets.QLineEdit(parent=self.Registration_Frame_3)
        self.Registration_Country_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_Country_LineEdit.setObjectName("Registration_Country_LineEdit")
        self.gridLayout_20.addWidget(self.Registration_Country_LineEdit, 4, 1, 1, 1)
        self.Registration_Address_Label = QtWidgets.QLabel(parent=self.Registration_Frame_3)
        self.Registration_Address_Label.setStyleSheet("font: 600 16pt \"Segoe UI\"; \n"
"background-color: rgb(200, 200, 200);")
        self.Registration_Address_Label.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.Registration_Address_Label.setObjectName("Registration_Address_Label")
        self.gridLayout_20.addWidget(self.Registration_Address_Label, 0, 0, 1, 1)
        self.Registration_Country_Label = QtWidgets.QLabel(parent=self.Registration_Frame_3)
        self.Registration_Country_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_Country_Label.setObjectName("Registration_Country_Label")
        self.gridLayout_20.addWidget(self.Registration_Country_Label, 4, 0, 1, 1)
        self.Registration_City_Label = QtWidgets.QLabel(parent=self.Registration_Frame_3)
        self.Registration_City_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.Registration_City_Label.setObjectName("Registration_City_Label")
        self.gridLayout_20.addWidget(self.Registration_City_Label, 2, 0, 1, 1)
        self.Registration_Street_LineEdit = QtWidgets.QLineEdit(parent=self.Registration_Frame_3)
        self.Registration_Street_LineEdit.setMinimumSize(QtCore.QSize(0, 0))
        self.Registration_Street_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_Street_LineEdit.setObjectName("Registration_Street_LineEdit")
        self.gridLayout_20.addWidget(self.Registration_Street_LineEdit, 1, 1, 1, 1)
        self.Registration_City_LineEdit = QtWidgets.QLineEdit(parent=self.Registration_Frame_3)
        self.Registration_City_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_City_LineEdit.setObjectName("Registration_City_LineEdit")
        self.gridLayout_20.addWidget(self.Registration_City_LineEdit, 2, 1, 1, 1)
        self.Registration_SecurityQuestion_ComboBox = QtWidgets.QComboBox(parent=self.Registration_Frame_3)
        self.Registration_SecurityQuestion_ComboBox.setStyleSheet("QComboBox{\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QComboBox:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QComboBox:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.Registration_SecurityQuestion_ComboBox.setObjectName("Registration_SecurityQuestion_ComboBox")
        self.gridLayout_20.addWidget(self.Registration_SecurityQuestion_ComboBox, 6, 1, 1, 1)
        spacerItem27 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_20.addItem(spacerItem27, 5, 0, 1, 2)
        self.gridLayout_18.addWidget(self.Registration_Frame_3, 1, 3, 1, 1)
        spacerItem28 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_18.addItem(spacerItem28, 1, 0, 1, 1)
        spacerItem29 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_18.addItem(spacerItem29, 3, 1, 1, 3)
        self.gridLayout_21.addWidget(self.Registration_Frame_1, 0, 0, 1, 1)
        self.Registration_ScrollArea.setWidget(self.scrollAreaWidgetContents_5)
        self.gridLayout_17.addWidget(self.Registration_ScrollArea, 0, 0, 1, 2)
        self.stackedWidget.addWidget(self.Registration_Page_4)
        self.MainAccount_Page_5 = QtWidgets.QWidget()
        self.MainAccount_Page_5.setObjectName("MainAccount_Page_5")
        self.gridLayout_22 = QtWidgets.QGridLayout(self.MainAccount_Page_5)
        self.gridLayout_22.setObjectName("gridLayout_22")
        self.MainAccount_ScrollArea = QtWidgets.QScrollArea(parent=self.MainAccount_Page_5)
        self.MainAccount_ScrollArea.setMinimumSize(QtCore.QSize(100, 100))
        self.MainAccount_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.MainAccount_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.MainAccount_ScrollArea.setWidgetResizable(True)
        self.MainAccount_ScrollArea.setObjectName("MainAccount_ScrollArea")
        self.scrollAreaWidgetContents_6 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_6.setGeometry(QtCore.QRect(0, 0, 817, 593))
        self.scrollAreaWidgetContents_6.setObjectName("scrollAreaWidgetContents_6")
        self.gridLayout_89 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_6)
        self.gridLayout_89.setObjectName("gridLayout_89")
        self.User_First_Surname_Name_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_6)
        self.User_First_Surname_Name_Frame.setMinimumSize(QtCore.QSize(0, 100))
        self.User_First_Surname_Name_Frame.setMaximumSize(QtCore.QSize(16777215, 100))
        self.User_First_Surname_Name_Frame.setStyleSheet("")
        self.User_First_Surname_Name_Frame.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.User_First_Surname_Name_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.User_First_Surname_Name_Frame.setObjectName("User_First_Surname_Name_Frame")
        self.gridLayout_61 = QtWidgets.QGridLayout(self.User_First_Surname_Name_Frame)
        self.gridLayout_61.setObjectName("gridLayout_61")
        self.Account_Profile_PushButton = QtWidgets.QPushButton(parent=self.User_First_Surname_Name_Frame)
        self.Account_Profile_PushButton.setMinimumSize(QtCore.QSize(40, 40))
        self.Account_Profile_PushButton.setMaximumSize(QtCore.QSize(40, 40))
        self.Account_Profile_PushButton.setStyleSheet("QPushButton\n"
"{ \n"
"    background-color: rgb(0, 139, 181);\n"
"    font: 600 12pt \"Segoe UI\"; color: rgb(255, 255, 255);\n"
"    border-radius: 20px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{    \n"
"    background-color: rgb(168, 0, 0);\n"
"}")
        self.Account_Profile_PushButton.setObjectName("Account_Profile_PushButton")
        self.gridLayout_61.addWidget(self.Account_Profile_PushButton, 0, 1, 1, 1)
        self.User_First_Surname_Name_Label = QtWidgets.QLabel(parent=self.User_First_Surname_Name_Frame)
        self.User_First_Surname_Name_Label.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.User_First_Surname_Name_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.User_First_Surname_Name_Label.setObjectName("User_First_Surname_Name_Label")
        self.gridLayout_61.addWidget(self.User_First_Surname_Name_Label, 0, 0, 2, 1)
        self.gridLayout_89.addWidget(self.User_First_Surname_Name_Frame, 0, 0, 1, 2)
        self.MainAccount_Buttons_ScrollArea = QtWidgets.QScrollArea(parent=self.scrollAreaWidgetContents_6)
        self.MainAccount_Buttons_ScrollArea.setMinimumSize(QtCore.QSize(100, 100))
        self.MainAccount_Buttons_ScrollArea.setMaximumSize(QtCore.QSize(220, 16777215))
        self.MainAccount_Buttons_ScrollArea.setWidgetResizable(True)
        self.MainAccount_Buttons_ScrollArea.setObjectName("MainAccount_Buttons_ScrollArea")
        self.scrollAreaWidgetContents_7 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_7.setGeometry(QtCore.QRect(0, 0, 195, 467))
        self.scrollAreaWidgetContents_7.setObjectName("scrollAreaWidgetContents_7")
        self.gridLayout_23 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_7)
        self.gridLayout_23.setObjectName("gridLayout_23")
        self.MainAccount_Buttons_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_7)
        self.MainAccount_Buttons_Frame.setMinimumSize(QtCore.QSize(0, 0))
        self.MainAccount_Buttons_Frame.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.MainAccount_Buttons_Frame.setStyleSheet("background-color: rgb(0, 139, 181);")
        self.MainAccount_Buttons_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.MainAccount_Buttons_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.MainAccount_Buttons_Frame.setObjectName("MainAccount_Buttons_Frame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.MainAccount_Buttons_Frame)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.ViewAccountDetails_PushButton = QtWidgets.QPushButton(parent=self.MainAccount_Buttons_Frame)
        self.ViewAccountDetails_PushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.ViewAccountDetails_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewAccountDetails_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ViewAccountDetails_PushButton.setObjectName("ViewAccountDetails_PushButton")
        self.verticalLayout_2.addWidget(self.ViewAccountDetails_PushButton)
        self.DepositMoney_PushButton = QtWidgets.QPushButton(parent=self.MainAccount_Buttons_Frame)
        self.DepositMoney_PushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.DepositMoney_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.DepositMoney_PushButton.setObjectName("DepositMoney_PushButton")
        self.verticalLayout_2.addWidget(self.DepositMoney_PushButton)
        self.WithdrawMoney_PushButton = QtWidgets.QPushButton(parent=self.MainAccount_Buttons_Frame)
        self.WithdrawMoney_PushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.WithdrawMoney_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.WithdrawMoney_PushButton.setObjectName("WithdrawMoney_PushButton")
        self.verticalLayout_2.addWidget(self.WithdrawMoney_PushButton)
        self.TransferMoney_PushButton = QtWidgets.QPushButton(parent=self.MainAccount_Buttons_Frame)
        self.TransferMoney_PushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.TransferMoney_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.TransferMoney_PushButton.setObjectName("TransferMoney_PushButton")
        self.verticalLayout_2.addWidget(self.TransferMoney_PushButton)
        self.ViewTransaction_PushButton = QtWidgets.QPushButton(parent=self.MainAccount_Buttons_Frame)
        self.ViewTransaction_PushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.ViewTransaction_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ViewTransaction_PushButton.setObjectName("ViewTransaction_PushButton")
        self.verticalLayout_2.addWidget(self.ViewTransaction_PushButton)
        self.ViewBalance_PushButton = QtWidgets.QPushButton(parent=self.MainAccount_Buttons_Frame)
        self.ViewBalance_PushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.ViewBalance_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ViewBalance_PushButton.setObjectName("ViewBalance_PushButton")
        self.verticalLayout_2.addWidget(self.ViewBalance_PushButton)
        self.ATMCardServices_PushButton = QtWidgets.QPushButton(parent=self.MainAccount_Buttons_Frame)
        self.ATMCardServices_PushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.ATMCardServices_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ATMCardServices_PushButton.setObjectName("ATMCardServices_PushButton")
        self.verticalLayout_2.addWidget(self.ATMCardServices_PushButton)
        self.AddAccount_PushButton_1 = QtWidgets.QPushButton(parent=self.MainAccount_Buttons_Frame)
        self.AddAccount_PushButton_1.setMinimumSize(QtCore.QSize(0, 30))
        self.AddAccount_PushButton_1.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.AddAccount_PushButton_1.setObjectName("AddAccount_PushButton_1")
        self.verticalLayout_2.addWidget(self.AddAccount_PushButton_1)
        self.CloseAccount_PushButton = QtWidgets.QPushButton(parent=self.MainAccount_Buttons_Frame)
        self.CloseAccount_PushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.CloseAccount_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.CloseAccount_PushButton.setObjectName("CloseAccount_PushButton")
        self.verticalLayout_2.addWidget(self.CloseAccount_PushButton)
        self.ManageProfile_PushButton = QtWidgets.QPushButton(parent=self.MainAccount_Buttons_Frame)
        self.ManageProfile_PushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.ManageProfile_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ManageProfile_PushButton.setObjectName("ManageProfile_PushButton")
        self.verticalLayout_2.addWidget(self.ManageProfile_PushButton)
        self.gridLayout_23.addWidget(self.MainAccount_Buttons_Frame, 0, 0, 1, 1)
        self.MainAccount_Buttons_ScrollArea.setWidget(self.scrollAreaWidgetContents_7)
        self.gridLayout_89.addWidget(self.MainAccount_Buttons_ScrollArea, 1, 0, 1, 1)
        self.stackedWidget_2 = QtWidgets.QStackedWidget(parent=self.scrollAreaWidgetContents_6)
        self.stackedWidget_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.stackedWidget_2.setObjectName("stackedWidget_2")
        self.WelcomeDelighted_Page_0 = QtWidgets.QWidget()
        self.WelcomeDelighted_Page_0.setObjectName("WelcomeDelighted_Page_0")
        self.gridLayout_150 = QtWidgets.QGridLayout(self.WelcomeDelighted_Page_0)
        self.gridLayout_150.setObjectName("gridLayout_150")
        self.WelcomeDelighted_ScrollArea = QtWidgets.QScrollArea(parent=self.WelcomeDelighted_Page_0)
        self.WelcomeDelighted_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.WelcomeDelighted_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.WelcomeDelighted_ScrollArea.setWidgetResizable(True)
        self.WelcomeDelighted_ScrollArea.setObjectName("WelcomeDelighted_ScrollArea")
        self.scrollAreaWidgetContents_51 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_51.setGeometry(QtCore.QRect(0, 0, 576, 449))
        self.scrollAreaWidgetContents_51.setObjectName("scrollAreaWidgetContents_51")
        self.gridLayout_145 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_51)
        self.gridLayout_145.setObjectName("gridLayout_145")
        self.WelcomeDelighted_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_51)
        self.WelcomeDelighted_Frame.setMinimumSize(QtCore.QSize(0, 0))
        self.WelcomeDelighted_Frame.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.WelcomeDelighted_Frame.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.WelcomeDelighted_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.WelcomeDelighted_Frame.setObjectName("WelcomeDelighted_Frame")
        self.gridLayout_147 = QtWidgets.QGridLayout(self.WelcomeDelighted_Frame)
        self.gridLayout_147.setObjectName("gridLayout_147")
        self.WelcomeDelighted_Frame_2 = QtWidgets.QFrame(parent=self.WelcomeDelighted_Frame)
        self.WelcomeDelighted_Frame_2.setMinimumSize(QtCore.QSize(500, 0))
        self.WelcomeDelighted_Frame_2.setMaximumSize(QtCore.QSize(16777215, 400))
        self.WelcomeDelighted_Frame_2.setStyleSheet("background-color: rgb(226, 226, 226);\n"
"padding-left: 5px;\n"
"padding-right: 14px;")
        self.WelcomeDelighted_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.WelcomeDelighted_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.WelcomeDelighted_Frame_2.setObjectName("WelcomeDelighted_Frame_2")
        self.gridLayout_148 = QtWidgets.QGridLayout(self.WelcomeDelighted_Frame_2)
        self.gridLayout_148.setObjectName("gridLayout_148")
        self.WelcomeDelighted_Label = QtWidgets.QLabel(parent=self.WelcomeDelighted_Frame_2)
        self.WelcomeDelighted_Label.setStyleSheet("font: 600 10pt \"Segoe UI\"; ")
        self.WelcomeDelighted_Label.setObjectName("WelcomeDelighted_Label")
        self.gridLayout_148.addWidget(self.WelcomeDelighted_Label, 0, 0, 1, 1)
        self.gridLayout_147.addWidget(self.WelcomeDelighted_Frame_2, 1, 1, 1, 2)
        spacerItem30 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_147.addItem(spacerItem30, 2, 1, 1, 3)
        spacerItem31 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_147.addItem(spacerItem31, 1, 4, 1, 1)
        spacerItem32 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_147.addItem(spacerItem32, 1, 0, 1, 1)
        spacerItem33 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_147.addItem(spacerItem33, 0, 1, 1, 2)
        self.gridLayout_145.addWidget(self.WelcomeDelighted_Frame, 0, 0, 1, 1)
        self.WelcomeDelighted_ScrollArea.setWidget(self.scrollAreaWidgetContents_51)
        self.gridLayout_150.addWidget(self.WelcomeDelighted_ScrollArea, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.WelcomeDelighted_Page_0)
        self.AccountDetails_Page_1 = QtWidgets.QWidget()
        self.AccountDetails_Page_1.setObjectName("AccountDetails_Page_1")
        self.gridLayout_24 = QtWidgets.QGridLayout(self.AccountDetails_Page_1)
        self.gridLayout_24.setObjectName("gridLayout_24")
        self.AccountDetails_ScrollArea_1 = QtWidgets.QScrollArea(parent=self.AccountDetails_Page_1)
        self.AccountDetails_ScrollArea_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.AccountDetails_ScrollArea_1.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.AccountDetails_ScrollArea_1.setWidgetResizable(True)
        self.AccountDetails_ScrollArea_1.setObjectName("AccountDetails_ScrollArea_1")
        self.scrollAreaWidgetContents_43 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_43.setGeometry(QtCore.QRect(0, 0, 576, 449))
        self.scrollAreaWidgetContents_43.setObjectName("scrollAreaWidgetContents_43")
        self.gridLayout_126 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_43)
        self.gridLayout_126.setObjectName("gridLayout_126")
        self.AccountDetails_Frame_1 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_43)
        self.AccountDetails_Frame_1.setMinimumSize(QtCore.QSize(0, 0))
        self.AccountDetails_Frame_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AccountDetails_Frame_1.setStyleSheet("")
        self.AccountDetails_Frame_1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.AccountDetails_Frame_1.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.AccountDetails_Frame_1.setObjectName("AccountDetails_Frame_1")
        self.gridLayout_127 = QtWidgets.QGridLayout(self.AccountDetails_Frame_1)
        self.gridLayout_127.setObjectName("gridLayout_127")
        spacerItem34 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_127.addItem(spacerItem34, 0, 0, 1, 1)
        self.AccountDetailsSelectTheAccount_Label_2 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_1)
        self.AccountDetailsSelectTheAccount_Label_2.setMinimumSize(QtCore.QSize(0, 35))
        self.AccountDetailsSelectTheAccount_Label_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AccountDetailsSelectTheAccount_Label_2.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.AccountDetailsSelectTheAccount_Label_2.setObjectName("AccountDetailsSelectTheAccount_Label_2")
        self.gridLayout_127.addWidget(self.AccountDetailsSelectTheAccount_Label_2, 3, 0, 1, 2)
        self.AccountDetails_Label_1 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_1)
        self.AccountDetails_Label_1.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.AccountDetails_Label_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.AccountDetails_Label_1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.AccountDetails_Label_1.setObjectName("AccountDetails_Label_1")
        self.gridLayout_127.addWidget(self.AccountDetails_Label_1, 1, 0, 1, 4)
        self.AccountDetailsCancel_PushButton = QtWidgets.QPushButton(parent=self.AccountDetails_Frame_1)
        self.AccountDetailsCancel_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.AccountDetailsCancel_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AccountDetailsCancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.AccountDetailsCancel_PushButton.setObjectName("AccountDetailsCancel_PushButton")
        self.gridLayout_127.addWidget(self.AccountDetailsCancel_PushButton, 7, 3, 1, 1)
        spacerItem35 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_127.addItem(spacerItem35, 6, 0, 1, 4)
        spacerItem36 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_127.addItem(spacerItem36, 2, 0, 1, 4)
        self.AccountDetailsContinue_PushButton = QtWidgets.QPushButton(parent=self.AccountDetails_Frame_1)
        self.AccountDetailsContinue_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.AccountDetailsContinue_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AccountDetailsContinue_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.AccountDetailsContinue_PushButton.setObjectName("AccountDetailsContinue_PushButton")
        self.gridLayout_127.addWidget(self.AccountDetailsContinue_PushButton, 7, 2, 1, 1)
        spacerItem37 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_127.addItem(spacerItem37, 4, 0, 1, 1)
        spacerItem38 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_127.addItem(spacerItem38, 8, 1, 1, 1)
        self.AccountDetails_Frame_4 = QtWidgets.QFrame(parent=self.AccountDetails_Frame_1)
        self.AccountDetails_Frame_4.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.AccountDetails_Frame_4.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.AccountDetails_Frame_4.setObjectName("AccountDetails_Frame_4")
        self.gridLayout_152 = QtWidgets.QGridLayout(self.AccountDetails_Frame_4)
        self.gridLayout_152.setObjectName("gridLayout_152")
        self.AccountDetails_Account_TableWidget = QtWidgets.QTableWidget(parent=self.AccountDetails_Frame_4)
        self.AccountDetails_Account_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.AccountDetails_Account_TableWidget.setStyleSheet("")
        self.AccountDetails_Account_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.AccountDetails_Account_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.AccountDetails_Account_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.AccountDetails_Account_TableWidget.setDragEnabled(False)
        self.AccountDetails_Account_TableWidget.setShowGrid(True)
        self.AccountDetails_Account_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.AccountDetails_Account_TableWidget.setRowCount(0)
        self.AccountDetails_Account_TableWidget.setObjectName("AccountDetails_Account_TableWidget")
        self.AccountDetails_Account_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.AccountDetails_Account_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.AccountDetails_Account_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.AccountDetails_Account_TableWidget.setHorizontalHeaderItem(2, item)
        self.AccountDetails_Account_TableWidget.horizontalHeader().setVisible(True)
        self.AccountDetails_Account_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.AccountDetails_Account_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.AccountDetails_Account_TableWidget.horizontalHeader().setHighlightSections(True)
        self.AccountDetails_Account_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.AccountDetails_Account_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.AccountDetails_Account_TableWidget.verticalHeader().setVisible(True)
        self.AccountDetails_Account_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.AccountDetails_Account_TableWidget.verticalHeader().setDefaultSectionSize(30)
        self.AccountDetails_Account_TableWidget.verticalHeader().setHighlightSections(True)
        self.AccountDetails_Account_TableWidget.verticalHeader().setMinimumSectionSize(24)
        self.AccountDetails_Account_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.AccountDetails_Account_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_152.addWidget(self.AccountDetails_Account_TableWidget, 0, 1, 1, 1)
        spacerItem39 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_152.addItem(spacerItem39, 0, 0, 1, 1)
        spacerItem40 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_152.addItem(spacerItem40, 0, 2, 1, 1)
        self.gridLayout_127.addWidget(self.AccountDetails_Frame_4, 5, 0, 1, 4)
        self.gridLayout_126.addWidget(self.AccountDetails_Frame_1, 0, 0, 1, 1)
        self.AccountDetails_ScrollArea_1.setWidget(self.scrollAreaWidgetContents_43)
        self.gridLayout_24.addWidget(self.AccountDetails_ScrollArea_1, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.AccountDetails_Page_1)
        self.AccountDetails_Page_2 = QtWidgets.QWidget()
        self.AccountDetails_Page_2.setObjectName("AccountDetails_Page_2")
        self.gridLayout_125 = QtWidgets.QGridLayout(self.AccountDetails_Page_2)
        self.gridLayout_125.setObjectName("gridLayout_125")
        self.AccountDetails_ScrollArea_2 = QtWidgets.QScrollArea(parent=self.AccountDetails_Page_2)
        self.AccountDetails_ScrollArea_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.AccountDetails_ScrollArea_2.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.AccountDetails_ScrollArea_2.setWidgetResizable(True)
        self.AccountDetails_ScrollArea_2.setObjectName("AccountDetails_ScrollArea_2")
        self.scrollAreaWidgetContents_8 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_8.setGeometry(QtCore.QRect(0, 0, 576, 449))
        self.scrollAreaWidgetContents_8.setObjectName("scrollAreaWidgetContents_8")
        self.gridLayout_25 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_8)
        self.gridLayout_25.setObjectName("gridLayout_25")
        self.AccountDetails_Frame_2 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_8)
        self.AccountDetails_Frame_2.setMinimumSize(QtCore.QSize(0, 0))
        self.AccountDetails_Frame_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AccountDetails_Frame_2.setStyleSheet("")
        self.AccountDetails_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.AccountDetails_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.AccountDetails_Frame_2.setObjectName("AccountDetails_Frame_2")
        self.gridLayout_56 = QtWidgets.QGridLayout(self.AccountDetails_Frame_2)
        self.gridLayout_56.setObjectName("gridLayout_56")
        self.AccountDetails_ScrollArea_3 = QtWidgets.QScrollArea(parent=self.AccountDetails_Frame_2)
        self.AccountDetails_ScrollArea_3.setMinimumSize(QtCore.QSize(50, 20))
        self.AccountDetails_ScrollArea_3.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.AccountDetails_ScrollArea_3.setWidgetResizable(True)
        self.AccountDetails_ScrollArea_3.setObjectName("AccountDetails_ScrollArea_3")
        self.scrollAreaWidgetContents_39 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_39.setGeometry(QtCore.QRect(0, 0, 526, 370))
        self.scrollAreaWidgetContents_39.setObjectName("scrollAreaWidgetContents_39")
        self.gridLayout_132 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_39)
        self.gridLayout_132.setObjectName("gridLayout_132")
        spacerItem41 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_132.addItem(spacerItem41, 1, 0, 1, 1)
        self.AccountDetails_Frame_3 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_39)
        self.AccountDetails_Frame_3.setMinimumSize(QtCore.QSize(0, 0))
        self.AccountDetails_Frame_3.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AccountDetails_Frame_3.setStyleSheet("background-color: rgb(226, 226, 226);\n"
"padding-left: 5px;\n"
"padding-right: 14px;")
        self.AccountDetails_Frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.AccountDetails_Frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.AccountDetails_Frame_3.setObjectName("AccountDetails_Frame_3")
        self.gridLayout_117 = QtWidgets.QGridLayout(self.AccountDetails_Frame_3)
        self.gridLayout_117.setObjectName("gridLayout_117")
        self.AccountDetails_Street_Label_1 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_Street_Label_1.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AccountDetails_Street_Label_1.setObjectName("AccountDetails_Street_Label_1")
        self.gridLayout_117.addWidget(self.AccountDetails_Street_Label_1, 8, 0, 1, 1)
        self.AccountDetails_Surname_Label_2 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_Surname_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.AccountDetails_Surname_Label_2.setObjectName("AccountDetails_Surname_Label_2")
        self.gridLayout_117.addWidget(self.AccountDetails_Surname_Label_2, 2, 1, 1, 1)
        self.AccountDetails_AccountNumber_Label_2 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_AccountNumber_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.AccountDetails_AccountNumber_Label_2.setObjectName("AccountDetails_AccountNumber_Label_2")
        self.gridLayout_117.addWidget(self.AccountDetails_AccountNumber_Label_2, 0, 1, 1, 1)
        self.AccountDetails_FirstName_Label_2 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_FirstName_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.AccountDetails_FirstName_Label_2.setObjectName("AccountDetails_FirstName_Label_2")
        self.gridLayout_117.addWidget(self.AccountDetails_FirstName_Label_2, 1, 1, 1, 1)
        self.AccountDetails_FirstName_Label_1 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_FirstName_Label_1.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AccountDetails_FirstName_Label_1.setObjectName("AccountDetails_FirstName_Label_1")
        self.gridLayout_117.addWidget(self.AccountDetails_FirstName_Label_1, 1, 0, 1, 1)
        self.AccountDetails_Surname_Label_1 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_Surname_Label_1.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AccountDetails_Surname_Label_1.setObjectName("AccountDetails_Surname_Label_1")
        self.gridLayout_117.addWidget(self.AccountDetails_Surname_Label_1, 2, 0, 1, 1)
        self.AccountDetails_Address_Label = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_Address_Label.setStyleSheet("font: 600 16pt \"Segoe UI\"; \n"
"background-color: rgb(200, 200, 200);")
        self.AccountDetails_Address_Label.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.AccountDetails_Address_Label.setObjectName("AccountDetails_Address_Label")
        self.gridLayout_117.addWidget(self.AccountDetails_Address_Label, 7, 0, 1, 1)
        self.AccountDetails_AccountType_Label_2 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_AccountType_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.AccountDetails_AccountType_Label_2.setObjectName("AccountDetails_AccountType_Label_2")
        self.gridLayout_117.addWidget(self.AccountDetails_AccountType_Label_2, 6, 1, 1, 1)
        self.AccountDetails_Email_Label_1 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_Email_Label_1.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AccountDetails_Email_Label_1.setObjectName("AccountDetails_Email_Label_1")
        self.gridLayout_117.addWidget(self.AccountDetails_Email_Label_1, 4, 0, 1, 1)
        self.AccountDetails_Gender_Label_1 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_Gender_Label_1.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AccountDetails_Gender_Label_1.setObjectName("AccountDetails_Gender_Label_1")
        self.gridLayout_117.addWidget(self.AccountDetails_Gender_Label_1, 5, 0, 1, 1)
        self.AccountDetails_Gender_Label_2 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_Gender_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.AccountDetails_Gender_Label_2.setObjectName("AccountDetails_Gender_Label_2")
        self.gridLayout_117.addWidget(self.AccountDetails_Gender_Label_2, 5, 1, 1, 1)
        self.AccountDetails_AccountNumber_Label_1 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_AccountNumber_Label_1.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AccountDetails_AccountNumber_Label_1.setObjectName("AccountDetails_AccountNumber_Label_1")
        self.gridLayout_117.addWidget(self.AccountDetails_AccountNumber_Label_1, 0, 0, 1, 1)
        self.AccountDetails_DateOfBirth_Label_2 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_DateOfBirth_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.AccountDetails_DateOfBirth_Label_2.setObjectName("AccountDetails_DateOfBirth_Label_2")
        self.gridLayout_117.addWidget(self.AccountDetails_DateOfBirth_Label_2, 3, 1, 1, 1)
        self.AccountDetails_City_Label_1 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_City_Label_1.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AccountDetails_City_Label_1.setObjectName("AccountDetails_City_Label_1")
        self.gridLayout_117.addWidget(self.AccountDetails_City_Label_1, 9, 0, 1, 1)
        self.AccountDetails_AccountType_Label_1 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_AccountType_Label_1.setMaximumSize(QtCore.QSize(160, 16777215))
        self.AccountDetails_AccountType_Label_1.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AccountDetails_AccountType_Label_1.setObjectName("AccountDetails_AccountType_Label_1")
        self.gridLayout_117.addWidget(self.AccountDetails_AccountType_Label_1, 6, 0, 1, 1)
        self.AccountDetails_DateOfBirth_Label_1 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_DateOfBirth_Label_1.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AccountDetails_DateOfBirth_Label_1.setObjectName("AccountDetails_DateOfBirth_Label_1")
        self.gridLayout_117.addWidget(self.AccountDetails_DateOfBirth_Label_1, 3, 0, 1, 1)
        self.AccountDetails_State_Label_1 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_State_Label_1.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AccountDetails_State_Label_1.setObjectName("AccountDetails_State_Label_1")
        self.gridLayout_117.addWidget(self.AccountDetails_State_Label_1, 10, 0, 1, 1)
        self.AccountDetails_Email_Label_2 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_Email_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.AccountDetails_Email_Label_2.setObjectName("AccountDetails_Email_Label_2")
        self.gridLayout_117.addWidget(self.AccountDetails_Email_Label_2, 4, 1, 1, 1)
        self.AccountDetails_Country_Label_1 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_Country_Label_1.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AccountDetails_Country_Label_1.setObjectName("AccountDetails_Country_Label_1")
        self.gridLayout_117.addWidget(self.AccountDetails_Country_Label_1, 11, 0, 1, 1)
        self.AccountDetails_Street_Label_2 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_Street_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.AccountDetails_Street_Label_2.setObjectName("AccountDetails_Street_Label_2")
        self.gridLayout_117.addWidget(self.AccountDetails_Street_Label_2, 8, 1, 1, 1)
        self.AccountDetails_City_Label_2 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_City_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.AccountDetails_City_Label_2.setObjectName("AccountDetails_City_Label_2")
        self.gridLayout_117.addWidget(self.AccountDetails_City_Label_2, 9, 1, 1, 1)
        self.AccountDetails_State_Label_2 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_State_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.AccountDetails_State_Label_2.setObjectName("AccountDetails_State_Label_2")
        self.gridLayout_117.addWidget(self.AccountDetails_State_Label_2, 10, 1, 1, 1)
        self.AccountDetails_Country_Label_2 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_3)
        self.AccountDetails_Country_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.AccountDetails_Country_Label_2.setObjectName("AccountDetails_Country_Label_2")
        self.gridLayout_117.addWidget(self.AccountDetails_Country_Label_2, 11, 1, 1, 1)
        self.gridLayout_132.addWidget(self.AccountDetails_Frame_3, 1, 1, 1, 1)
        spacerItem42 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_132.addItem(spacerItem42, 1, 2, 1, 1)
        self.AccountDetails_ScrollArea_3.setWidget(self.scrollAreaWidgetContents_39)
        self.gridLayout_56.addWidget(self.AccountDetails_ScrollArea_3, 1, 1, 1, 1)
        self.AccountDetails_Label_2 = QtWidgets.QLabel(parent=self.AccountDetails_Frame_2)
        self.AccountDetails_Label_2.setMinimumSize(QtCore.QSize(35, 35))
        self.AccountDetails_Label_2.setMaximumSize(QtCore.QSize(16777215, 35))
        self.AccountDetails_Label_2.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.AccountDetails_Label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.AccountDetails_Label_2.setObjectName("AccountDetails_Label_2")
        self.gridLayout_56.addWidget(self.AccountDetails_Label_2, 0, 0, 1, 3)
        self.gridLayout_25.addWidget(self.AccountDetails_Frame_2, 0, 0, 1, 1)
        self.AccountDetails_ScrollArea_2.setWidget(self.scrollAreaWidgetContents_8)
        self.gridLayout_125.addWidget(self.AccountDetails_ScrollArea_2, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.AccountDetails_Page_2)
        self.DepositMoney_Page_3 = QtWidgets.QWidget()
        self.DepositMoney_Page_3.setObjectName("DepositMoney_Page_3")
        self.gridLayout_26 = QtWidgets.QGridLayout(self.DepositMoney_Page_3)
        self.gridLayout_26.setObjectName("gridLayout_26")
        self.DepositMoney_ScrollArea = QtWidgets.QScrollArea(parent=self.DepositMoney_Page_3)
        self.DepositMoney_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.DepositMoney_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.DepositMoney_ScrollArea.setWidgetResizable(True)
        self.DepositMoney_ScrollArea.setObjectName("DepositMoney_ScrollArea")
        self.scrollAreaWidgetContents_9 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_9.setGeometry(QtCore.QRect(0, 0, 576, 449))
        self.scrollAreaWidgetContents_9.setObjectName("scrollAreaWidgetContents_9")
        self.gridLayout_27 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_9)
        self.gridLayout_27.setObjectName("gridLayout_27")
        self.DepositMoney_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_9)
        self.DepositMoney_Frame.setMinimumSize(QtCore.QSize(0, 0))
        self.DepositMoney_Frame.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.DepositMoney_Frame.setStyleSheet("")
        self.DepositMoney_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.DepositMoney_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.DepositMoney_Frame.setObjectName("DepositMoney_Frame")
        self.gridLayout_58 = QtWidgets.QGridLayout(self.DepositMoney_Frame)
        self.gridLayout_58.setObjectName("gridLayout_58")
        self.DepositMoneySelectTheAccount_Label = QtWidgets.QLabel(parent=self.DepositMoney_Frame)
        self.DepositMoneySelectTheAccount_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.DepositMoneySelectTheAccount_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.DepositMoneySelectTheAccount_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.DepositMoneySelectTheAccount_Label.setObjectName("DepositMoneySelectTheAccount_Label")
        self.gridLayout_58.addWidget(self.DepositMoneySelectTheAccount_Label, 3, 0, 1, 2)
        spacerItem43 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_58.addItem(spacerItem43, 4, 0, 1, 1)
        self.DepositMoney_Cancel_PushButton = QtWidgets.QPushButton(parent=self.DepositMoney_Frame)
        self.DepositMoney_Cancel_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.DepositMoney_Cancel_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.DepositMoney_Cancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.DepositMoney_Cancel_PushButton.setObjectName("DepositMoney_Cancel_PushButton")
        self.gridLayout_58.addWidget(self.DepositMoney_Cancel_PushButton, 7, 3, 1, 1)
        self.DepositMoneyContinue_PushButton = QtWidgets.QPushButton(parent=self.DepositMoney_Frame)
        self.DepositMoneyContinue_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.DepositMoneyContinue_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.DepositMoneyContinue_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.DepositMoneyContinue_PushButton.setObjectName("DepositMoneyContinue_PushButton")
        self.gridLayout_58.addWidget(self.DepositMoneyContinue_PushButton, 7, 2, 1, 1)
        spacerItem44 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_58.addItem(spacerItem44, 8, 1, 1, 1)
        self.DepositMoney_Label = QtWidgets.QLabel(parent=self.DepositMoney_Frame)
        self.DepositMoney_Label.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.DepositMoney_Label.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.DepositMoney_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.DepositMoney_Label.setObjectName("DepositMoney_Label")
        self.gridLayout_58.addWidget(self.DepositMoney_Label, 1, 0, 1, 4)
        spacerItem45 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_58.addItem(spacerItem45, 6, 0, 1, 4)
        spacerItem46 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_58.addItem(spacerItem46, 0, 0, 1, 1)
        spacerItem47 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_58.addItem(spacerItem47, 2, 0, 1, 4)
        self.DepositMoney_Frame_2 = QtWidgets.QFrame(parent=self.DepositMoney_Frame)
        self.DepositMoney_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.DepositMoney_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.DepositMoney_Frame_2.setObjectName("DepositMoney_Frame_2")
        self.gridLayout_153 = QtWidgets.QGridLayout(self.DepositMoney_Frame_2)
        self.gridLayout_153.setObjectName("gridLayout_153")
        self.DepositMoney_Account_TableWidget = QtWidgets.QTableWidget(parent=self.DepositMoney_Frame_2)
        self.DepositMoney_Account_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.DepositMoney_Account_TableWidget.setStyleSheet("")
        self.DepositMoney_Account_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.DepositMoney_Account_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.DepositMoney_Account_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.DepositMoney_Account_TableWidget.setDragEnabled(False)
        self.DepositMoney_Account_TableWidget.setShowGrid(True)
        self.DepositMoney_Account_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.DepositMoney_Account_TableWidget.setRowCount(0)
        self.DepositMoney_Account_TableWidget.setObjectName("DepositMoney_Account_TableWidget")
        self.DepositMoney_Account_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.DepositMoney_Account_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.DepositMoney_Account_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.DepositMoney_Account_TableWidget.setHorizontalHeaderItem(2, item)
        self.DepositMoney_Account_TableWidget.horizontalHeader().setVisible(True)
        self.DepositMoney_Account_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.DepositMoney_Account_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.DepositMoney_Account_TableWidget.horizontalHeader().setHighlightSections(True)
        self.DepositMoney_Account_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.DepositMoney_Account_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.DepositMoney_Account_TableWidget.verticalHeader().setVisible(True)
        self.DepositMoney_Account_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.DepositMoney_Account_TableWidget.verticalHeader().setHighlightSections(True)
        self.DepositMoney_Account_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.DepositMoney_Account_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_153.addWidget(self.DepositMoney_Account_TableWidget, 0, 1, 1, 1)
        spacerItem48 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_153.addItem(spacerItem48, 0, 0, 1, 1)
        spacerItem49 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_153.addItem(spacerItem49, 0, 2, 1, 1)
        self.gridLayout_58.addWidget(self.DepositMoney_Frame_2, 5, 0, 1, 4)
        self.gridLayout_27.addWidget(self.DepositMoney_Frame, 0, 0, 1, 1)
        self.DepositMoney_ScrollArea.setWidget(self.scrollAreaWidgetContents_9)
        self.gridLayout_26.addWidget(self.DepositMoney_ScrollArea, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.DepositMoney_Page_3)
        self.DepositAmount_Page_4 = QtWidgets.QWidget()
        self.DepositAmount_Page_4.setObjectName("DepositAmount_Page_4")
        self.gridLayout_28 = QtWidgets.QGridLayout(self.DepositAmount_Page_4)
        self.gridLayout_28.setObjectName("gridLayout_28")
        self.DepositAmount_ScrollArea = QtWidgets.QScrollArea(parent=self.DepositAmount_Page_4)
        self.DepositAmount_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.DepositAmount_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.DepositAmount_ScrollArea.setWidgetResizable(True)
        self.DepositAmount_ScrollArea.setObjectName("DepositAmount_ScrollArea")
        self.scrollAreaWidgetContents_10 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_10.setGeometry(QtCore.QRect(0, 0, 576, 449))
        self.scrollAreaWidgetContents_10.setObjectName("scrollAreaWidgetContents_10")
        self.gridLayout_29 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_10)
        self.gridLayout_29.setObjectName("gridLayout_29")
        self.DepositAmount_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_10)
        self.DepositAmount_Frame.setMinimumSize(QtCore.QSize(0, 0))
        self.DepositAmount_Frame.setMaximumSize(QtCore.QSize(400, 16777215))
        self.DepositAmount_Frame.setStyleSheet("")
        self.DepositAmount_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.DepositAmount_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.DepositAmount_Frame.setObjectName("DepositAmount_Frame")
        self.gridLayout_35 = QtWidgets.QGridLayout(self.DepositAmount_Frame)
        self.gridLayout_35.setObjectName("gridLayout_35")
        spacerItem50 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_35.addItem(spacerItem50, 4, 0, 1, 2)
        spacerItem51 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_35.addItem(spacerItem51, 2, 0, 1, 2)
        self.DepositAmount_Label = QtWidgets.QLabel(parent=self.DepositAmount_Frame)
        self.DepositAmount_Label.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.DepositAmount_Label.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.DepositAmount_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.DepositAmount_Label.setObjectName("DepositAmount_Label")
        self.gridLayout_35.addWidget(self.DepositAmount_Label, 1, 0, 1, 2)
        self.DepositAmount_Cancel_PushButton = QtWidgets.QPushButton(parent=self.DepositAmount_Frame)
        self.DepositAmount_Cancel_PushButton.setMinimumSize(QtCore.QSize(0, 40))
        self.DepositAmount_Cancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.DepositAmount_Cancel_PushButton.setObjectName("DepositAmount_Cancel_PushButton")
        self.gridLayout_35.addWidget(self.DepositAmount_Cancel_PushButton, 5, 1, 1, 1)
        self.DepositAmountConfirm_PushButton = QtWidgets.QPushButton(parent=self.DepositAmount_Frame)
        self.DepositAmountConfirm_PushButton.setMinimumSize(QtCore.QSize(0, 40))
        self.DepositAmountConfirm_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.DepositAmountConfirm_PushButton.setObjectName("DepositAmountConfirm_PushButton")
        self.gridLayout_35.addWidget(self.DepositAmountConfirm_PushButton, 5, 0, 1, 1)
        self.DepositAmount_LineEdit = QtWidgets.QLineEdit(parent=self.DepositAmount_Frame)
        self.DepositAmount_LineEdit.setMinimumSize(QtCore.QSize(0, 45))
        self.DepositAmount_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.DepositAmount_LineEdit.setObjectName("DepositAmount_LineEdit")
        self.gridLayout_35.addWidget(self.DepositAmount_LineEdit, 3, 0, 1, 2)
        spacerItem52 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_35.addItem(spacerItem52, 6, 0, 1, 1)
        spacerItem53 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_35.addItem(spacerItem53, 0, 0, 1, 1)
        self.gridLayout_29.addWidget(self.DepositAmount_Frame, 0, 0, 1, 1)
        self.DepositAmount_ScrollArea.setWidget(self.scrollAreaWidgetContents_10)
        self.gridLayout_28.addWidget(self.DepositAmount_ScrollArea, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.DepositAmount_Page_4)
        self.WithdrawMoney_Page_5 = QtWidgets.QWidget()
        self.WithdrawMoney_Page_5.setObjectName("WithdrawMoney_Page_5")
        self.gridLayout_30 = QtWidgets.QGridLayout(self.WithdrawMoney_Page_5)
        self.gridLayout_30.setObjectName("gridLayout_30")
        self.WithdrawMoney_ScrollArea = QtWidgets.QScrollArea(parent=self.WithdrawMoney_Page_5)
        self.WithdrawMoney_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.WithdrawMoney_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.WithdrawMoney_ScrollArea.setWidgetResizable(True)
        self.WithdrawMoney_ScrollArea.setObjectName("WithdrawMoney_ScrollArea")
        self.scrollAreaWidgetContents_11 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_11.setGeometry(QtCore.QRect(0, 0, 576, 449))
        self.scrollAreaWidgetContents_11.setObjectName("scrollAreaWidgetContents_11")
        self.gridLayout_31 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_11)
        self.gridLayout_31.setObjectName("gridLayout_31")
        self.WithdrawMoney_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_11)
        self.WithdrawMoney_Frame.setMinimumSize(QtCore.QSize(0, 0))
        self.WithdrawMoney_Frame.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.WithdrawMoney_Frame.setStyleSheet("")
        self.WithdrawMoney_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.WithdrawMoney_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.WithdrawMoney_Frame.setObjectName("WithdrawMoney_Frame")
        self.gridLayout_59 = QtWidgets.QGridLayout(self.WithdrawMoney_Frame)
        self.gridLayout_59.setObjectName("gridLayout_59")
        self.WithdrawMoneyCancel_PushButton = QtWidgets.QPushButton(parent=self.WithdrawMoney_Frame)
        self.WithdrawMoneyCancel_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.WithdrawMoneyCancel_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.WithdrawMoneyCancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.WithdrawMoneyCancel_PushButton.setObjectName("WithdrawMoneyCancel_PushButton")
        self.gridLayout_59.addWidget(self.WithdrawMoneyCancel_PushButton, 7, 3, 1, 1)
        spacerItem54 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_59.addItem(spacerItem54, 8, 1, 1, 1)
        self.WithdrawMoneySelectTheAccount_Label = QtWidgets.QLabel(parent=self.WithdrawMoney_Frame)
        self.WithdrawMoneySelectTheAccount_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.WithdrawMoneySelectTheAccount_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.WithdrawMoneySelectTheAccount_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.WithdrawMoneySelectTheAccount_Label.setObjectName("WithdrawMoneySelectTheAccount_Label")
        self.gridLayout_59.addWidget(self.WithdrawMoneySelectTheAccount_Label, 3, 0, 1, 2)
        self.WithdrawMoney_Label = QtWidgets.QLabel(parent=self.WithdrawMoney_Frame)
        self.WithdrawMoney_Label.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.WithdrawMoney_Label.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.WithdrawMoney_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.WithdrawMoney_Label.setObjectName("WithdrawMoney_Label")
        self.gridLayout_59.addWidget(self.WithdrawMoney_Label, 1, 0, 1, 4)
        spacerItem55 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_59.addItem(spacerItem55, 4, 0, 1, 1)
        spacerItem56 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_59.addItem(spacerItem56, 0, 0, 1, 1)
        spacerItem57 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_59.addItem(spacerItem57, 6, 0, 1, 4)
        spacerItem58 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_59.addItem(spacerItem58, 2, 0, 1, 4)
        self.WithdrawMoneyContinue_PushButton = QtWidgets.QPushButton(parent=self.WithdrawMoney_Frame)
        self.WithdrawMoneyContinue_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.WithdrawMoneyContinue_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.WithdrawMoneyContinue_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.WithdrawMoneyContinue_PushButton.setObjectName("WithdrawMoneyContinue_PushButton")
        self.gridLayout_59.addWidget(self.WithdrawMoneyContinue_PushButton, 7, 2, 1, 1)
        self.WithdrawMoney_Frame_2 = QtWidgets.QFrame(parent=self.WithdrawMoney_Frame)
        self.WithdrawMoney_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.WithdrawMoney_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.WithdrawMoney_Frame_2.setObjectName("WithdrawMoney_Frame_2")
        self.gridLayout_154 = QtWidgets.QGridLayout(self.WithdrawMoney_Frame_2)
        self.gridLayout_154.setObjectName("gridLayout_154")
        spacerItem59 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_154.addItem(spacerItem59, 0, 0, 1, 1)
        self.WithdrawMoney_Account_TableWidget = QtWidgets.QTableWidget(parent=self.WithdrawMoney_Frame_2)
        self.WithdrawMoney_Account_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.WithdrawMoney_Account_TableWidget.setStyleSheet("")
        self.WithdrawMoney_Account_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.WithdrawMoney_Account_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.WithdrawMoney_Account_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.WithdrawMoney_Account_TableWidget.setDragEnabled(False)
        self.WithdrawMoney_Account_TableWidget.setShowGrid(True)
        self.WithdrawMoney_Account_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.WithdrawMoney_Account_TableWidget.setRowCount(0)
        self.WithdrawMoney_Account_TableWidget.setObjectName("WithdrawMoney_Account_TableWidget")
        self.WithdrawMoney_Account_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.WithdrawMoney_Account_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.WithdrawMoney_Account_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.WithdrawMoney_Account_TableWidget.setHorizontalHeaderItem(2, item)
        self.WithdrawMoney_Account_TableWidget.horizontalHeader().setVisible(True)
        self.WithdrawMoney_Account_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.WithdrawMoney_Account_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.WithdrawMoney_Account_TableWidget.horizontalHeader().setHighlightSections(True)
        self.WithdrawMoney_Account_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.WithdrawMoney_Account_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.WithdrawMoney_Account_TableWidget.verticalHeader().setVisible(True)
        self.WithdrawMoney_Account_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.WithdrawMoney_Account_TableWidget.verticalHeader().setHighlightSections(True)
        self.WithdrawMoney_Account_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.WithdrawMoney_Account_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_154.addWidget(self.WithdrawMoney_Account_TableWidget, 0, 1, 1, 1)
        spacerItem60 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_154.addItem(spacerItem60, 0, 2, 1, 1)
        self.gridLayout_59.addWidget(self.WithdrawMoney_Frame_2, 5, 0, 1, 4)
        self.gridLayout_31.addWidget(self.WithdrawMoney_Frame, 0, 0, 1, 1)
        self.WithdrawMoney_ScrollArea.setWidget(self.scrollAreaWidgetContents_11)
        self.gridLayout_30.addWidget(self.WithdrawMoney_ScrollArea, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.WithdrawMoney_Page_5)
        self.WithdrawAmount_Page_6 = QtWidgets.QWidget()
        self.WithdrawAmount_Page_6.setObjectName("WithdrawAmount_Page_6")
        self.gridLayout_32 = QtWidgets.QGridLayout(self.WithdrawAmount_Page_6)
        self.gridLayout_32.setObjectName("gridLayout_32")
        self.WithdrawAmount_ScrollArea = QtWidgets.QScrollArea(parent=self.WithdrawAmount_Page_6)
        self.WithdrawAmount_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.WithdrawAmount_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.WithdrawAmount_ScrollArea.setWidgetResizable(True)
        self.WithdrawAmount_ScrollArea.setObjectName("WithdrawAmount_ScrollArea")
        self.scrollAreaWidgetContents_12 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_12.setGeometry(QtCore.QRect(0, 0, 576, 449))
        self.scrollAreaWidgetContents_12.setObjectName("scrollAreaWidgetContents_12")
        self.gridLayout_33 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_12)
        self.gridLayout_33.setObjectName("gridLayout_33")
        self.WithdrawAmount_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_12)
        self.WithdrawAmount_Frame.setMinimumSize(QtCore.QSize(0, 0))
        self.WithdrawAmount_Frame.setMaximumSize(QtCore.QSize(400, 16777215))
        self.WithdrawAmount_Frame.setStyleSheet("")
        self.WithdrawAmount_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.WithdrawAmount_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.WithdrawAmount_Frame.setObjectName("WithdrawAmount_Frame")
        self.gridLayout_60 = QtWidgets.QGridLayout(self.WithdrawAmount_Frame)
        self.gridLayout_60.setObjectName("gridLayout_60")
        spacerItem61 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_60.addItem(spacerItem61, 4, 0, 1, 2)
        spacerItem62 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_60.addItem(spacerItem62, 2, 0, 1, 2)
        self.WithdrawAmount_Label = QtWidgets.QLabel(parent=self.WithdrawAmount_Frame)
        self.WithdrawAmount_Label.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.WithdrawAmount_Label.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.WithdrawAmount_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.WithdrawAmount_Label.setObjectName("WithdrawAmount_Label")
        self.gridLayout_60.addWidget(self.WithdrawAmount_Label, 1, 0, 1, 2)
        self.WithdrawAmountCancel_PushButton = QtWidgets.QPushButton(parent=self.WithdrawAmount_Frame)
        self.WithdrawAmountCancel_PushButton.setMinimumSize(QtCore.QSize(0, 40))
        self.WithdrawAmountCancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.WithdrawAmountCancel_PushButton.setObjectName("WithdrawAmountCancel_PushButton")
        self.gridLayout_60.addWidget(self.WithdrawAmountCancel_PushButton, 5, 1, 1, 1)
        self.WithdrawAmount_PushButton = QtWidgets.QPushButton(parent=self.WithdrawAmount_Frame)
        self.WithdrawAmount_PushButton.setMinimumSize(QtCore.QSize(0, 40))
        self.WithdrawAmount_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.WithdrawAmount_PushButton.setObjectName("WithdrawAmount_PushButton")
        self.gridLayout_60.addWidget(self.WithdrawAmount_PushButton, 5, 0, 1, 1)
        self.WithdrawAmount_LineEdit = QtWidgets.QLineEdit(parent=self.WithdrawAmount_Frame)
        self.WithdrawAmount_LineEdit.setMinimumSize(QtCore.QSize(0, 45))
        self.WithdrawAmount_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.WithdrawAmount_LineEdit.setObjectName("WithdrawAmount_LineEdit")
        self.gridLayout_60.addWidget(self.WithdrawAmount_LineEdit, 3, 0, 1, 2)
        spacerItem63 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_60.addItem(spacerItem63, 6, 0, 1, 1)
        spacerItem64 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_60.addItem(spacerItem64, 0, 0, 1, 1)
        self.gridLayout_33.addWidget(self.WithdrawAmount_Frame, 0, 0, 1, 1)
        self.WithdrawAmount_ScrollArea.setWidget(self.scrollAreaWidgetContents_12)
        self.gridLayout_32.addWidget(self.WithdrawAmount_ScrollArea, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.WithdrawAmount_Page_6)
        self.Transfer_Page_7 = QtWidgets.QWidget()
        self.Transfer_Page_7.setObjectName("Transfer_Page_7")
        self.gridLayout_34 = QtWidgets.QGridLayout(self.Transfer_Page_7)
        self.gridLayout_34.setObjectName("gridLayout_34")
        self.Transfer_ScrollArea_1 = QtWidgets.QScrollArea(parent=self.Transfer_Page_7)
        self.Transfer_ScrollArea_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.Transfer_ScrollArea_1.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.Transfer_ScrollArea_1.setWidgetResizable(True)
        self.Transfer_ScrollArea_1.setObjectName("Transfer_ScrollArea_1")
        self.scrollAreaWidgetContents_13 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_13.setGeometry(QtCore.QRect(0, 0, 576, 449))
        self.scrollAreaWidgetContents_13.setObjectName("scrollAreaWidgetContents_13")
        self.gridLayout_36 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_13)
        self.gridLayout_36.setObjectName("gridLayout_36")
        self.Transfer_Frame_1 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_13)
        self.Transfer_Frame_1.setMinimumSize(QtCore.QSize(0, 0))
        self.Transfer_Frame_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.Transfer_Frame_1.setStyleSheet("")
        self.Transfer_Frame_1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.Transfer_Frame_1.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.Transfer_Frame_1.setObjectName("Transfer_Frame_1")
        self.gridLayout_62 = QtWidgets.QGridLayout(self.Transfer_Frame_1)
        self.gridLayout_62.setObjectName("gridLayout_62")
        spacerItem65 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_62.addItem(spacerItem65, 0, 0, 1, 1)
        spacerItem66 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_62.addItem(spacerItem66, 4, 0, 1, 1)
        spacerItem67 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_62.addItem(spacerItem67, 6, 0, 1, 4)
        self.TransferCancel_PushButton_1 = QtWidgets.QPushButton(parent=self.Transfer_Frame_1)
        self.TransferCancel_PushButton_1.setMinimumSize(QtCore.QSize(100, 40))
        self.TransferCancel_PushButton_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.TransferCancel_PushButton_1.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.TransferCancel_PushButton_1.setObjectName("TransferCancel_PushButton_1")
        self.gridLayout_62.addWidget(self.TransferCancel_PushButton_1, 7, 3, 1, 1)
        spacerItem68 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_62.addItem(spacerItem68, 8, 1, 1, 1)
        self.TransferContinue_PushButton = QtWidgets.QPushButton(parent=self.Transfer_Frame_1)
        self.TransferContinue_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.TransferContinue_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.TransferContinue_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.TransferContinue_PushButton.setObjectName("TransferContinue_PushButton")
        self.gridLayout_62.addWidget(self.TransferContinue_PushButton, 7, 2, 1, 1)
        self.TransferSelectTheAccount_Label = QtWidgets.QLabel(parent=self.Transfer_Frame_1)
        self.TransferSelectTheAccount_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.TransferSelectTheAccount_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.TransferSelectTheAccount_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.TransferSelectTheAccount_Label.setObjectName("TransferSelectTheAccount_Label")
        self.gridLayout_62.addWidget(self.TransferSelectTheAccount_Label, 3, 0, 1, 2)
        spacerItem69 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_62.addItem(spacerItem69, 2, 0, 1, 4)
        self.Transfer_Label_1 = QtWidgets.QLabel(parent=self.Transfer_Frame_1)
        self.Transfer_Label_1.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.Transfer_Label_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.Transfer_Label_1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.Transfer_Label_1.setObjectName("Transfer_Label_1")
        self.gridLayout_62.addWidget(self.Transfer_Label_1, 1, 0, 1, 4)
        self.Transfer_Frame_3 = QtWidgets.QFrame(parent=self.Transfer_Frame_1)
        self.Transfer_Frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.Transfer_Frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.Transfer_Frame_3.setObjectName("Transfer_Frame_3")
        self.gridLayout_155 = QtWidgets.QGridLayout(self.Transfer_Frame_3)
        self.gridLayout_155.setObjectName("gridLayout_155")
        spacerItem70 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_155.addItem(spacerItem70, 0, 0, 1, 1)
        self.Transfer_Account_TableWidget = QtWidgets.QTableWidget(parent=self.Transfer_Frame_3)
        self.Transfer_Account_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.Transfer_Account_TableWidget.setStyleSheet("")
        self.Transfer_Account_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.Transfer_Account_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.Transfer_Account_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.Transfer_Account_TableWidget.setDragEnabled(False)
        self.Transfer_Account_TableWidget.setShowGrid(True)
        self.Transfer_Account_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.Transfer_Account_TableWidget.setRowCount(0)
        self.Transfer_Account_TableWidget.setObjectName("Transfer_Account_TableWidget")
        self.Transfer_Account_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.Transfer_Account_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.Transfer_Account_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.Transfer_Account_TableWidget.setHorizontalHeaderItem(2, item)
        self.Transfer_Account_TableWidget.horizontalHeader().setVisible(True)
        self.Transfer_Account_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.Transfer_Account_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.Transfer_Account_TableWidget.horizontalHeader().setHighlightSections(True)
        self.Transfer_Account_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.Transfer_Account_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.Transfer_Account_TableWidget.verticalHeader().setVisible(True)
        self.Transfer_Account_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.Transfer_Account_TableWidget.verticalHeader().setHighlightSections(True)
        self.Transfer_Account_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.Transfer_Account_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_155.addWidget(self.Transfer_Account_TableWidget, 0, 1, 1, 1)
        spacerItem71 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_155.addItem(spacerItem71, 0, 2, 1, 1)
        self.gridLayout_62.addWidget(self.Transfer_Frame_3, 5, 0, 1, 4)
        self.gridLayout_36.addWidget(self.Transfer_Frame_1, 0, 0, 1, 1)
        self.Transfer_ScrollArea_1.setWidget(self.scrollAreaWidgetContents_13)
        self.gridLayout_34.addWidget(self.Transfer_ScrollArea_1, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.Transfer_Page_7)
        self.Transfer_Page_8 = QtWidgets.QWidget()
        self.Transfer_Page_8.setObjectName("Transfer_Page_8")
        self.gridLayout_37 = QtWidgets.QGridLayout(self.Transfer_Page_8)
        self.gridLayout_37.setObjectName("gridLayout_37")
        self.Transfer_ScrollArea_2 = QtWidgets.QScrollArea(parent=self.Transfer_Page_8)
        self.Transfer_ScrollArea_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.Transfer_ScrollArea_2.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.Transfer_ScrollArea_2.setWidgetResizable(True)
        self.Transfer_ScrollArea_2.setObjectName("Transfer_ScrollArea_2")
        self.scrollAreaWidgetContents_14 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_14.setGeometry(QtCore.QRect(0, 0, 576, 449))
        self.scrollAreaWidgetContents_14.setObjectName("scrollAreaWidgetContents_14")
        self.gridLayout_39 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_14)
        self.gridLayout_39.setObjectName("gridLayout_39")
        self.Transfer_Frame_2 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_14)
        self.Transfer_Frame_2.setMinimumSize(QtCore.QSize(0, 0))
        self.Transfer_Frame_2.setMaximumSize(QtCore.QSize(600, 16777215))
        self.Transfer_Frame_2.setStyleSheet("")
        self.Transfer_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.Transfer_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.Transfer_Frame_2.setObjectName("Transfer_Frame_2")
        self.gridLayout_38 = QtWidgets.QGridLayout(self.Transfer_Frame_2)
        self.gridLayout_38.setObjectName("gridLayout_38")
        self.RecipientName_Label = QtWidgets.QLabel(parent=self.Transfer_Frame_2)
        self.RecipientName_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.RecipientName_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.RecipientName_Label.setObjectName("RecipientName_Label")
        self.gridLayout_38.addWidget(self.RecipientName_Label, 3, 0, 1, 1)
        spacerItem72 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_38.addItem(spacerItem72, 2, 0, 1, 5)
        self.Transfer_Label_2 = QtWidgets.QLabel(parent=self.Transfer_Frame_2)
        self.Transfer_Label_2.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.Transfer_Label_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.Transfer_Label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.Transfer_Label_2.setObjectName("Transfer_Label_2")
        self.gridLayout_38.addWidget(self.Transfer_Label_2, 1, 0, 1, 5)
        self.TransferAmount_LineEdit = QtWidgets.QLineEdit(parent=self.Transfer_Frame_2)
        self.TransferAmount_LineEdit.setMinimumSize(QtCore.QSize(0, 35))
        self.TransferAmount_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 14pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.TransferAmount_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Normal)
        self.TransferAmount_LineEdit.setObjectName("TransferAmount_LineEdit")
        self.gridLayout_38.addWidget(self.TransferAmount_LineEdit, 6, 2, 1, 3)
        spacerItem73 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_38.addItem(spacerItem73, 9, 0, 1, 5)
        spacerItem74 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_38.addItem(spacerItem74, 0, 0, 1, 5)
        self.TransferConfirm_PushButton = QtWidgets.QPushButton(parent=self.Transfer_Frame_2)
        self.TransferConfirm_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.TransferConfirm_PushButton.setMaximumSize(QtCore.QSize(100, 16777215))
        self.TransferConfirm_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.TransferConfirm_PushButton.setObjectName("TransferConfirm_PushButton")
        self.gridLayout_38.addWidget(self.TransferConfirm_PushButton, 8, 3, 1, 1)
        spacerItem75 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_38.addItem(spacerItem75, 5, 0, 1, 5)
        self.ReceiverAccountNumber_Label = QtWidgets.QLabel(parent=self.Transfer_Frame_2)
        self.ReceiverAccountNumber_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.ReceiverAccountNumber_Label.setObjectName("ReceiverAccountNumber_Label")
        self.gridLayout_38.addWidget(self.ReceiverAccountNumber_Label, 4, 0, 1, 1)
        self.TransferAmount_Label = QtWidgets.QLabel(parent=self.Transfer_Frame_2)
        self.TransferAmount_Label.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.TransferAmount_Label.setObjectName("TransferAmount_Label")
        self.gridLayout_38.addWidget(self.TransferAmount_Label, 6, 0, 1, 1)
        spacerItem76 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_38.addItem(spacerItem76, 7, 0, 1, 5)
        self.TransferCancel_PushButton_2 = QtWidgets.QPushButton(parent=self.Transfer_Frame_2)
        self.TransferCancel_PushButton_2.setMinimumSize(QtCore.QSize(100, 40))
        self.TransferCancel_PushButton_2.setMaximumSize(QtCore.QSize(100, 16777215))
        self.TransferCancel_PushButton_2.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.TransferCancel_PushButton_2.setObjectName("TransferCancel_PushButton_2")
        self.gridLayout_38.addWidget(self.TransferCancel_PushButton_2, 8, 4, 1, 1)
        self.RecipientName_LineEdit = QtWidgets.QLineEdit(parent=self.Transfer_Frame_2)
        self.RecipientName_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.RecipientName_LineEdit.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.RecipientName_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.RecipientName_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Normal)
        self.RecipientName_LineEdit.setObjectName("RecipientName_LineEdit")
        self.gridLayout_38.addWidget(self.RecipientName_LineEdit, 3, 2, 1, 3)
        self.RecipientAccountNumber_LineEdit = QtWidgets.QLineEdit(parent=self.Transfer_Frame_2)
        self.RecipientAccountNumber_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.RecipientAccountNumber_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.RecipientAccountNumber_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Normal)
        self.RecipientAccountNumber_LineEdit.setObjectName("RecipientAccountNumber_LineEdit")
        self.gridLayout_38.addWidget(self.RecipientAccountNumber_LineEdit, 4, 2, 1, 3)
        spacerItem77 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_38.addItem(spacerItem77, 4, 1, 1, 1)
        self.gridLayout_39.addWidget(self.Transfer_Frame_2, 0, 0, 1, 1)
        self.Transfer_ScrollArea_2.setWidget(self.scrollAreaWidgetContents_14)
        self.gridLayout_37.addWidget(self.Transfer_ScrollArea_2, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.Transfer_Page_8)
        self.ViewTransaction_Page_9 = QtWidgets.QWidget()
        self.ViewTransaction_Page_9.setObjectName("ViewTransaction_Page_9")
        self.gridLayout_40 = QtWidgets.QGridLayout(self.ViewTransaction_Page_9)
        self.gridLayout_40.setObjectName("gridLayout_40")
        self.ViewTransaction_ScrollArea_1 = QtWidgets.QScrollArea(parent=self.ViewTransaction_Page_9)
        self.ViewTransaction_ScrollArea_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ViewTransaction_ScrollArea_1.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ViewTransaction_ScrollArea_1.setWidgetResizable(True)
        self.ViewTransaction_ScrollArea_1.setObjectName("ViewTransaction_ScrollArea_1")
        self.scrollAreaWidgetContents_15 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_15.setGeometry(QtCore.QRect(0, 0, 576, 449))
        self.scrollAreaWidgetContents_15.setObjectName("scrollAreaWidgetContents_15")
        self.gridLayout_41 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_15)
        self.gridLayout_41.setObjectName("gridLayout_41")
        self.ViewTransaction_Frame_1 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_15)
        self.ViewTransaction_Frame_1.setMinimumSize(QtCore.QSize(0, 0))
        self.ViewTransaction_Frame_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewTransaction_Frame_1.setStyleSheet("")
        self.ViewTransaction_Frame_1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ViewTransaction_Frame_1.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ViewTransaction_Frame_1.setObjectName("ViewTransaction_Frame_1")
        self.gridLayout_64 = QtWidgets.QGridLayout(self.ViewTransaction_Frame_1)
        self.gridLayout_64.setObjectName("gridLayout_64")
        self.ViewTransactionContinue_PushButton = QtWidgets.QPushButton(parent=self.ViewTransaction_Frame_1)
        self.ViewTransactionContinue_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.ViewTransactionContinue_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewTransactionContinue_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ViewTransactionContinue_PushButton.setObjectName("ViewTransactionContinue_PushButton")
        self.gridLayout_64.addWidget(self.ViewTransactionContinue_PushButton, 7, 2, 1, 1)
        self.ViewTransactionCancel_PushButton = QtWidgets.QPushButton(parent=self.ViewTransaction_Frame_1)
        self.ViewTransactionCancel_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.ViewTransactionCancel_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewTransactionCancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ViewTransactionCancel_PushButton.setObjectName("ViewTransactionCancel_PushButton")
        self.gridLayout_64.addWidget(self.ViewTransactionCancel_PushButton, 7, 3, 1, 1)
        spacerItem78 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_64.addItem(spacerItem78, 4, 0, 1, 1)
        self.ViewTransaction_Label_1 = QtWidgets.QLabel(parent=self.ViewTransaction_Frame_1)
        self.ViewTransaction_Label_1.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.ViewTransaction_Label_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ViewTransaction_Label_1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ViewTransaction_Label_1.setObjectName("ViewTransaction_Label_1")
        self.gridLayout_64.addWidget(self.ViewTransaction_Label_1, 1, 0, 1, 4)
        spacerItem79 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_64.addItem(spacerItem79, 2, 0, 1, 4)
        spacerItem80 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_64.addItem(spacerItem80, 6, 0, 1, 4)
        self.ViewTransactionSelectTheAccount_Label = QtWidgets.QLabel(parent=self.ViewTransaction_Frame_1)
        self.ViewTransactionSelectTheAccount_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.ViewTransactionSelectTheAccount_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewTransactionSelectTheAccount_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.ViewTransactionSelectTheAccount_Label.setObjectName("ViewTransactionSelectTheAccount_Label")
        self.gridLayout_64.addWidget(self.ViewTransactionSelectTheAccount_Label, 3, 0, 1, 2)
        spacerItem81 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_64.addItem(spacerItem81, 8, 1, 1, 1)
        spacerItem82 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_64.addItem(spacerItem82, 0, 0, 1, 1)
        self.ViewTransaction_Frame_3 = QtWidgets.QFrame(parent=self.ViewTransaction_Frame_1)
        self.ViewTransaction_Frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ViewTransaction_Frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ViewTransaction_Frame_3.setObjectName("ViewTransaction_Frame_3")
        self.gridLayout_156 = QtWidgets.QGridLayout(self.ViewTransaction_Frame_3)
        self.gridLayout_156.setObjectName("gridLayout_156")
        spacerItem83 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_156.addItem(spacerItem83, 0, 0, 1, 1)
        self.ViewTransaction_Account_TableWidget = QtWidgets.QTableWidget(parent=self.ViewTransaction_Frame_3)
        self.ViewTransaction_Account_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.ViewTransaction_Account_TableWidget.setStyleSheet("")
        self.ViewTransaction_Account_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.ViewTransaction_Account_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.ViewTransaction_Account_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.ViewTransaction_Account_TableWidget.setDragEnabled(False)
        self.ViewTransaction_Account_TableWidget.setShowGrid(True)
        self.ViewTransaction_Account_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.ViewTransaction_Account_TableWidget.setRowCount(0)
        self.ViewTransaction_Account_TableWidget.setObjectName("ViewTransaction_Account_TableWidget")
        self.ViewTransaction_Account_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ViewTransaction_Account_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.ViewTransaction_Account_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ViewTransaction_Account_TableWidget.setHorizontalHeaderItem(2, item)
        self.ViewTransaction_Account_TableWidget.horizontalHeader().setVisible(True)
        self.ViewTransaction_Account_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.ViewTransaction_Account_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.ViewTransaction_Account_TableWidget.horizontalHeader().setHighlightSections(True)
        self.ViewTransaction_Account_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.ViewTransaction_Account_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.ViewTransaction_Account_TableWidget.verticalHeader().setVisible(True)
        self.ViewTransaction_Account_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.ViewTransaction_Account_TableWidget.verticalHeader().setHighlightSections(True)
        self.ViewTransaction_Account_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.ViewTransaction_Account_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_156.addWidget(self.ViewTransaction_Account_TableWidget, 0, 1, 1, 1)
        spacerItem84 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_156.addItem(spacerItem84, 0, 2, 1, 1)
        self.gridLayout_64.addWidget(self.ViewTransaction_Frame_3, 5, 0, 1, 4)
        self.gridLayout_41.addWidget(self.ViewTransaction_Frame_1, 0, 0, 1, 1)
        self.ViewTransaction_ScrollArea_1.setWidget(self.scrollAreaWidgetContents_15)
        self.gridLayout_40.addWidget(self.ViewTransaction_ScrollArea_1, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ViewTransaction_Page_9)
        self.ViewTransaction_Page_10 = QtWidgets.QWidget()
        self.ViewTransaction_Page_10.setObjectName("ViewTransaction_Page_10")
        self.gridLayout_42 = QtWidgets.QGridLayout(self.ViewTransaction_Page_10)
        self.gridLayout_42.setObjectName("gridLayout_42")
        self.ViewTransaction_ScrollArea_2 = QtWidgets.QScrollArea(parent=self.ViewTransaction_Page_10)
        self.ViewTransaction_ScrollArea_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ViewTransaction_ScrollArea_2.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ViewTransaction_ScrollArea_2.setWidgetResizable(True)
        self.ViewTransaction_ScrollArea_2.setObjectName("ViewTransaction_ScrollArea_2")
        self.scrollAreaWidgetContents_16 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_16.setGeometry(QtCore.QRect(0, 0, 181, 246))
        self.scrollAreaWidgetContents_16.setObjectName("scrollAreaWidgetContents_16")
        self.gridLayout_43 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_16)
        self.gridLayout_43.setObjectName("gridLayout_43")
        self.ViewTransaction_Frame_2 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_16)
        self.ViewTransaction_Frame_2.setMinimumSize(QtCore.QSize(0, 0))
        self.ViewTransaction_Frame_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewTransaction_Frame_2.setStyleSheet("")
        self.ViewTransaction_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ViewTransaction_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ViewTransaction_Frame_2.setObjectName("ViewTransaction_Frame_2")
        self.gridLayout_54 = QtWidgets.QGridLayout(self.ViewTransaction_Frame_2)
        self.gridLayout_54.setObjectName("gridLayout_54")
        self.ViewTransaction_ScrollArea_3 = QtWidgets.QScrollArea(parent=self.ViewTransaction_Frame_2)
        self.ViewTransaction_ScrollArea_3.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ViewTransaction_ScrollArea_3.setWidgetResizable(True)
        self.ViewTransaction_ScrollArea_3.setObjectName("ViewTransaction_ScrollArea_3")
        self.scrollAreaWidgetContents_40 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_40.setGeometry(QtCore.QRect(0, 0, 98, 89))
        self.scrollAreaWidgetContents_40.setObjectName("scrollAreaWidgetContents_40")
        self.gridLayout_118 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_40)
        self.gridLayout_118.setObjectName("gridLayout_118")
        spacerItem85 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_118.addItem(spacerItem85, 2, 1, 1, 1)
        self.ViewTransaction_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_40)
        self.ViewTransaction_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ViewTransaction_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.ViewTransaction_Frame.setObjectName("ViewTransaction_Frame")
        self.gridLayout_151 = QtWidgets.QGridLayout(self.ViewTransaction_Frame)
        self.gridLayout_151.setObjectName("gridLayout_151")
        self.ViewTransaction_Label_3 = QtWidgets.QLabel(parent=self.ViewTransaction_Frame)
        self.ViewTransaction_Label_3.setStyleSheet("font: 600 12pt \"Segoe UI\"; \n"
"background-color: rgb(230, 230, 230);\n"
"padding-left: 9px;\n"
"padding-right: 9px;\n"
"padding-top: 9px; \n"
"padding-bottom: 9px; ")
        self.ViewTransaction_Label_3.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ViewTransaction_Label_3.setText("")
        self.ViewTransaction_Label_3.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ViewTransaction_Label_3.setObjectName("ViewTransaction_Label_3")
        self.gridLayout_151.addWidget(self.ViewTransaction_Label_3, 0, 0, 1, 1)
        self.gridLayout_118.addWidget(self.ViewTransaction_Frame, 1, 1, 1, 1)
        spacerItem86 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_118.addItem(spacerItem86, 1, 2, 1, 1)
        spacerItem87 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_118.addItem(spacerItem87, 1, 0, 1, 1)
        spacerItem88 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_118.addItem(spacerItem88, 0, 1, 1, 1)
        self.ViewTransaction_ScrollArea_3.setWidget(self.scrollAreaWidgetContents_40)
        self.gridLayout_54.addWidget(self.ViewTransaction_ScrollArea_3, 2, 0, 1, 2)
        self.ViewTransactionBack_PushButton = QtWidgets.QPushButton(parent=self.ViewTransaction_Frame_2)
        self.ViewTransactionBack_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.ViewTransactionBack_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewTransactionBack_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ViewTransactionBack_PushButton.setObjectName("ViewTransactionBack_PushButton")
        self.gridLayout_54.addWidget(self.ViewTransactionBack_PushButton, 4, 1, 1, 1)
        self.ViewTransaction_Label_2 = QtWidgets.QLabel(parent=self.ViewTransaction_Frame_2)
        self.ViewTransaction_Label_2.setMinimumSize(QtCore.QSize(0, 35))
        self.ViewTransaction_Label_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewTransaction_Label_2.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.ViewTransaction_Label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ViewTransaction_Label_2.setObjectName("ViewTransaction_Label_2")
        self.gridLayout_54.addWidget(self.ViewTransaction_Label_2, 0, 0, 1, 2)
        spacerItem89 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_54.addItem(spacerItem89, 1, 0, 1, 2)
        spacerItem90 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_54.addItem(spacerItem90, 3, 0, 1, 1)
        self.gridLayout_43.addWidget(self.ViewTransaction_Frame_2, 0, 0, 1, 1)
        self.ViewTransaction_ScrollArea_2.setWidget(self.scrollAreaWidgetContents_16)
        self.gridLayout_42.addWidget(self.ViewTransaction_ScrollArea_2, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ViewTransaction_Page_10)
        self.ViewBalance_Page_11 = QtWidgets.QWidget()
        self.ViewBalance_Page_11.setObjectName("ViewBalance_Page_11")
        self.gridLayout_44 = QtWidgets.QGridLayout(self.ViewBalance_Page_11)
        self.gridLayout_44.setObjectName("gridLayout_44")
        self.ViewBalance_ScrollArea = QtWidgets.QScrollArea(parent=self.ViewBalance_Page_11)
        self.ViewBalance_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ViewBalance_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ViewBalance_ScrollArea.setWidgetResizable(True)
        self.ViewBalance_ScrollArea.setObjectName("ViewBalance_ScrollArea")
        self.scrollAreaWidgetContents_17 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_17.setGeometry(QtCore.QRect(0, 0, 388, 340))
        self.scrollAreaWidgetContents_17.setObjectName("scrollAreaWidgetContents_17")
        self.gridLayout_45 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_17)
        self.gridLayout_45.setObjectName("gridLayout_45")
        self.ViewBalance_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_17)
        self.ViewBalance_Frame.setMinimumSize(QtCore.QSize(0, 0))
        self.ViewBalance_Frame.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewBalance_Frame.setStyleSheet("")
        self.ViewBalance_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ViewBalance_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ViewBalance_Frame.setObjectName("ViewBalance_Frame")
        self.gridLayout_57 = QtWidgets.QGridLayout(self.ViewBalance_Frame)
        self.gridLayout_57.setObjectName("gridLayout_57")
        spacerItem91 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_57.addItem(spacerItem91, 4, 0, 1, 1)
        self.ViewBalanceContinue_PushButton = QtWidgets.QPushButton(parent=self.ViewBalance_Frame)
        self.ViewBalanceContinue_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.ViewBalanceContinue_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewBalanceContinue_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ViewBalanceContinue_PushButton.setObjectName("ViewBalanceContinue_PushButton")
        self.gridLayout_57.addWidget(self.ViewBalanceContinue_PushButton, 7, 2, 1, 1)
        spacerItem92 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_57.addItem(spacerItem92, 2, 0, 1, 4)
        self.ViewBalance_Label = QtWidgets.QLabel(parent=self.ViewBalance_Frame)
        self.ViewBalance_Label.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.ViewBalance_Label.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ViewBalance_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ViewBalance_Label.setObjectName("ViewBalance_Label")
        self.gridLayout_57.addWidget(self.ViewBalance_Label, 1, 0, 1, 4)
        spacerItem93 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_57.addItem(spacerItem93, 8, 1, 1, 1)
        self.ViewBalanceSelectTheAccount_Label = QtWidgets.QLabel(parent=self.ViewBalance_Frame)
        self.ViewBalanceSelectTheAccount_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.ViewBalanceSelectTheAccount_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewBalanceSelectTheAccount_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.ViewBalanceSelectTheAccount_Label.setObjectName("ViewBalanceSelectTheAccount_Label")
        self.gridLayout_57.addWidget(self.ViewBalanceSelectTheAccount_Label, 3, 0, 1, 2)
        self.ViewBalanceCancel_PushButton = QtWidgets.QPushButton(parent=self.ViewBalance_Frame)
        self.ViewBalanceCancel_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.ViewBalanceCancel_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewBalanceCancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ViewBalanceCancel_PushButton.setObjectName("ViewBalanceCancel_PushButton")
        self.gridLayout_57.addWidget(self.ViewBalanceCancel_PushButton, 7, 3, 1, 1)
        spacerItem94 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_57.addItem(spacerItem94, 0, 0, 1, 1)
        spacerItem95 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_57.addItem(spacerItem95, 6, 0, 1, 4)
        self.ViewBalance_Frame_2 = QtWidgets.QFrame(parent=self.ViewBalance_Frame)
        self.ViewBalance_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ViewBalance_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ViewBalance_Frame_2.setObjectName("ViewBalance_Frame_2")
        self.gridLayout_157 = QtWidgets.QGridLayout(self.ViewBalance_Frame_2)
        self.gridLayout_157.setObjectName("gridLayout_157")
        self.ViewBalance_Account_TableWidget = QtWidgets.QTableWidget(parent=self.ViewBalance_Frame_2)
        self.ViewBalance_Account_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.ViewBalance_Account_TableWidget.setStyleSheet("")
        self.ViewBalance_Account_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.ViewBalance_Account_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.ViewBalance_Account_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.ViewBalance_Account_TableWidget.setDragEnabled(False)
        self.ViewBalance_Account_TableWidget.setShowGrid(True)
        self.ViewBalance_Account_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.ViewBalance_Account_TableWidget.setRowCount(0)
        self.ViewBalance_Account_TableWidget.setObjectName("ViewBalance_Account_TableWidget")
        self.ViewBalance_Account_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ViewBalance_Account_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.ViewBalance_Account_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ViewBalance_Account_TableWidget.setHorizontalHeaderItem(2, item)
        self.ViewBalance_Account_TableWidget.horizontalHeader().setVisible(True)
        self.ViewBalance_Account_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.ViewBalance_Account_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.ViewBalance_Account_TableWidget.horizontalHeader().setHighlightSections(True)
        self.ViewBalance_Account_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.ViewBalance_Account_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.ViewBalance_Account_TableWidget.verticalHeader().setVisible(True)
        self.ViewBalance_Account_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.ViewBalance_Account_TableWidget.verticalHeader().setHighlightSections(True)
        self.ViewBalance_Account_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.ViewBalance_Account_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_157.addWidget(self.ViewBalance_Account_TableWidget, 0, 1, 1, 1)
        spacerItem96 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_157.addItem(spacerItem96, 0, 0, 1, 1)
        spacerItem97 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_157.addItem(spacerItem97, 0, 2, 1, 1)
        self.gridLayout_57.addWidget(self.ViewBalance_Frame_2, 5, 0, 1, 4)
        self.gridLayout_45.addWidget(self.ViewBalance_Frame, 0, 0, 1, 1)
        self.ViewBalance_ScrollArea.setWidget(self.scrollAreaWidgetContents_17)
        self.gridLayout_44.addWidget(self.ViewBalance_ScrollArea, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ViewBalance_Page_11)
        self.AvailableBalance_Page_12 = QtWidgets.QWidget()
        self.AvailableBalance_Page_12.setObjectName("AvailableBalance_Page_12")
        self.gridLayout_46 = QtWidgets.QGridLayout(self.AvailableBalance_Page_12)
        self.gridLayout_46.setObjectName("gridLayout_46")
        self.AvailableBalance_ScrollArea = QtWidgets.QScrollArea(parent=self.AvailableBalance_Page_12)
        self.AvailableBalance_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.AvailableBalance_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.AvailableBalance_ScrollArea.setWidgetResizable(True)
        self.AvailableBalance_ScrollArea.setObjectName("AvailableBalance_ScrollArea")
        self.scrollAreaWidgetContents_18 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_18.setGeometry(QtCore.QRect(0, 0, 188, 258))
        self.scrollAreaWidgetContents_18.setObjectName("scrollAreaWidgetContents_18")
        self.gridLayout_48 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_18)
        self.gridLayout_48.setObjectName("gridLayout_48")
        self.AvailableBalance_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_18)
        self.AvailableBalance_Frame.setMinimumSize(QtCore.QSize(0, 0))
        self.AvailableBalance_Frame.setMaximumSize(QtCore.QSize(400, 16777215))
        self.AvailableBalance_Frame.setStyleSheet("")
        self.AvailableBalance_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.AvailableBalance_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.AvailableBalance_Frame.setObjectName("AvailableBalance_Frame")
        self.gridLayout_55 = QtWidgets.QGridLayout(self.AvailableBalance_Frame)
        self.gridLayout_55.setObjectName("gridLayout_55")
        self.AvailableBalance_PushButton = QtWidgets.QPushButton(parent=self.AvailableBalance_Frame)
        self.AvailableBalance_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.AvailableBalance_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AvailableBalance_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.AvailableBalance_PushButton.setObjectName("AvailableBalance_PushButton")
        self.gridLayout_55.addWidget(self.AvailableBalance_PushButton, 5, 1, 1, 1)
        spacerItem98 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_55.addItem(spacerItem98, 6, 0, 1, 2)
        spacerItem99 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_55.addItem(spacerItem99, 0, 0, 1, 2)
        spacerItem100 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_55.addItem(spacerItem100, 4, 0, 1, 1)
        self.AvailableBalance_Label_1 = QtWidgets.QLabel(parent=self.AvailableBalance_Frame)
        self.AvailableBalance_Label_1.setMinimumSize(QtCore.QSize(0, 35))
        self.AvailableBalance_Label_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AvailableBalance_Label_1.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.AvailableBalance_Label_1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.AvailableBalance_Label_1.setObjectName("AvailableBalance_Label_1")
        self.gridLayout_55.addWidget(self.AvailableBalance_Label_1, 1, 0, 1, 2)
        spacerItem101 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_55.addItem(spacerItem101, 2, 0, 1, 2)
        self.AvailableBalance_scrollArea_19 = QtWidgets.QScrollArea(parent=self.AvailableBalance_Frame)
        self.AvailableBalance_scrollArea_19.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.AvailableBalance_scrollArea_19.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.AvailableBalance_scrollArea_19.setWidgetResizable(True)
        self.AvailableBalance_scrollArea_19.setObjectName("AvailableBalance_scrollArea_19")
        self.scrollAreaWidgetContents_19 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_19.setGeometry(QtCore.QRect(0, 0, 98, 46))
        self.scrollAreaWidgetContents_19.setObjectName("scrollAreaWidgetContents_19")
        self.gridLayout_47 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_19)
        self.gridLayout_47.setObjectName("gridLayout_47")
        spacerItem102 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_47.addItem(spacerItem102, 0, 0, 1, 1)
        self.AvailableBalance_Label_2 = QtWidgets.QLabel(parent=self.scrollAreaWidgetContents_19)
        self.AvailableBalance_Label_2.setStyleSheet("font: 600 14pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 9px; ")
        self.AvailableBalance_Label_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.AvailableBalance_Label_2.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.AvailableBalance_Label_2.setText("")
        self.AvailableBalance_Label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.AvailableBalance_Label_2.setObjectName("AvailableBalance_Label_2")
        self.gridLayout_47.addWidget(self.AvailableBalance_Label_2, 0, 1, 1, 1)
        spacerItem103 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_47.addItem(spacerItem103, 0, 2, 1, 1)
        self.AvailableBalance_scrollArea_19.setWidget(self.scrollAreaWidgetContents_19)
        self.gridLayout_55.addWidget(self.AvailableBalance_scrollArea_19, 3, 0, 1, 2)
        self.gridLayout_48.addWidget(self.AvailableBalance_Frame, 0, 0, 1, 1)
        self.AvailableBalance_ScrollArea.setWidget(self.scrollAreaWidgetContents_18)
        self.gridLayout_46.addWidget(self.AvailableBalance_ScrollArea, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.AvailableBalance_Page_12)
        self.ProfileDetails_Page_13 = QtWidgets.QWidget()
        self.ProfileDetails_Page_13.setObjectName("ProfileDetails_Page_13")
        self.gridLayout_135 = QtWidgets.QGridLayout(self.ProfileDetails_Page_13)
        self.gridLayout_135.setObjectName("gridLayout_135")
        self.ProfileDetails_ScrollArea_1 = QtWidgets.QScrollArea(parent=self.ProfileDetails_Page_13)
        self.ProfileDetails_ScrollArea_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ProfileDetails_ScrollArea_1.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ProfileDetails_ScrollArea_1.setWidgetResizable(True)
        self.ProfileDetails_ScrollArea_1.setObjectName("ProfileDetails_ScrollArea_1")
        self.scrollAreaWidgetContents_44 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_44.setGeometry(QtCore.QRect(0, 0, 100, 99))
        self.scrollAreaWidgetContents_44.setObjectName("scrollAreaWidgetContents_44")
        self.gridLayout_128 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_44)
        self.gridLayout_128.setObjectName("gridLayout_128")
        self.ProfileDetails_Frame_1 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_44)
        self.ProfileDetails_Frame_1.setMinimumSize(QtCore.QSize(0, 0))
        self.ProfileDetails_Frame_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ProfileDetails_Frame_1.setStyleSheet("")
        self.ProfileDetails_Frame_1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ProfileDetails_Frame_1.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ProfileDetails_Frame_1.setObjectName("ProfileDetails_Frame_1")
        self.gridLayout_129 = QtWidgets.QGridLayout(self.ProfileDetails_Frame_1)
        self.gridLayout_129.setObjectName("gridLayout_129")
        self.ProfileDetails_ScrollArea_2 = QtWidgets.QScrollArea(parent=self.ProfileDetails_Frame_1)
        self.ProfileDetails_ScrollArea_2.setMinimumSize(QtCore.QSize(50, 20))
        self.ProfileDetails_ScrollArea_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ProfileDetails_ScrollArea_2.setWidgetResizable(True)
        self.ProfileDetails_ScrollArea_2.setObjectName("ProfileDetails_ScrollArea_2")
        self.scrollAreaWidgetContents_45 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_45.setGeometry(QtCore.QRect(0, 0, 466, 314))
        self.scrollAreaWidgetContents_45.setObjectName("scrollAreaWidgetContents_45")
        self.gridLayout_133 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_45)
        self.gridLayout_133.setObjectName("gridLayout_133")
        spacerItem104 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_133.addItem(spacerItem104, 1, 2, 1, 1)
        spacerItem105 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_133.addItem(spacerItem105, 1, 0, 1, 1)
        self.ProfileDetails_Frame_2 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_45)
        self.ProfileDetails_Frame_2.setMinimumSize(QtCore.QSize(0, 0))
        self.ProfileDetails_Frame_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ProfileDetails_Frame_2.setStyleSheet("background-color: rgb(226, 226, 226);\n"
"padding-left: 5px;\n"
"padding-right: 14px;")
        self.ProfileDetails_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ProfileDetails_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ProfileDetails_Frame_2.setObjectName("ProfileDetails_Frame_2")
        self.gridLayout_130 = QtWidgets.QGridLayout(self.ProfileDetails_Frame_2)
        self.gridLayout_130.setObjectName("gridLayout_130")
        self.ProfileDetails_Password_Label_2 = QtWidgets.QLabel(parent=self.ProfileDetails_Frame_2)
        self.ProfileDetails_Password_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.ProfileDetails_Password_Label_2.setObjectName("ProfileDetails_Password_Label_2")
        self.gridLayout_130.addWidget(self.ProfileDetails_Password_Label_2, 1, 1, 1, 1)
        self.ProfileDetails_Username_Label = QtWidgets.QLabel(parent=self.ProfileDetails_Frame_2)
        self.ProfileDetails_Username_Label.setMinimumSize(QtCore.QSize(0, 40))
        self.ProfileDetails_Username_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ProfileDetails_Username_Label.setObjectName("ProfileDetails_Username_Label")
        self.gridLayout_130.addWidget(self.ProfileDetails_Username_Label, 0, 0, 1, 1)
        self.ProfileDetails_ProfilePin_Label = QtWidgets.QLabel(parent=self.ProfileDetails_Frame_2)
        self.ProfileDetails_ProfilePin_Label.setMinimumSize(QtCore.QSize(0, 40))
        self.ProfileDetails_ProfilePin_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ProfileDetails_ProfilePin_Label.setObjectName("ProfileDetails_ProfilePin_Label")
        self.gridLayout_130.addWidget(self.ProfileDetails_ProfilePin_Label, 3, 0, 1, 1)
        self.ProfileDetails_Answer_Label = QtWidgets.QLabel(parent=self.ProfileDetails_Frame_2)
        self.ProfileDetails_Answer_Label.setMinimumSize(QtCore.QSize(0, 40))
        self.ProfileDetails_Answer_Label.setMaximumSize(QtCore.QSize(16777215, 40))
        self.ProfileDetails_Answer_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ProfileDetails_Answer_Label.setObjectName("ProfileDetails_Answer_Label")
        self.gridLayout_130.addWidget(self.ProfileDetails_Answer_Label, 6, 0, 1, 1)
        self.ProfileDetails_SecurityQuestion_Label = QtWidgets.QLabel(parent=self.ProfileDetails_Frame_2)
        self.ProfileDetails_SecurityQuestion_Label.setMinimumSize(QtCore.QSize(0, 40))
        self.ProfileDetails_SecurityQuestion_Label.setMaximumSize(QtCore.QSize(160, 160))
        self.ProfileDetails_SecurityQuestion_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ProfileDetails_SecurityQuestion_Label.setObjectName("ProfileDetails_SecurityQuestion_Label")
        self.gridLayout_130.addWidget(self.ProfileDetails_SecurityQuestion_Label, 5, 0, 1, 1)
        self.ProfileDetails_SecurityQuestion_Label_2 = QtWidgets.QLabel(parent=self.ProfileDetails_Frame_2)
        self.ProfileDetails_SecurityQuestion_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.ProfileDetails_SecurityQuestion_Label_2.setObjectName("ProfileDetails_SecurityQuestion_Label_2")
        self.gridLayout_130.addWidget(self.ProfileDetails_SecurityQuestion_Label_2, 5, 1, 1, 1)
        self.ProfileDetails_ProfilePin_Label_2 = QtWidgets.QLabel(parent=self.ProfileDetails_Frame_2)
        self.ProfileDetails_ProfilePin_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.ProfileDetails_ProfilePin_Label_2.setObjectName("ProfileDetails_ProfilePin_Label_2")
        self.gridLayout_130.addWidget(self.ProfileDetails_ProfilePin_Label_2, 3, 1, 1, 1)
        self.ChangeProfilePassword_PushButton = QtWidgets.QPushButton(parent=self.ProfileDetails_Frame_2)
        self.ChangeProfilePassword_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 10pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}\n"
"")
        self.ChangeProfilePassword_PushButton.setObjectName("ChangeProfilePassword_PushButton")
        self.gridLayout_130.addWidget(self.ChangeProfilePassword_PushButton, 1, 2, 1, 1)
        self.ProfileDetails_Username_Label_2 = QtWidgets.QLabel(parent=self.ProfileDetails_Frame_2)
        self.ProfileDetails_Username_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"")
        self.ProfileDetails_Username_Label_2.setObjectName("ProfileDetails_Username_Label_2")
        self.gridLayout_130.addWidget(self.ProfileDetails_Username_Label_2, 0, 1, 1, 1)
        self.ProfileDetails_Answer_Label_2 = QtWidgets.QLabel(parent=self.ProfileDetails_Frame_2)
        self.ProfileDetails_Answer_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.ProfileDetails_Answer_Label_2.setObjectName("ProfileDetails_Answer_Label_2")
        self.gridLayout_130.addWidget(self.ProfileDetails_Answer_Label_2, 6, 1, 1, 1)
        self.ProfileDetails_Password_Label = QtWidgets.QLabel(parent=self.ProfileDetails_Frame_2)
        self.ProfileDetails_Password_Label.setMinimumSize(QtCore.QSize(0, 40))
        self.ProfileDetails_Password_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ProfileDetails_Password_Label.setObjectName("ProfileDetails_Password_Label")
        self.gridLayout_130.addWidget(self.ProfileDetails_Password_Label, 1, 0, 1, 1)
        self.ChangeProfilePin_PushButton = QtWidgets.QPushButton(parent=self.ProfileDetails_Frame_2)
        self.ChangeProfilePin_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 10pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}\n"
"")
        self.ChangeProfilePin_PushButton.setObjectName("ChangeProfilePin_PushButton")
        self.gridLayout_130.addWidget(self.ChangeProfilePin_PushButton, 3, 2, 1, 1)
        self.ProfileDetails_Email_Label = QtWidgets.QLabel(parent=self.ProfileDetails_Frame_2)
        self.ProfileDetails_Email_Label.setMinimumSize(QtCore.QSize(0, 40))
        self.ProfileDetails_Email_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.ProfileDetails_Email_Label.setObjectName("ProfileDetails_Email_Label")
        self.gridLayout_130.addWidget(self.ProfileDetails_Email_Label, 2, 0, 1, 1)
        self.ProfileDetails_Email_Label_2 = QtWidgets.QLabel(parent=self.ProfileDetails_Frame_2)
        self.ProfileDetails_Email_Label_2.setStyleSheet("border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\"; color: rgb(0, 92, 97);\n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.ProfileDetails_Email_Label_2.setObjectName("ProfileDetails_Email_Label_2")
        self.gridLayout_130.addWidget(self.ProfileDetails_Email_Label_2, 2, 1, 1, 1)
        spacerItem106 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_130.addItem(spacerItem106, 4, 0, 1, 1)
        self.gridLayout_133.addWidget(self.ProfileDetails_Frame_2, 1, 1, 1, 1)
        self.ProfileDetails_ScrollArea_2.setWidget(self.scrollAreaWidgetContents_45)
        self.gridLayout_129.addWidget(self.ProfileDetails_ScrollArea_2, 1, 1, 1, 1)
        self.ProfileDetails_Label = QtWidgets.QLabel(parent=self.ProfileDetails_Frame_1)
        self.ProfileDetails_Label.setMinimumSize(QtCore.QSize(35, 35))
        self.ProfileDetails_Label.setMaximumSize(QtCore.QSize(16777215, 35))
        self.ProfileDetails_Label.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.ProfileDetails_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ProfileDetails_Label.setObjectName("ProfileDetails_Label")
        self.gridLayout_129.addWidget(self.ProfileDetails_Label, 0, 0, 1, 3)
        self.gridLayout_128.addWidget(self.ProfileDetails_Frame_1, 0, 0, 1, 1)
        self.ProfileDetails_ScrollArea_1.setWidget(self.scrollAreaWidgetContents_44)
        self.gridLayout_135.addWidget(self.ProfileDetails_ScrollArea_1, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ProfileDetails_Page_13)
        self.ChangeProfilePassword_Page_14 = QtWidgets.QWidget()
        self.ChangeProfilePassword_Page_14.setObjectName("ChangeProfilePassword_Page_14")
        self.gridLayout_49 = QtWidgets.QGridLayout(self.ChangeProfilePassword_Page_14)
        self.gridLayout_49.setObjectName("gridLayout_49")
        self.ChangePassword_ScrollArea = QtWidgets.QScrollArea(parent=self.ChangeProfilePassword_Page_14)
        self.ChangePassword_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ChangePassword_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ChangePassword_ScrollArea.setWidgetResizable(True)
        self.ChangePassword_ScrollArea.setObjectName("ChangePassword_ScrollArea")
        self.scrollAreaWidgetContents_20 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_20.setGeometry(QtCore.QRect(0, 0, 414, 282))
        self.scrollAreaWidgetContents_20.setObjectName("scrollAreaWidgetContents_20")
        self.gridLayout_51 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_20)
        self.gridLayout_51.setObjectName("gridLayout_51")
        self.ChangePassword_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_20)
        self.ChangePassword_Frame.setMinimumSize(QtCore.QSize(0, 0))
        self.ChangePassword_Frame.setMaximumSize(QtCore.QSize(600, 16777215))
        self.ChangePassword_Frame.setStyleSheet("")
        self.ChangePassword_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ChangePassword_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ChangePassword_Frame.setObjectName("ChangePassword_Frame")
        self.gridLayout_50 = QtWidgets.QGridLayout(self.ChangePassword_Frame)
        self.gridLayout_50.setObjectName("gridLayout_50")
        self.ChangePassword_NewPassword_Label = QtWidgets.QLabel(parent=self.ChangePassword_Frame)
        self.ChangePassword_NewPassword_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.ChangePassword_NewPassword_Label.setObjectName("ChangePassword_NewPassword_Label")
        self.gridLayout_50.addWidget(self.ChangePassword_NewPassword_Label, 4, 0, 1, 1)
        self.ChangePasswordCancel_PushButton = QtWidgets.QPushButton(parent=self.ChangePassword_Frame)
        self.ChangePasswordCancel_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.ChangePasswordCancel_PushButton.setMaximumSize(QtCore.QSize(100, 16777215))
        self.ChangePasswordCancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ChangePasswordCancel_PushButton.setObjectName("ChangePasswordCancel_PushButton")
        self.gridLayout_50.addWidget(self.ChangePasswordCancel_PushButton, 7, 4, 1, 1)
        self.ChangePassword_ConfirmPassword_LineEdit = QtWidgets.QLineEdit(parent=self.ChangePassword_Frame)
        self.ChangePassword_ConfirmPassword_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ChangePassword_ConfirmPassword_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ChangePassword_ConfirmPassword_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.ChangePassword_ConfirmPassword_LineEdit.setObjectName("ChangePassword_ConfirmPassword_LineEdit")
        self.gridLayout_50.addWidget(self.ChangePassword_ConfirmPassword_LineEdit, 5, 1, 1, 4)
        self.ChangeProfilePassword_Label = QtWidgets.QLabel(parent=self.ChangePassword_Frame)
        self.ChangeProfilePassword_Label.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.ChangeProfilePassword_Label.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ChangeProfilePassword_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ChangeProfilePassword_Label.setObjectName("ChangeProfilePassword_Label")
        self.gridLayout_50.addWidget(self.ChangeProfilePassword_Label, 1, 0, 1, 5)
        self.ChangePassword_ConfirmPassword_Label = QtWidgets.QLabel(parent=self.ChangePassword_Frame)
        self.ChangePassword_ConfirmPassword_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.ChangePassword_ConfirmPassword_Label.setObjectName("ChangePassword_ConfirmPassword_Label")
        self.gridLayout_50.addWidget(self.ChangePassword_ConfirmPassword_Label, 5, 0, 1, 1)
        self.ChangePassword_CurrentPassword_LineEdit = QtWidgets.QLineEdit(parent=self.ChangePassword_Frame)
        self.ChangePassword_CurrentPassword_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ChangePassword_CurrentPassword_LineEdit.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ChangePassword_CurrentPassword_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ChangePassword_CurrentPassword_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.ChangePassword_CurrentPassword_LineEdit.setObjectName("ChangePassword_CurrentPassword_LineEdit")
        self.gridLayout_50.addWidget(self.ChangePassword_CurrentPassword_LineEdit, 3, 1, 1, 4)
        self.ChangePasswordConfirm_PushButton = QtWidgets.QPushButton(parent=self.ChangePassword_Frame)
        self.ChangePasswordConfirm_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.ChangePasswordConfirm_PushButton.setMaximumSize(QtCore.QSize(100, 16777215))
        self.ChangePasswordConfirm_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ChangePasswordConfirm_PushButton.setObjectName("ChangePasswordConfirm_PushButton")
        self.gridLayout_50.addWidget(self.ChangePasswordConfirm_PushButton, 7, 3, 1, 1)
        self.ChangePassword_CurrentPassword_Label = QtWidgets.QLabel(parent=self.ChangePassword_Frame)
        self.ChangePassword_CurrentPassword_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ChangePassword_CurrentPassword_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.ChangePassword_CurrentPassword_Label.setObjectName("ChangePassword_CurrentPassword_Label")
        self.gridLayout_50.addWidget(self.ChangePassword_CurrentPassword_Label, 3, 0, 1, 1)
        spacerItem107 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_50.addItem(spacerItem107, 2, 0, 1, 1)
        spacerItem108 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_50.addItem(spacerItem108, 0, 1, 1, 1)
        self.ChangePassword_NewPassword_LineEdit = QtWidgets.QLineEdit(parent=self.ChangePassword_Frame)
        self.ChangePassword_NewPassword_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ChangePassword_NewPassword_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ChangePassword_NewPassword_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.ChangePassword_NewPassword_LineEdit.setObjectName("ChangePassword_NewPassword_LineEdit")
        self.gridLayout_50.addWidget(self.ChangePassword_NewPassword_LineEdit, 4, 1, 1, 4)
        spacerItem109 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_50.addItem(spacerItem109, 6, 0, 1, 1)
        spacerItem110 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_50.addItem(spacerItem110, 8, 0, 1, 5)
        self.gridLayout_51.addWidget(self.ChangePassword_Frame, 0, 0, 1, 1)
        self.ChangePassword_ScrollArea.setWidget(self.scrollAreaWidgetContents_20)
        self.gridLayout_49.addWidget(self.ChangePassword_ScrollArea, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ChangeProfilePassword_Page_14)
        self.ChangeProfilePin_Page_15 = QtWidgets.QWidget()
        self.ChangeProfilePin_Page_15.setObjectName("ChangeProfilePin_Page_15")
        self.gridLayout_52 = QtWidgets.QGridLayout(self.ChangeProfilePin_Page_15)
        self.gridLayout_52.setObjectName("gridLayout_52")
        self.ChangePin_ScrollArea = QtWidgets.QScrollArea(parent=self.ChangeProfilePin_Page_15)
        self.ChangePin_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ChangePin_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ChangePin_ScrollArea.setWidgetResizable(True)
        self.ChangePin_ScrollArea.setObjectName("ChangePin_ScrollArea")
        self.scrollAreaWidgetContents_21 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_21.setGeometry(QtCore.QRect(0, 0, 335, 282))
        self.scrollAreaWidgetContents_21.setObjectName("scrollAreaWidgetContents_21")
        self.gridLayout_63 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_21)
        self.gridLayout_63.setObjectName("gridLayout_63")
        self.ChangePin_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_21)
        self.ChangePin_Frame.setMinimumSize(QtCore.QSize(0, 0))
        self.ChangePin_Frame.setMaximumSize(QtCore.QSize(400, 16777215))
        self.ChangePin_Frame.setStyleSheet("")
        self.ChangePin_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ChangePin_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ChangePin_Frame.setObjectName("ChangePin_Frame")
        self.gridLayout_53 = QtWidgets.QGridLayout(self.ChangePin_Frame)
        self.gridLayout_53.setObjectName("gridLayout_53")
        spacerItem111 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_53.addItem(spacerItem111, 2, 0, 1, 1)
        self.ChangeProfilePin_CurrentPin_Label = QtWidgets.QLabel(parent=self.ChangePin_Frame)
        self.ChangeProfilePin_CurrentPin_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ChangeProfilePin_CurrentPin_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.ChangeProfilePin_CurrentPin_Label.setObjectName("ChangeProfilePin_CurrentPin_Label")
        self.gridLayout_53.addWidget(self.ChangeProfilePin_CurrentPin_Label, 3, 0, 1, 1)
        self.ChangeProfilePin_CurrentPin_LineEdit = QtWidgets.QLineEdit(parent=self.ChangePin_Frame)
        self.ChangeProfilePin_CurrentPin_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ChangeProfilePin_CurrentPin_LineEdit.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ChangeProfilePin_CurrentPin_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ChangeProfilePin_CurrentPin_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.ChangeProfilePin_CurrentPin_LineEdit.setObjectName("ChangeProfilePin_CurrentPin_LineEdit")
        self.gridLayout_53.addWidget(self.ChangeProfilePin_CurrentPin_LineEdit, 3, 1, 1, 2)
        self.ChangeProfilePin_NewPin_Label = QtWidgets.QLabel(parent=self.ChangePin_Frame)
        self.ChangeProfilePin_NewPin_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.ChangeProfilePin_NewPin_Label.setObjectName("ChangeProfilePin_NewPin_Label")
        self.gridLayout_53.addWidget(self.ChangeProfilePin_NewPin_Label, 4, 0, 1, 1)
        self.ChangeProfilePin_NewPin_LineEdit = QtWidgets.QLineEdit(parent=self.ChangePin_Frame)
        self.ChangeProfilePin_NewPin_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ChangeProfilePin_NewPin_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ChangeProfilePin_NewPin_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.ChangeProfilePin_NewPin_LineEdit.setObjectName("ChangeProfilePin_NewPin_LineEdit")
        self.gridLayout_53.addWidget(self.ChangeProfilePin_NewPin_LineEdit, 4, 1, 1, 2)
        self.ChangeProfilePin_ConfirmPin_Label = QtWidgets.QLabel(parent=self.ChangePin_Frame)
        self.ChangeProfilePin_ConfirmPin_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.ChangeProfilePin_ConfirmPin_Label.setObjectName("ChangeProfilePin_ConfirmPin_Label")
        self.gridLayout_53.addWidget(self.ChangeProfilePin_ConfirmPin_Label, 5, 0, 1, 1)
        self.ChangeProfilePin_ConfirmPin_LineEdit = QtWidgets.QLineEdit(parent=self.ChangePin_Frame)
        self.ChangeProfilePin_ConfirmPin_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.ChangeProfilePin_ConfirmPin_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.ChangeProfilePin_ConfirmPin_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.ChangeProfilePin_ConfirmPin_LineEdit.setObjectName("ChangeProfilePin_ConfirmPin_LineEdit")
        self.gridLayout_53.addWidget(self.ChangeProfilePin_ConfirmPin_LineEdit, 5, 1, 1, 2)
        spacerItem112 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_53.addItem(spacerItem112, 6, 0, 1, 1)
        self.ChangePinConfirm_PushButton = QtWidgets.QPushButton(parent=self.ChangePin_Frame)
        self.ChangePinConfirm_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.ChangePinConfirm_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ChangePinConfirm_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ChangePinConfirm_PushButton.setObjectName("ChangePinConfirm_PushButton")
        self.gridLayout_53.addWidget(self.ChangePinConfirm_PushButton, 7, 1, 1, 1)
        self.ChangePinCancel_PushButton = QtWidgets.QPushButton(parent=self.ChangePin_Frame)
        self.ChangePinCancel_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.ChangePinCancel_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ChangePinCancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ChangePinCancel_PushButton.setObjectName("ChangePinCancel_PushButton")
        self.gridLayout_53.addWidget(self.ChangePinCancel_PushButton, 7, 2, 1, 1)
        self.ChangeProfilePin_Label = QtWidgets.QLabel(parent=self.ChangePin_Frame)
        self.ChangeProfilePin_Label.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.ChangeProfilePin_Label.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ChangeProfilePin_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ChangeProfilePin_Label.setObjectName("ChangeProfilePin_Label")
        self.gridLayout_53.addWidget(self.ChangeProfilePin_Label, 1, 0, 1, 3)
        spacerItem113 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_53.addItem(spacerItem113, 8, 0, 1, 3)
        spacerItem114 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_53.addItem(spacerItem114, 0, 0, 1, 3)
        self.gridLayout_63.addWidget(self.ChangePin_Frame, 0, 0, 1, 1)
        self.ChangePin_ScrollArea.setWidget(self.scrollAreaWidgetContents_21)
        self.gridLayout_52.addWidget(self.ChangePin_ScrollArea, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ChangeProfilePin_Page_15)
        self.ATMCardServices_Page_16 = QtWidgets.QWidget()
        self.ATMCardServices_Page_16.setObjectName("ATMCardServices_Page_16")
        self.gridLayout_65 = QtWidgets.QGridLayout(self.ATMCardServices_Page_16)
        self.gridLayout_65.setObjectName("gridLayout_65")
        self.ATMCardServices_ScrollArea = QtWidgets.QScrollArea(parent=self.ATMCardServices_Page_16)
        self.ATMCardServices_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ATMCardServices_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ATMCardServices_ScrollArea.setWidgetResizable(True)
        self.ATMCardServices_ScrollArea.setObjectName("ATMCardServices_ScrollArea")
        self.scrollAreaWidgetContents_22 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_22.setGeometry(QtCore.QRect(0, 0, 457, 292))
        self.scrollAreaWidgetContents_22.setObjectName("scrollAreaWidgetContents_22")
        self.gridLayout_67 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_22)
        self.gridLayout_67.setObjectName("gridLayout_67")
        self.ATMCardServices_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_22)
        self.ATMCardServices_Frame.setMinimumSize(QtCore.QSize(0, 0))
        self.ATMCardServices_Frame.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMCardServices_Frame.setStyleSheet("")
        self.ATMCardServices_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ATMCardServices_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ATMCardServices_Frame.setObjectName("ATMCardServices_Frame")
        self.gridLayout_66 = QtWidgets.QGridLayout(self.ATMCardServices_Frame)
        self.gridLayout_66.setObjectName("gridLayout_66")
        self.ATMCardServices_Label = QtWidgets.QLabel(parent=self.ATMCardServices_Frame)
        self.ATMCardServices_Label.setMinimumSize(QtCore.QSize(0, 30))
        self.ATMCardServices_Label.setStyleSheet("font: 600 14pt \"Segoe UI\"; color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);")
        self.ATMCardServices_Label.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ATMCardServices_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ATMCardServices_Label.setObjectName("ATMCardServices_Label")
        self.gridLayout_66.addWidget(self.ATMCardServices_Label, 1, 1, 1, 3)
        spacerItem115 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_66.addItem(spacerItem115, 2, 2, 6, 1)
        spacerItem116 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_66.addItem(spacerItem116, 2, 1, 1, 1)
        spacerItem117 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_66.addItem(spacerItem117, 6, 1, 1, 1)
        self.RequestDebitCard_PushButton = QtWidgets.QPushButton(parent=self.ATMCardServices_Frame)
        self.RequestDebitCard_PushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.RequestDebitCard_PushButton.setStyleSheet("QPushButton\n"
"{border: 0px solid; border-color: rgb(173, 173, 173);\n"
"font: 600 14pt \"Segoe UI\"; \n"
"    color: rgb(0, 92, 97);\n"
"}\n"
"QPushButton:Hover\n"
"{    \n"
"    \n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(186, 213, 214);\n"
"}")
        self.RequestDebitCard_PushButton.setObjectName("RequestDebitCard_PushButton")
        self.gridLayout_66.addWidget(self.RequestDebitCard_PushButton, 3, 1, 1, 1)
        self.ATMCardLimitChange_PushButton = QtWidgets.QPushButton(parent=self.ATMCardServices_Frame)
        self.ATMCardLimitChange_PushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.ATMCardLimitChange_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMCardLimitChange_PushButton.setStyleSheet("QPushButton\n"
"{border: 0px solid; border-color: rgb(173, 173, 173);\n"
"font: 600 14pt \"Segoe UI\"; \n"
"    color: rgb(0, 92, 97);\n"
"}\n"
"QPushButton:Hover\n"
"{    \n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(186, 213, 214);\n"
"}")
        self.ATMCardLimitChange_PushButton.setObjectName("ATMCardLimitChange_PushButton")
        self.gridLayout_66.addWidget(self.ATMCardLimitChange_PushButton, 5, 1, 1, 1)
        spacerItem118 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_66.addItem(spacerItem118, 7, 0, 1, 1)
        self.ATMPinGeneration_PushButton = QtWidgets.QPushButton(parent=self.ATMCardServices_Frame)
        self.ATMPinGeneration_PushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.ATMPinGeneration_PushButton.setStyleSheet("QPushButton\n"
"{border: 0px solid; border-color: rgb(173, 173, 173);\n"
"font: 600 14pt \"Segoe UI\"; \n"
"    color: rgb(0, 92, 97);\n"
"}\n"
"QPushButton:Hover\n"
"{    \n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(186, 213, 214);\n"
"}")
        self.ATMPinGeneration_PushButton.setObjectName("ATMPinGeneration_PushButton")
        self.gridLayout_66.addWidget(self.ATMPinGeneration_PushButton, 3, 3, 1, 1)
        self.ViewLinkedATMCardPushButton = QtWidgets.QPushButton(parent=self.ATMCardServices_Frame)
        self.ViewLinkedATMCardPushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.ViewLinkedATMCardPushButton.setStyleSheet("QPushButton\n"
"{border: 0px solid; border-color: rgb(173, 173, 173);\n"
"font: 600 14pt \"Segoe UI\"; \n"
"    color: rgb(0, 92, 97);\n"
"}\n"
"QPushButton:Hover\n"
"{    \n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(186, 213, 214);\n"
"}")
        self.ViewLinkedATMCardPushButton.setObjectName("ViewLinkedATMCardPushButton")
        self.gridLayout_66.addWidget(self.ViewLinkedATMCardPushButton, 7, 1, 1, 1)
        self.BlockATMCard_PushButton = QtWidgets.QPushButton(parent=self.ATMCardServices_Frame)
        self.BlockATMCard_PushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.BlockATMCard_PushButton.setStyleSheet("QPushButton\n"
"{border: 0px solid; border-color: rgb(173, 173, 173);\n"
"font: 600 14pt \"Segoe UI\"; \n"
"    color: rgb(0, 92, 97);\n"
"}\n"
"QPushButton:Hover\n"
"{    \n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(186, 213, 214);\n"
"}")
        self.BlockATMCard_PushButton.setObjectName("BlockATMCard_PushButton")
        self.gridLayout_66.addWidget(self.BlockATMCard_PushButton, 5, 3, 1, 1)
        spacerItem119 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_66.addItem(spacerItem119, 7, 4, 1, 1)
        spacerItem120 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_66.addItem(spacerItem120, 4, 1, 1, 1)
        spacerItem121 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_66.addItem(spacerItem121, 8, 1, 1, 1)
        self.UnblockATMCard_PushButton = QtWidgets.QPushButton(parent=self.ATMCardServices_Frame)
        self.UnblockATMCard_PushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.UnblockATMCard_PushButton.setStyleSheet("QPushButton\n"
"{border: 0px solid; border-color: rgb(173, 173, 173);\n"
"font: 600 14pt \"Segoe UI\"; \n"
"    color: rgb(0, 92, 97);\n"
"}\n"
"QPushButton:Hover\n"
"{    \n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(186, 213, 214);\n"
"}")
        self.UnblockATMCard_PushButton.setObjectName("UnblockATMCard_PushButton")
        self.gridLayout_66.addWidget(self.UnblockATMCard_PushButton, 7, 3, 1, 1)
        spacerItem122 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_66.addItem(spacerItem122, 10, 0, 1, 5)
        spacerItem123 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_66.addItem(spacerItem123, 0, 0, 1, 5)
        self.gridLayout_67.addWidget(self.ATMCardServices_Frame, 0, 0, 1, 1)
        self.ATMCardServices_ScrollArea.setWidget(self.scrollAreaWidgetContents_22)
        self.gridLayout_65.addWidget(self.ATMCardServices_ScrollArea, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ATMCardServices_Page_16)
        self.RequestDebitCard_Page_17 = QtWidgets.QWidget()
        self.RequestDebitCard_Page_17.setObjectName("RequestDebitCard_Page_17")
        self.gridLayout_68 = QtWidgets.QGridLayout(self.RequestDebitCard_Page_17)
        self.gridLayout_68.setObjectName("gridLayout_68")
        self.RequestDebitCard_ScrollArea_1 = QtWidgets.QScrollArea(parent=self.RequestDebitCard_Page_17)
        self.RequestDebitCard_ScrollArea_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.RequestDebitCard_ScrollArea_1.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.RequestDebitCard_ScrollArea_1.setWidgetResizable(True)
        self.RequestDebitCard_ScrollArea_1.setObjectName("RequestDebitCard_ScrollArea_1")
        self.scrollAreaWidgetContents_23 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_23.setGeometry(QtCore.QRect(0, 0, 388, 340))
        self.scrollAreaWidgetContents_23.setObjectName("scrollAreaWidgetContents_23")
        self.gridLayout_70 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_23)
        self.gridLayout_70.setObjectName("gridLayout_70")
        self.RequestDebitCard_Frame_1 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_23)
        self.RequestDebitCard_Frame_1.setMinimumSize(QtCore.QSize(0, 0))
        self.RequestDebitCard_Frame_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.RequestDebitCard_Frame_1.setStyleSheet("")
        self.RequestDebitCard_Frame_1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.RequestDebitCard_Frame_1.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.RequestDebitCard_Frame_1.setObjectName("RequestDebitCard_Frame_1")
        self.gridLayout_69 = QtWidgets.QGridLayout(self.RequestDebitCard_Frame_1)
        self.gridLayout_69.setObjectName("gridLayout_69")
        spacerItem124 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_69.addItem(spacerItem124, 6, 0, 1, 4)
        spacerItem125 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_69.addItem(spacerItem125, 4, 0, 1, 1)
        self.RequestDebitCard_Label_1 = QtWidgets.QLabel(parent=self.RequestDebitCard_Frame_1)
        self.RequestDebitCard_Label_1.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.RequestDebitCard_Label_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.RequestDebitCard_Label_1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.RequestDebitCard_Label_1.setObjectName("RequestDebitCard_Label_1")
        self.gridLayout_69.addWidget(self.RequestDebitCard_Label_1, 1, 0, 1, 4)
        self.RequestDebitCardContinue_PushButton = QtWidgets.QPushButton(parent=self.RequestDebitCard_Frame_1)
        self.RequestDebitCardContinue_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.RequestDebitCardContinue_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.RequestDebitCardContinue_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.RequestDebitCardContinue_PushButton.setObjectName("RequestDebitCardContinue_PushButton")
        self.gridLayout_69.addWidget(self.RequestDebitCardContinue_PushButton, 7, 2, 1, 1)
        spacerItem126 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_69.addItem(spacerItem126, 2, 0, 1, 4)
        spacerItem127 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_69.addItem(spacerItem127, 8, 1, 1, 1)
        spacerItem128 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_69.addItem(spacerItem128, 0, 0, 1, 1)
        self.RequestDebitCardSelectTheAccount_Label = QtWidgets.QLabel(parent=self.RequestDebitCard_Frame_1)
        self.RequestDebitCardSelectTheAccount_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.RequestDebitCardSelectTheAccount_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.RequestDebitCardSelectTheAccount_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.RequestDebitCardSelectTheAccount_Label.setObjectName("RequestDebitCardSelectTheAccount_Label")
        self.gridLayout_69.addWidget(self.RequestDebitCardSelectTheAccount_Label, 3, 0, 1, 2)
        self.RequestDebitCardCancel_PushButton_1 = QtWidgets.QPushButton(parent=self.RequestDebitCard_Frame_1)
        self.RequestDebitCardCancel_PushButton_1.setMinimumSize(QtCore.QSize(100, 40))
        self.RequestDebitCardCancel_PushButton_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.RequestDebitCardCancel_PushButton_1.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.RequestDebitCardCancel_PushButton_1.setObjectName("RequestDebitCardCancel_PushButton_1")
        self.gridLayout_69.addWidget(self.RequestDebitCardCancel_PushButton_1, 7, 3, 1, 1)
        self.RequestDebitCard_Frame_3 = QtWidgets.QFrame(parent=self.RequestDebitCard_Frame_1)
        self.RequestDebitCard_Frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.RequestDebitCard_Frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.RequestDebitCard_Frame_3.setObjectName("RequestDebitCard_Frame_3")
        self.gridLayout_158 = QtWidgets.QGridLayout(self.RequestDebitCard_Frame_3)
        self.gridLayout_158.setObjectName("gridLayout_158")
        spacerItem129 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_158.addItem(spacerItem129, 0, 0, 1, 1)
        self.RequestDebitCard_Account_TableWidget = QtWidgets.QTableWidget(parent=self.RequestDebitCard_Frame_3)
        self.RequestDebitCard_Account_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.RequestDebitCard_Account_TableWidget.setStyleSheet("")
        self.RequestDebitCard_Account_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.RequestDebitCard_Account_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.RequestDebitCard_Account_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.RequestDebitCard_Account_TableWidget.setDragEnabled(False)
        self.RequestDebitCard_Account_TableWidget.setShowGrid(True)
        self.RequestDebitCard_Account_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.RequestDebitCard_Account_TableWidget.setRowCount(0)
        self.RequestDebitCard_Account_TableWidget.setObjectName("RequestDebitCard_Account_TableWidget")
        self.RequestDebitCard_Account_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.RequestDebitCard_Account_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.RequestDebitCard_Account_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.RequestDebitCard_Account_TableWidget.setHorizontalHeaderItem(2, item)
        self.RequestDebitCard_Account_TableWidget.horizontalHeader().setVisible(True)
        self.RequestDebitCard_Account_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.RequestDebitCard_Account_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.RequestDebitCard_Account_TableWidget.horizontalHeader().setHighlightSections(True)
        self.RequestDebitCard_Account_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.RequestDebitCard_Account_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.RequestDebitCard_Account_TableWidget.verticalHeader().setVisible(True)
        self.RequestDebitCard_Account_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.RequestDebitCard_Account_TableWidget.verticalHeader().setHighlightSections(True)
        self.RequestDebitCard_Account_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.RequestDebitCard_Account_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_158.addWidget(self.RequestDebitCard_Account_TableWidget, 0, 1, 1, 1)
        spacerItem130 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_158.addItem(spacerItem130, 0, 2, 1, 1)
        self.gridLayout_69.addWidget(self.RequestDebitCard_Frame_3, 5, 0, 1, 4)
        self.gridLayout_70.addWidget(self.RequestDebitCard_Frame_1, 0, 0, 1, 1)
        self.RequestDebitCard_ScrollArea_1.setWidget(self.scrollAreaWidgetContents_23)
        self.gridLayout_68.addWidget(self.RequestDebitCard_ScrollArea_1, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.RequestDebitCard_Page_17)
        self.RequestDebitCard_Page_18 = QtWidgets.QWidget()
        self.RequestDebitCard_Page_18.setObjectName("RequestDebitCard_Page_18")
        self.gridLayout_71 = QtWidgets.QGridLayout(self.RequestDebitCard_Page_18)
        self.gridLayout_71.setObjectName("gridLayout_71")
        self.RequestDebitCard_ScrollArea_2 = QtWidgets.QScrollArea(parent=self.RequestDebitCard_Page_18)
        self.RequestDebitCard_ScrollArea_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.RequestDebitCard_ScrollArea_2.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.RequestDebitCard_ScrollArea_2.setWidgetResizable(True)
        self.RequestDebitCard_ScrollArea_2.setObjectName("RequestDebitCard_ScrollArea_2")
        self.scrollAreaWidgetContents_24 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_24.setGeometry(QtCore.QRect(0, 0, 426, 282))
        self.scrollAreaWidgetContents_24.setObjectName("scrollAreaWidgetContents_24")
        self.gridLayout_73 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_24)
        self.gridLayout_73.setObjectName("gridLayout_73")
        self.RequestDebitCard_Frame_2 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_24)
        self.RequestDebitCard_Frame_2.setMinimumSize(QtCore.QSize(0, 0))
        self.RequestDebitCard_Frame_2.setMaximumSize(QtCore.QSize(600, 16777215))
        self.RequestDebitCard_Frame_2.setStyleSheet("")
        self.RequestDebitCard_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.RequestDebitCard_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.RequestDebitCard_Frame_2.setObjectName("RequestDebitCard_Frame_2")
        self.gridLayout_72 = QtWidgets.QGridLayout(self.RequestDebitCard_Frame_2)
        self.gridLayout_72.setObjectName("gridLayout_72")
        self.NameOnTheCard_LineEdit = QtWidgets.QLineEdit(parent=self.RequestDebitCard_Frame_2)
        self.NameOnTheCard_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.NameOnTheCard_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.NameOnTheCard_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Normal)
        self.NameOnTheCard_LineEdit.setObjectName("NameOnTheCard_LineEdit")
        self.gridLayout_72.addWidget(self.NameOnTheCard_LineEdit, 4, 2, 1, 3)
        spacerItem131 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_72.addItem(spacerItem131, 8, 0, 1, 5)
        self.SelectTypeOfTheCard_Label = QtWidgets.QLabel(parent=self.RequestDebitCard_Frame_2)
        self.SelectTypeOfTheCard_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.SelectTypeOfTheCard_Label.setObjectName("SelectTypeOfTheCard_Label")
        self.gridLayout_72.addWidget(self.SelectTypeOfTheCard_Label, 5, 0, 1, 2)
        spacerItem132 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_72.addItem(spacerItem132, 2, 0, 1, 5)
        self.RequestDebitCardConfirm_PushButton = QtWidgets.QPushButton(parent=self.RequestDebitCard_Frame_2)
        self.RequestDebitCardConfirm_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.RequestDebitCardConfirm_PushButton.setMaximumSize(QtCore.QSize(100, 16777215))
        self.RequestDebitCardConfirm_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.RequestDebitCardConfirm_PushButton.setObjectName("RequestDebitCardConfirm_PushButton")
        self.gridLayout_72.addWidget(self.RequestDebitCardConfirm_PushButton, 7, 3, 1, 1)
        spacerItem133 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_72.addItem(spacerItem133, 6, 0, 1, 5)
        spacerItem134 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_72.addItem(spacerItem134, 4, 1, 1, 1)
        self.CardCategory_Label = QtWidgets.QLabel(parent=self.RequestDebitCard_Frame_2)
        self.CardCategory_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.CardCategory_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.CardCategory_Label.setObjectName("CardCategory_Label")
        self.gridLayout_72.addWidget(self.CardCategory_Label, 3, 0, 1, 1)
        self.RequestDebitCard_Label_2 = QtWidgets.QLabel(parent=self.RequestDebitCard_Frame_2)
        self.RequestDebitCard_Label_2.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.RequestDebitCard_Label_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.RequestDebitCard_Label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.RequestDebitCard_Label_2.setObjectName("RequestDebitCard_Label_2")
        self.gridLayout_72.addWidget(self.RequestDebitCard_Label_2, 1, 0, 1, 5)
        spacerItem135 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_72.addItem(spacerItem135, 0, 0, 1, 5)
        self.CardCategory_ComboBox = QtWidgets.QComboBox(parent=self.RequestDebitCard_Frame_2)
        self.CardCategory_ComboBox.setMinimumSize(QtCore.QSize(0, 30))
        self.CardCategory_ComboBox.setStyleSheet("QComboBox{\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QComboBox:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QComboBox:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.CardCategory_ComboBox.setObjectName("CardCategory_ComboBox")
        self.gridLayout_72.addWidget(self.CardCategory_ComboBox, 3, 2, 1, 3)
        self.RequestDebitCardCancel_PushButton_2 = QtWidgets.QPushButton(parent=self.RequestDebitCard_Frame_2)
        self.RequestDebitCardCancel_PushButton_2.setMinimumSize(QtCore.QSize(100, 40))
        self.RequestDebitCardCancel_PushButton_2.setMaximumSize(QtCore.QSize(100, 16777215))
        self.RequestDebitCardCancel_PushButton_2.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.RequestDebitCardCancel_PushButton_2.setObjectName("RequestDebitCardCancel_PushButton_2")
        self.gridLayout_72.addWidget(self.RequestDebitCardCancel_PushButton_2, 7, 4, 1, 1)
        self.NameOnTheCard_Label = QtWidgets.QLabel(parent=self.RequestDebitCard_Frame_2)
        self.NameOnTheCard_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.NameOnTheCard_Label.setObjectName("NameOnTheCard_Label")
        self.gridLayout_72.addWidget(self.NameOnTheCard_Label, 4, 0, 1, 1)
        self.SelectTypeOfTheCard_ComboBox = QtWidgets.QComboBox(parent=self.RequestDebitCard_Frame_2)
        self.SelectTypeOfTheCard_ComboBox.setMinimumSize(QtCore.QSize(0, 30))
        self.SelectTypeOfTheCard_ComboBox.setStyleSheet("QComboBox{\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QComboBox:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QComboBox:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.SelectTypeOfTheCard_ComboBox.setObjectName("SelectTypeOfTheCard_ComboBox")
        self.gridLayout_72.addWidget(self.SelectTypeOfTheCard_ComboBox, 5, 2, 1, 3)
        self.gridLayout_73.addWidget(self.RequestDebitCard_Frame_2, 0, 0, 1, 1)
        self.RequestDebitCard_ScrollArea_2.setWidget(self.scrollAreaWidgetContents_24)
        self.gridLayout_71.addWidget(self.RequestDebitCard_ScrollArea_2, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.RequestDebitCard_Page_18)
        self.ATMPinGeneration_Page_19 = QtWidgets.QWidget()
        self.ATMPinGeneration_Page_19.setObjectName("ATMPinGeneration_Page_19")
        self.gridLayout_75 = QtWidgets.QGridLayout(self.ATMPinGeneration_Page_19)
        self.gridLayout_75.setObjectName("gridLayout_75")
        self.ATMPinGeneration_ScrollArea_1 = QtWidgets.QScrollArea(parent=self.ATMPinGeneration_Page_19)
        self.ATMPinGeneration_ScrollArea_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ATMPinGeneration_ScrollArea_1.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ATMPinGeneration_ScrollArea_1.setWidgetResizable(True)
        self.ATMPinGeneration_ScrollArea_1.setObjectName("ATMPinGeneration_ScrollArea_1")
        self.scrollAreaWidgetContents_25 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_25.setGeometry(QtCore.QRect(0, 0, 388, 340))
        self.scrollAreaWidgetContents_25.setObjectName("scrollAreaWidgetContents_25")
        self.gridLayout_76 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_25)
        self.gridLayout_76.setObjectName("gridLayout_76")
        self.ATMPinGeneration_Frame_1 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_25)
        self.ATMPinGeneration_Frame_1.setMinimumSize(QtCore.QSize(0, 0))
        self.ATMPinGeneration_Frame_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMPinGeneration_Frame_1.setStyleSheet("")
        self.ATMPinGeneration_Frame_1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ATMPinGeneration_Frame_1.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ATMPinGeneration_Frame_1.setObjectName("ATMPinGeneration_Frame_1")
        self.gridLayout_74 = QtWidgets.QGridLayout(self.ATMPinGeneration_Frame_1)
        self.gridLayout_74.setObjectName("gridLayout_74")
        self.ATMPinGenerationSelectTheAccount_Label = QtWidgets.QLabel(parent=self.ATMPinGeneration_Frame_1)
        self.ATMPinGenerationSelectTheAccount_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.ATMPinGenerationSelectTheAccount_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMPinGenerationSelectTheAccount_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.ATMPinGenerationSelectTheAccount_Label.setObjectName("ATMPinGenerationSelectTheAccount_Label")
        self.gridLayout_74.addWidget(self.ATMPinGenerationSelectTheAccount_Label, 3, 0, 1, 2)
        spacerItem136 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_74.addItem(spacerItem136, 6, 0, 1, 4)
        spacerItem137 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_74.addItem(spacerItem137, 2, 0, 1, 4)
        spacerItem138 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_74.addItem(spacerItem138, 4, 0, 1, 1)
        self.ATMPinGeneration_Label_1 = QtWidgets.QLabel(parent=self.ATMPinGeneration_Frame_1)
        self.ATMPinGeneration_Label_1.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.ATMPinGeneration_Label_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ATMPinGeneration_Label_1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ATMPinGeneration_Label_1.setObjectName("ATMPinGeneration_Label_1")
        self.gridLayout_74.addWidget(self.ATMPinGeneration_Label_1, 1, 0, 1, 4)
        self.ATMPinGenerationCancel_PushButton_1 = QtWidgets.QPushButton(parent=self.ATMPinGeneration_Frame_1)
        self.ATMPinGenerationCancel_PushButton_1.setMinimumSize(QtCore.QSize(100, 40))
        self.ATMPinGenerationCancel_PushButton_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMPinGenerationCancel_PushButton_1.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ATMPinGenerationCancel_PushButton_1.setObjectName("ATMPinGenerationCancel_PushButton_1")
        self.gridLayout_74.addWidget(self.ATMPinGenerationCancel_PushButton_1, 7, 3, 1, 1)
        spacerItem139 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_74.addItem(spacerItem139, 8, 1, 1, 1)
        self.ATMPinGenerationContinue_PushButton_1 = QtWidgets.QPushButton(parent=self.ATMPinGeneration_Frame_1)
        self.ATMPinGenerationContinue_PushButton_1.setMinimumSize(QtCore.QSize(100, 40))
        self.ATMPinGenerationContinue_PushButton_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMPinGenerationContinue_PushButton_1.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ATMPinGenerationContinue_PushButton_1.setObjectName("ATMPinGenerationContinue_PushButton_1")
        self.gridLayout_74.addWidget(self.ATMPinGenerationContinue_PushButton_1, 7, 2, 1, 1)
        spacerItem140 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_74.addItem(spacerItem140, 0, 0, 1, 1)
        self.ATMPinGeneration_Frame_4 = QtWidgets.QFrame(parent=self.ATMPinGeneration_Frame_1)
        self.ATMPinGeneration_Frame_4.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ATMPinGeneration_Frame_4.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ATMPinGeneration_Frame_4.setObjectName("ATMPinGeneration_Frame_4")
        self.gridLayout_159 = QtWidgets.QGridLayout(self.ATMPinGeneration_Frame_4)
        self.gridLayout_159.setObjectName("gridLayout_159")
        spacerItem141 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_159.addItem(spacerItem141, 0, 0, 1, 1)
        self.ATMPinGeneration_Account_TableWidget = QtWidgets.QTableWidget(parent=self.ATMPinGeneration_Frame_4)
        self.ATMPinGeneration_Account_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.ATMPinGeneration_Account_TableWidget.setStyleSheet("")
        self.ATMPinGeneration_Account_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.ATMPinGeneration_Account_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.ATMPinGeneration_Account_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.ATMPinGeneration_Account_TableWidget.setDragEnabled(False)
        self.ATMPinGeneration_Account_TableWidget.setShowGrid(True)
        self.ATMPinGeneration_Account_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.ATMPinGeneration_Account_TableWidget.setRowCount(0)
        self.ATMPinGeneration_Account_TableWidget.setObjectName("ATMPinGeneration_Account_TableWidget")
        self.ATMPinGeneration_Account_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ATMPinGeneration_Account_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.ATMPinGeneration_Account_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ATMPinGeneration_Account_TableWidget.setHorizontalHeaderItem(2, item)
        self.ATMPinGeneration_Account_TableWidget.horizontalHeader().setVisible(True)
        self.ATMPinGeneration_Account_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.ATMPinGeneration_Account_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.ATMPinGeneration_Account_TableWidget.horizontalHeader().setHighlightSections(True)
        self.ATMPinGeneration_Account_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.ATMPinGeneration_Account_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.ATMPinGeneration_Account_TableWidget.verticalHeader().setVisible(True)
        self.ATMPinGeneration_Account_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.ATMPinGeneration_Account_TableWidget.verticalHeader().setHighlightSections(True)
        self.ATMPinGeneration_Account_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.ATMPinGeneration_Account_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_159.addWidget(self.ATMPinGeneration_Account_TableWidget, 0, 1, 1, 1)
        spacerItem142 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_159.addItem(spacerItem142, 0, 2, 1, 1)
        self.gridLayout_74.addWidget(self.ATMPinGeneration_Frame_4, 5, 0, 1, 4)
        self.gridLayout_76.addWidget(self.ATMPinGeneration_Frame_1, 0, 0, 1, 1)
        self.ATMPinGeneration_ScrollArea_1.setWidget(self.scrollAreaWidgetContents_25)
        self.gridLayout_75.addWidget(self.ATMPinGeneration_ScrollArea_1, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ATMPinGeneration_Page_19)
        self.ATMPinGeneration_Page_20 = QtWidgets.QWidget()
        self.ATMPinGeneration_Page_20.setObjectName("ATMPinGeneration_Page_20")
        self.gridLayout_77 = QtWidgets.QGridLayout(self.ATMPinGeneration_Page_20)
        self.gridLayout_77.setObjectName("gridLayout_77")
        self.ATMPinGeneration_ScrollArea_2 = QtWidgets.QScrollArea(parent=self.ATMPinGeneration_Page_20)
        self.ATMPinGeneration_ScrollArea_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ATMPinGeneration_ScrollArea_2.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ATMPinGeneration_ScrollArea_2.setWidgetResizable(True)
        self.ATMPinGeneration_ScrollArea_2.setObjectName("ATMPinGeneration_ScrollArea_2")
        self.scrollAreaWidgetContents_26 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_26.setGeometry(QtCore.QRect(0, 0, 397, 340))
        self.scrollAreaWidgetContents_26.setObjectName("scrollAreaWidgetContents_26")
        self.gridLayout_79 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_26)
        self.gridLayout_79.setObjectName("gridLayout_79")
        self.ATMPinGeneration_Frame_2 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_26)
        self.ATMPinGeneration_Frame_2.setMinimumSize(QtCore.QSize(0, 0))
        self.ATMPinGeneration_Frame_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMPinGeneration_Frame_2.setStyleSheet("")
        self.ATMPinGeneration_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ATMPinGeneration_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ATMPinGeneration_Frame_2.setObjectName("ATMPinGeneration_Frame_2")
        self.gridLayout_78 = QtWidgets.QGridLayout(self.ATMPinGeneration_Frame_2)
        self.gridLayout_78.setObjectName("gridLayout_78")
        spacerItem143 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_78.addItem(spacerItem143, 9, 0, 1, 1)
        spacerItem144 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_78.addItem(spacerItem144, 3, 0, 1, 3)
        spacerItem145 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_78.addItem(spacerItem145, 5, 0, 1, 1)
        self.ATMPinGenerationSelectTheATMCard_Label = QtWidgets.QLabel(parent=self.ATMPinGeneration_Frame_2)
        self.ATMPinGenerationSelectTheATMCard_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.ATMPinGenerationSelectTheATMCard_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMPinGenerationSelectTheATMCard_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.ATMPinGenerationSelectTheATMCard_Label.setObjectName("ATMPinGenerationSelectTheATMCard_Label")
        self.gridLayout_78.addWidget(self.ATMPinGenerationSelectTheATMCard_Label, 4, 0, 1, 1)
        self.ATMPinGenerationCancel_PushButton_2 = QtWidgets.QPushButton(parent=self.ATMPinGeneration_Frame_2)
        self.ATMPinGenerationCancel_PushButton_2.setMinimumSize(QtCore.QSize(100, 40))
        self.ATMPinGenerationCancel_PushButton_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMPinGenerationCancel_PushButton_2.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ATMPinGenerationCancel_PushButton_2.setObjectName("ATMPinGenerationCancel_PushButton_2")
        self.gridLayout_78.addWidget(self.ATMPinGenerationCancel_PushButton_2, 8, 2, 1, 1)
        spacerItem146 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_78.addItem(spacerItem146, 0, 0, 1, 1)
        self.ATMPinGenerationContinue_PushButton_2 = QtWidgets.QPushButton(parent=self.ATMPinGeneration_Frame_2)
        self.ATMPinGenerationContinue_PushButton_2.setMinimumSize(QtCore.QSize(100, 40))
        self.ATMPinGenerationContinue_PushButton_2.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ATMPinGenerationContinue_PushButton_2.setObjectName("ATMPinGenerationContinue_PushButton_2")
        self.gridLayout_78.addWidget(self.ATMPinGenerationContinue_PushButton_2, 8, 1, 1, 1)
        spacerItem147 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_78.addItem(spacerItem147, 7, 0, 1, 3)
        self.ATMPinGeneration_Label_2 = QtWidgets.QLabel(parent=self.ATMPinGeneration_Frame_2)
        self.ATMPinGeneration_Label_2.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.ATMPinGeneration_Label_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ATMPinGeneration_Label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ATMPinGeneration_Label_2.setObjectName("ATMPinGeneration_Label_2")
        self.gridLayout_78.addWidget(self.ATMPinGeneration_Label_2, 1, 0, 1, 3)
        self.ATMPinGeneration_Frame_5 = QtWidgets.QFrame(parent=self.ATMPinGeneration_Frame_2)
        self.ATMPinGeneration_Frame_5.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ATMPinGeneration_Frame_5.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ATMPinGeneration_Frame_5.setObjectName("ATMPinGeneration_Frame_5")
        self.gridLayout_160 = QtWidgets.QGridLayout(self.ATMPinGeneration_Frame_5)
        self.gridLayout_160.setObjectName("gridLayout_160")
        self.ATMPinGeneration_ATM_TableWidget = QtWidgets.QTableWidget(parent=self.ATMPinGeneration_Frame_5)
        self.ATMPinGeneration_ATM_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.ATMPinGeneration_ATM_TableWidget.setStyleSheet("")
        self.ATMPinGeneration_ATM_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.ATMPinGeneration_ATM_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.ATMPinGeneration_ATM_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.ATMPinGeneration_ATM_TableWidget.setDragEnabled(False)
        self.ATMPinGeneration_ATM_TableWidget.setShowGrid(True)
        self.ATMPinGeneration_ATM_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.ATMPinGeneration_ATM_TableWidget.setRowCount(0)
        self.ATMPinGeneration_ATM_TableWidget.setObjectName("ATMPinGeneration_ATM_TableWidget")
        self.ATMPinGeneration_ATM_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ATMPinGeneration_ATM_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.ATMPinGeneration_ATM_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ATMPinGeneration_ATM_TableWidget.setHorizontalHeaderItem(2, item)
        self.ATMPinGeneration_ATM_TableWidget.horizontalHeader().setVisible(True)
        self.ATMPinGeneration_ATM_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.ATMPinGeneration_ATM_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.ATMPinGeneration_ATM_TableWidget.horizontalHeader().setHighlightSections(True)
        self.ATMPinGeneration_ATM_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.ATMPinGeneration_ATM_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.ATMPinGeneration_ATM_TableWidget.verticalHeader().setVisible(True)
        self.ATMPinGeneration_ATM_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.ATMPinGeneration_ATM_TableWidget.verticalHeader().setHighlightSections(True)
        self.ATMPinGeneration_ATM_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.ATMPinGeneration_ATM_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_160.addWidget(self.ATMPinGeneration_ATM_TableWidget, 0, 1, 1, 1)
        spacerItem148 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_160.addItem(spacerItem148, 0, 0, 1, 1)
        spacerItem149 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_160.addItem(spacerItem149, 0, 2, 1, 1)
        self.gridLayout_78.addWidget(self.ATMPinGeneration_Frame_5, 6, 0, 1, 3)
        self.gridLayout_79.addWidget(self.ATMPinGeneration_Frame_2, 0, 0, 1, 1)
        self.ATMPinGeneration_ScrollArea_2.setWidget(self.scrollAreaWidgetContents_26)
        self.gridLayout_77.addWidget(self.ATMPinGeneration_ScrollArea_2, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ATMPinGeneration_Page_20)
        self.ATMPinGeneration_Page_21 = QtWidgets.QWidget()
        self.ATMPinGeneration_Page_21.setObjectName("ATMPinGeneration_Page_21")
        self.gridLayout_80 = QtWidgets.QGridLayout(self.ATMPinGeneration_Page_21)
        self.gridLayout_80.setObjectName("gridLayout_80")
        self.ATMPinGeneration_ScrollArea_3 = QtWidgets.QScrollArea(parent=self.ATMPinGeneration_Page_21)
        self.ATMPinGeneration_ScrollArea_3.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ATMPinGeneration_ScrollArea_3.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ATMPinGeneration_ScrollArea_3.setWidgetResizable(True)
        self.ATMPinGeneration_ScrollArea_3.setObjectName("ATMPinGeneration_ScrollArea_3")
        self.scrollAreaWidgetContents_27 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_27.setGeometry(QtCore.QRect(0, 0, 412, 237))
        self.scrollAreaWidgetContents_27.setObjectName("scrollAreaWidgetContents_27")
        self.gridLayout_82 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_27)
        self.gridLayout_82.setObjectName("gridLayout_82")
        self.ATMPinGeneration_Frame_3 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_27)
        self.ATMPinGeneration_Frame_3.setMinimumSize(QtCore.QSize(0, 0))
        self.ATMPinGeneration_Frame_3.setMaximumSize(QtCore.QSize(400, 16777215))
        self.ATMPinGeneration_Frame_3.setStyleSheet("")
        self.ATMPinGeneration_Frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ATMPinGeneration_Frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ATMPinGeneration_Frame_3.setObjectName("ATMPinGeneration_Frame_3")
        self.gridLayout_81 = QtWidgets.QGridLayout(self.ATMPinGeneration_Frame_3)
        self.gridLayout_81.setObjectName("gridLayout_81")
        spacerItem150 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_81.addItem(spacerItem150, 0, 0, 1, 1)
        spacerItem151 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_81.addItem(spacerItem151, 2, 0, 1, 1)
        spacerItem152 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_81.addItem(spacerItem152, 5, 0, 1, 1)
        self.ATMPinGenerationConfirm_PushButton = QtWidgets.QPushButton(parent=self.ATMPinGeneration_Frame_3)
        self.ATMPinGenerationConfirm_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.ATMPinGenerationConfirm_PushButton.setMaximumSize(QtCore.QSize(100, 16777215))
        self.ATMPinGenerationConfirm_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ATMPinGenerationConfirm_PushButton.setObjectName("ATMPinGenerationConfirm_PushButton")
        self.gridLayout_81.addWidget(self.ATMPinGenerationConfirm_PushButton, 6, 1, 1, 1)
        self.ATMPinGenerarionCancel_PushButton_3 = QtWidgets.QPushButton(parent=self.ATMPinGeneration_Frame_3)
        self.ATMPinGenerarionCancel_PushButton_3.setMinimumSize(QtCore.QSize(100, 40))
        self.ATMPinGenerarionCancel_PushButton_3.setMaximumSize(QtCore.QSize(100, 16777215))
        self.ATMPinGenerarionCancel_PushButton_3.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ATMPinGenerarionCancel_PushButton_3.setObjectName("ATMPinGenerarionCancel_PushButton_3")
        self.gridLayout_81.addWidget(self.ATMPinGenerarionCancel_PushButton_3, 6, 2, 1, 1)
        spacerItem153 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_81.addItem(spacerItem153, 7, 0, 1, 1)
        self.EnterFourDigitsOfYourDesiredPin_LineEdit = QtWidgets.QLineEdit(parent=self.ATMPinGeneration_Frame_3)
        self.EnterFourDigitsOfYourDesiredPin_LineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.EnterFourDigitsOfYourDesiredPin_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.EnterFourDigitsOfYourDesiredPin_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Normal)
        self.EnterFourDigitsOfYourDesiredPin_LineEdit.setObjectName("EnterFourDigitsOfYourDesiredPin_LineEdit")
        self.gridLayout_81.addWidget(self.EnterFourDigitsOfYourDesiredPin_LineEdit, 4, 1, 1, 2)
        self.EnterFourDigitsOfYourDesiredPinLabel = QtWidgets.QLabel(parent=self.ATMPinGeneration_Frame_3)
        self.EnterFourDigitsOfYourDesiredPinLabel.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.EnterFourDigitsOfYourDesiredPinLabel.setObjectName("EnterFourDigitsOfYourDesiredPinLabel")
        self.gridLayout_81.addWidget(self.EnterFourDigitsOfYourDesiredPinLabel, 3, 0, 1, 2)
        self.ATMPinGeneration_Label_3 = QtWidgets.QLabel(parent=self.ATMPinGeneration_Frame_3)
        self.ATMPinGeneration_Label_3.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.ATMPinGeneration_Label_3.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ATMPinGeneration_Label_3.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ATMPinGeneration_Label_3.setObjectName("ATMPinGeneration_Label_3")
        self.gridLayout_81.addWidget(self.ATMPinGeneration_Label_3, 1, 0, 1, 3)
        self.gridLayout_82.addWidget(self.ATMPinGeneration_Frame_3, 0, 0, 1, 1)
        self.ATMPinGeneration_ScrollArea_3.setWidget(self.scrollAreaWidgetContents_27)
        self.gridLayout_80.addWidget(self.ATMPinGeneration_ScrollArea_3, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ATMPinGeneration_Page_21)
        self.ATMCardLimitChange_Page_22 = QtWidgets.QWidget()
        self.ATMCardLimitChange_Page_22.setObjectName("ATMCardLimitChange_Page_22")
        self.gridLayout_83 = QtWidgets.QGridLayout(self.ATMCardLimitChange_Page_22)
        self.gridLayout_83.setObjectName("gridLayout_83")
        self.ATMCardLimitChange_ScrollArea_1 = QtWidgets.QScrollArea(parent=self.ATMCardLimitChange_Page_22)
        self.ATMCardLimitChange_ScrollArea_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ATMCardLimitChange_ScrollArea_1.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ATMCardLimitChange_ScrollArea_1.setWidgetResizable(True)
        self.ATMCardLimitChange_ScrollArea_1.setObjectName("ATMCardLimitChange_ScrollArea_1")
        self.scrollAreaWidgetContents_28 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_28.setGeometry(QtCore.QRect(0, 0, 388, 340))
        self.scrollAreaWidgetContents_28.setObjectName("scrollAreaWidgetContents_28")
        self.gridLayout_85 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_28)
        self.gridLayout_85.setObjectName("gridLayout_85")
        self.ATMCardLimitChange_Frame_1 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_28)
        self.ATMCardLimitChange_Frame_1.setMinimumSize(QtCore.QSize(0, 0))
        self.ATMCardLimitChange_Frame_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMCardLimitChange_Frame_1.setStyleSheet("")
        self.ATMCardLimitChange_Frame_1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ATMCardLimitChange_Frame_1.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ATMCardLimitChange_Frame_1.setObjectName("ATMCardLimitChange_Frame_1")
        self.gridLayout_84 = QtWidgets.QGridLayout(self.ATMCardLimitChange_Frame_1)
        self.gridLayout_84.setObjectName("gridLayout_84")
        spacerItem154 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_84.addItem(spacerItem154, 0, 0, 1, 1)
        spacerItem155 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_84.addItem(spacerItem155, 4, 0, 1, 1)
        self.ATMCardLimitChangeCancel_PushButton_1 = QtWidgets.QPushButton(parent=self.ATMCardLimitChange_Frame_1)
        self.ATMCardLimitChangeCancel_PushButton_1.setMinimumSize(QtCore.QSize(100, 40))
        self.ATMCardLimitChangeCancel_PushButton_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMCardLimitChangeCancel_PushButton_1.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ATMCardLimitChangeCancel_PushButton_1.setObjectName("ATMCardLimitChangeCancel_PushButton_1")
        self.gridLayout_84.addWidget(self.ATMCardLimitChangeCancel_PushButton_1, 7, 3, 1, 1)
        self.ATMCardLimitChangeSelectTheAccount_Label = QtWidgets.QLabel(parent=self.ATMCardLimitChange_Frame_1)
        self.ATMCardLimitChangeSelectTheAccount_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.ATMCardLimitChangeSelectTheAccount_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMCardLimitChangeSelectTheAccount_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.ATMCardLimitChangeSelectTheAccount_Label.setObjectName("ATMCardLimitChangeSelectTheAccount_Label")
        self.gridLayout_84.addWidget(self.ATMCardLimitChangeSelectTheAccount_Label, 3, 0, 1, 2)
        self.ATMCardLimitChange_Label_1 = QtWidgets.QLabel(parent=self.ATMCardLimitChange_Frame_1)
        self.ATMCardLimitChange_Label_1.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.ATMCardLimitChange_Label_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ATMCardLimitChange_Label_1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ATMCardLimitChange_Label_1.setObjectName("ATMCardLimitChange_Label_1")
        self.gridLayout_84.addWidget(self.ATMCardLimitChange_Label_1, 1, 0, 1, 4)
        spacerItem156 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_84.addItem(spacerItem156, 8, 1, 1, 1)
        self.ATMCardLimitChangeContinue_PushButton_1 = QtWidgets.QPushButton(parent=self.ATMCardLimitChange_Frame_1)
        self.ATMCardLimitChangeContinue_PushButton_1.setMinimumSize(QtCore.QSize(100, 40))
        self.ATMCardLimitChangeContinue_PushButton_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMCardLimitChangeContinue_PushButton_1.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ATMCardLimitChangeContinue_PushButton_1.setObjectName("ATMCardLimitChangeContinue_PushButton_1")
        self.gridLayout_84.addWidget(self.ATMCardLimitChangeContinue_PushButton_1, 7, 2, 1, 1)
        spacerItem157 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_84.addItem(spacerItem157, 2, 0, 1, 4)
        spacerItem158 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_84.addItem(spacerItem158, 6, 0, 1, 4)
        self.ATMCardLimitChange_Frame_4 = QtWidgets.QFrame(parent=self.ATMCardLimitChange_Frame_1)
        self.ATMCardLimitChange_Frame_4.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ATMCardLimitChange_Frame_4.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ATMCardLimitChange_Frame_4.setObjectName("ATMCardLimitChange_Frame_4")
        self.gridLayout_161 = QtWidgets.QGridLayout(self.ATMCardLimitChange_Frame_4)
        self.gridLayout_161.setObjectName("gridLayout_161")
        spacerItem159 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_161.addItem(spacerItem159, 0, 0, 1, 1)
        self.ATMCardLimitChange_Account_TableWidget = QtWidgets.QTableWidget(parent=self.ATMCardLimitChange_Frame_4)
        self.ATMCardLimitChange_Account_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.ATMCardLimitChange_Account_TableWidget.setStyleSheet("")
        self.ATMCardLimitChange_Account_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.ATMCardLimitChange_Account_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.ATMCardLimitChange_Account_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.ATMCardLimitChange_Account_TableWidget.setDragEnabled(False)
        self.ATMCardLimitChange_Account_TableWidget.setShowGrid(True)
        self.ATMCardLimitChange_Account_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.ATMCardLimitChange_Account_TableWidget.setRowCount(0)
        self.ATMCardLimitChange_Account_TableWidget.setObjectName("ATMCardLimitChange_Account_TableWidget")
        self.ATMCardLimitChange_Account_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ATMCardLimitChange_Account_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.ATMCardLimitChange_Account_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ATMCardLimitChange_Account_TableWidget.setHorizontalHeaderItem(2, item)
        self.ATMCardLimitChange_Account_TableWidget.horizontalHeader().setVisible(True)
        self.ATMCardLimitChange_Account_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.ATMCardLimitChange_Account_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.ATMCardLimitChange_Account_TableWidget.horizontalHeader().setHighlightSections(True)
        self.ATMCardLimitChange_Account_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.ATMCardLimitChange_Account_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.ATMCardLimitChange_Account_TableWidget.verticalHeader().setVisible(True)
        self.ATMCardLimitChange_Account_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.ATMCardLimitChange_Account_TableWidget.verticalHeader().setHighlightSections(True)
        self.ATMCardLimitChange_Account_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.ATMCardLimitChange_Account_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_161.addWidget(self.ATMCardLimitChange_Account_TableWidget, 0, 1, 1, 1)
        spacerItem160 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_161.addItem(spacerItem160, 0, 2, 1, 1)
        self.gridLayout_84.addWidget(self.ATMCardLimitChange_Frame_4, 5, 0, 1, 4)
        self.gridLayout_85.addWidget(self.ATMCardLimitChange_Frame_1, 0, 0, 1, 1)
        self.ATMCardLimitChange_ScrollArea_1.setWidget(self.scrollAreaWidgetContents_28)
        self.gridLayout_83.addWidget(self.ATMCardLimitChange_ScrollArea_1, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ATMCardLimitChange_Page_22)
        self.ATMCardLimitChange_Page_23 = QtWidgets.QWidget()
        self.ATMCardLimitChange_Page_23.setObjectName("ATMCardLimitChange_Page_23")
        self.gridLayout_86 = QtWidgets.QGridLayout(self.ATMCardLimitChange_Page_23)
        self.gridLayout_86.setObjectName("gridLayout_86")
        self.ATMCardLimitChange_ScrollArea_2 = QtWidgets.QScrollArea(parent=self.ATMCardLimitChange_Page_23)
        self.ATMCardLimitChange_ScrollArea_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ATMCardLimitChange_ScrollArea_2.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ATMCardLimitChange_ScrollArea_2.setWidgetResizable(True)
        self.ATMCardLimitChange_ScrollArea_2.setObjectName("ATMCardLimitChange_ScrollArea_2")
        self.scrollAreaWidgetContents_29 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_29.setGeometry(QtCore.QRect(0, 0, 397, 340))
        self.scrollAreaWidgetContents_29.setObjectName("scrollAreaWidgetContents_29")
        self.gridLayout_88 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_29)
        self.gridLayout_88.setObjectName("gridLayout_88")
        self.ATMCardLimitChange_Frame_2 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_29)
        self.ATMCardLimitChange_Frame_2.setMinimumSize(QtCore.QSize(0, 0))
        self.ATMCardLimitChange_Frame_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMCardLimitChange_Frame_2.setStyleSheet("")
        self.ATMCardLimitChange_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ATMCardLimitChange_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ATMCardLimitChange_Frame_2.setObjectName("ATMCardLimitChange_Frame_2")
        self.gridLayout_87 = QtWidgets.QGridLayout(self.ATMCardLimitChange_Frame_2)
        self.gridLayout_87.setObjectName("gridLayout_87")
        self.ATMCardLimitChangeContinue_PushButton_2 = QtWidgets.QPushButton(parent=self.ATMCardLimitChange_Frame_2)
        self.ATMCardLimitChangeContinue_PushButton_2.setMinimumSize(QtCore.QSize(100, 40))
        self.ATMCardLimitChangeContinue_PushButton_2.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ATMCardLimitChangeContinue_PushButton_2.setObjectName("ATMCardLimitChangeContinue_PushButton_2")
        self.gridLayout_87.addWidget(self.ATMCardLimitChangeContinue_PushButton_2, 8, 1, 1, 1)
        spacerItem161 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_87.addItem(spacerItem161, 9, 0, 1, 1)
        self.ATMCardLimitChangeCancel_PushButton_2 = QtWidgets.QPushButton(parent=self.ATMCardLimitChange_Frame_2)
        self.ATMCardLimitChangeCancel_PushButton_2.setMinimumSize(QtCore.QSize(100, 40))
        self.ATMCardLimitChangeCancel_PushButton_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMCardLimitChangeCancel_PushButton_2.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ATMCardLimitChangeCancel_PushButton_2.setObjectName("ATMCardLimitChangeCancel_PushButton_2")
        self.gridLayout_87.addWidget(self.ATMCardLimitChangeCancel_PushButton_2, 8, 2, 1, 1)
        spacerItem162 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_87.addItem(spacerItem162, 7, 0, 1, 3)
        spacerItem163 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_87.addItem(spacerItem163, 5, 0, 1, 1)
        self.ATMCardLimitChange_Label_2 = QtWidgets.QLabel(parent=self.ATMCardLimitChange_Frame_2)
        self.ATMCardLimitChange_Label_2.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.ATMCardLimitChange_Label_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ATMCardLimitChange_Label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ATMCardLimitChange_Label_2.setObjectName("ATMCardLimitChange_Label_2")
        self.gridLayout_87.addWidget(self.ATMCardLimitChange_Label_2, 1, 0, 1, 3)
        spacerItem164 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_87.addItem(spacerItem164, 0, 0, 1, 1)
        self.ATMCardLimitChangeSelectTheATMCard_Label = QtWidgets.QLabel(parent=self.ATMCardLimitChange_Frame_2)
        self.ATMCardLimitChangeSelectTheATMCard_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.ATMCardLimitChangeSelectTheATMCard_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMCardLimitChangeSelectTheATMCard_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.ATMCardLimitChangeSelectTheATMCard_Label.setObjectName("ATMCardLimitChangeSelectTheATMCard_Label")
        self.gridLayout_87.addWidget(self.ATMCardLimitChangeSelectTheATMCard_Label, 4, 0, 1, 1)
        spacerItem165 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_87.addItem(spacerItem165, 3, 0, 1, 3)
        self.ATMCardLimitChange_Frame_5 = QtWidgets.QFrame(parent=self.ATMCardLimitChange_Frame_2)
        self.ATMCardLimitChange_Frame_5.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ATMCardLimitChange_Frame_5.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ATMCardLimitChange_Frame_5.setObjectName("ATMCardLimitChange_Frame_5")
        self.gridLayout_162 = QtWidgets.QGridLayout(self.ATMCardLimitChange_Frame_5)
        self.gridLayout_162.setObjectName("gridLayout_162")
        spacerItem166 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_162.addItem(spacerItem166, 0, 0, 1, 1)
        self.ATMCardLimitChange_ATM_TableWidget = QtWidgets.QTableWidget(parent=self.ATMCardLimitChange_Frame_5)
        self.ATMCardLimitChange_ATM_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.ATMCardLimitChange_ATM_TableWidget.setStyleSheet("")
        self.ATMCardLimitChange_ATM_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.ATMCardLimitChange_ATM_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.ATMCardLimitChange_ATM_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.ATMCardLimitChange_ATM_TableWidget.setDragEnabled(False)
        self.ATMCardLimitChange_ATM_TableWidget.setShowGrid(True)
        self.ATMCardLimitChange_ATM_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.ATMCardLimitChange_ATM_TableWidget.setRowCount(0)
        self.ATMCardLimitChange_ATM_TableWidget.setObjectName("ATMCardLimitChange_ATM_TableWidget")
        self.ATMCardLimitChange_ATM_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ATMCardLimitChange_ATM_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.ATMCardLimitChange_ATM_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ATMCardLimitChange_ATM_TableWidget.setHorizontalHeaderItem(2, item)
        self.ATMCardLimitChange_ATM_TableWidget.horizontalHeader().setVisible(True)
        self.ATMCardLimitChange_ATM_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.ATMCardLimitChange_ATM_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.ATMCardLimitChange_ATM_TableWidget.horizontalHeader().setHighlightSections(True)
        self.ATMCardLimitChange_ATM_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.ATMCardLimitChange_ATM_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.ATMCardLimitChange_ATM_TableWidget.verticalHeader().setVisible(True)
        self.ATMCardLimitChange_ATM_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.ATMCardLimitChange_ATM_TableWidget.verticalHeader().setHighlightSections(True)
        self.ATMCardLimitChange_ATM_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.ATMCardLimitChange_ATM_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_162.addWidget(self.ATMCardLimitChange_ATM_TableWidget, 0, 1, 1, 1)
        spacerItem167 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_162.addItem(spacerItem167, 0, 2, 1, 1)
        self.gridLayout_87.addWidget(self.ATMCardLimitChange_Frame_5, 6, 0, 1, 3)
        self.gridLayout_88.addWidget(self.ATMCardLimitChange_Frame_2, 0, 0, 1, 1)
        self.ATMCardLimitChange_ScrollArea_2.setWidget(self.scrollAreaWidgetContents_29)
        self.gridLayout_86.addWidget(self.ATMCardLimitChange_ScrollArea_2, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ATMCardLimitChange_Page_23)
        self.ATMCardLimitChange_Page_24 = QtWidgets.QWidget()
        self.ATMCardLimitChange_Page_24.setObjectName("ATMCardLimitChange_Page_24")
        self.gridLayout_90 = QtWidgets.QGridLayout(self.ATMCardLimitChange_Page_24)
        self.gridLayout_90.setObjectName("gridLayout_90")
        self.ATMCardLimitChange_ScrollArea_3 = QtWidgets.QScrollArea(parent=self.ATMCardLimitChange_Page_24)
        self.ATMCardLimitChange_ScrollArea_3.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ATMCardLimitChange_ScrollArea_3.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ATMCardLimitChange_ScrollArea_3.setWidgetResizable(True)
        self.ATMCardLimitChange_ScrollArea_3.setObjectName("ATMCardLimitChange_ScrollArea_3")
        self.scrollAreaWidgetContents_30 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_30.setGeometry(QtCore.QRect(0, 0, 418, 351))
        self.scrollAreaWidgetContents_30.setObjectName("scrollAreaWidgetContents_30")
        self.gridLayout_92 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_30)
        self.gridLayout_92.setObjectName("gridLayout_92")
        self.ATMCardLimitChange_Frame_3 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_30)
        self.ATMCardLimitChange_Frame_3.setMinimumSize(QtCore.QSize(0, 0))
        self.ATMCardLimitChange_Frame_3.setMaximumSize(QtCore.QSize(400, 16777215))
        self.ATMCardLimitChange_Frame_3.setStyleSheet("")
        self.ATMCardLimitChange_Frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ATMCardLimitChange_Frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ATMCardLimitChange_Frame_3.setObjectName("ATMCardLimitChange_Frame_3")
        self.gridLayout_91 = QtWidgets.QGridLayout(self.ATMCardLimitChange_Frame_3)
        self.gridLayout_91.setObjectName("gridLayout_91")
        spacerItem168 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_91.addItem(spacerItem168, 4, 0, 1, 5)
        self.FiftyThousand_Label = QtWidgets.QLabel(parent=self.ATMCardLimitChange_Frame_3)
        self.FiftyThousand_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; \n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.FiftyThousand_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.FiftyThousand_Label.setObjectName("FiftyThousand_Label")
        self.gridLayout_91.addWidget(self.FiftyThousand_Label, 6, 4, 1, 1)
        self.ATMCardLimitChangeCancel_PushButton_3 = QtWidgets.QPushButton(parent=self.ATMCardLimitChange_Frame_3)
        self.ATMCardLimitChangeCancel_PushButton_3.setMinimumSize(QtCore.QSize(100, 40))
        self.ATMCardLimitChangeCancel_PushButton_3.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMCardLimitChangeCancel_PushButton_3.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ATMCardLimitChangeCancel_PushButton_3.setObjectName("ATMCardLimitChangeCancel_PushButton_3")
        self.gridLayout_91.addWidget(self.ATMCardLimitChangeCancel_PushButton_3, 9, 4, 1, 1)
        spacerItem169 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_91.addItem(spacerItem169, 10, 0, 1, 5)
        self.MaximumLimitAllowed_Label = QtWidgets.QLabel(parent=self.ATMCardLimitChange_Frame_3)
        self.MaximumLimitAllowed_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.MaximumLimitAllowed_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.MaximumLimitAllowed_Label.setObjectName("MaximumLimitAllowed_Label")
        self.gridLayout_91.addWidget(self.MaximumLimitAllowed_Label, 6, 0, 1, 3)
        self.YourCurrentATMLimit_Label_1 = QtWidgets.QLabel(parent=self.ATMCardLimitChange_Frame_3)
        self.YourCurrentATMLimit_Label_1.setMinimumSize(QtCore.QSize(0, 35))
        self.YourCurrentATMLimit_Label_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.YourCurrentATMLimit_Label_1.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.YourCurrentATMLimit_Label_1.setObjectName("YourCurrentATMLimit_Label_1")
        self.gridLayout_91.addWidget(self.YourCurrentATMLimit_Label_1, 5, 0, 1, 3)
        self.NewATMLimit_LineEdit = QtWidgets.QLineEdit(parent=self.ATMCardLimitChange_Frame_3)
        self.NewATMLimit_LineEdit.setMinimumSize(QtCore.QSize(0, 35))
        self.NewATMLimit_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 14pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.NewATMLimit_LineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Normal)
        self.NewATMLimit_LineEdit.setObjectName("NewATMLimit_LineEdit")
        self.gridLayout_91.addWidget(self.NewATMLimit_LineEdit, 7, 4, 1, 1)
        self.ATMCardLimitChangeConfirm_PushButton = QtWidgets.QPushButton(parent=self.ATMCardLimitChange_Frame_3)
        self.ATMCardLimitChangeConfirm_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.ATMCardLimitChangeConfirm_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ATMCardLimitChangeConfirm_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ATMCardLimitChangeConfirm_PushButton.setObjectName("ATMCardLimitChangeConfirm_PushButton")
        self.gridLayout_91.addWidget(self.ATMCardLimitChangeConfirm_PushButton, 9, 2, 1, 2)
        spacerItem170 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_91.addItem(spacerItem170, 2, 0, 1, 1)
        self.NewATMLimit_Label = QtWidgets.QLabel(parent=self.ATMCardLimitChange_Frame_3)
        self.NewATMLimit_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.NewATMLimit_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.NewATMLimit_Label.setObjectName("NewATMLimit_Label")
        self.gridLayout_91.addWidget(self.NewATMLimit_Label, 7, 0, 1, 2)
        self.ATMCardLimitChange_Label_3 = QtWidgets.QLabel(parent=self.ATMCardLimitChange_Frame_3)
        self.ATMCardLimitChange_Label_3.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.ATMCardLimitChange_Label_3.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ATMCardLimitChange_Label_3.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ATMCardLimitChange_Label_3.setObjectName("ATMCardLimitChange_Label_3")
        self.gridLayout_91.addWidget(self.ATMCardLimitChange_Label_3, 1, 0, 1, 5)
        spacerItem171 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_91.addItem(spacerItem171, 0, 0, 1, 5)
        self.ChangeDailyLimit_Label = QtWidgets.QLabel(parent=self.ATMCardLimitChange_Frame_3)
        self.ChangeDailyLimit_Label.setStyleSheet("font: 600 13pt \"Segoe UI\"; ")
        self.ChangeDailyLimit_Label.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ChangeDailyLimit_Label.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ChangeDailyLimit_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ChangeDailyLimit_Label.setObjectName("ChangeDailyLimit_Label")
        self.gridLayout_91.addWidget(self.ChangeDailyLimit_Label, 3, 0, 1, 5)
        spacerItem172 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_91.addItem(spacerItem172, 8, 0, 1, 5)
        self.YourCurrentATMLimit_Label_2 = QtWidgets.QLabel(parent=self.ATMCardLimitChange_Frame_3)
        self.YourCurrentATMLimit_Label_2.setStyleSheet("font: 600 12pt \"Segoe UI\"; \n"
"padding-left: 9px;\n"
"padding-right: 14px;")
        self.YourCurrentATMLimit_Label_2.setText("")
        self.YourCurrentATMLimit_Label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.YourCurrentATMLimit_Label_2.setObjectName("YourCurrentATMLimit_Label_2")
        self.gridLayout_91.addWidget(self.YourCurrentATMLimit_Label_2, 5, 4, 1, 1)
        self.gridLayout_92.addWidget(self.ATMCardLimitChange_Frame_3, 0, 0, 1, 1)
        self.ATMCardLimitChange_ScrollArea_3.setWidget(self.scrollAreaWidgetContents_30)
        self.gridLayout_90.addWidget(self.ATMCardLimitChange_ScrollArea_3, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ATMCardLimitChange_Page_24)
        self.BlockATMCard_Page_25 = QtWidgets.QWidget()
        self.BlockATMCard_Page_25.setObjectName("BlockATMCard_Page_25")
        self.gridLayout_93 = QtWidgets.QGridLayout(self.BlockATMCard_Page_25)
        self.gridLayout_93.setObjectName("gridLayout_93")
        self.BlockATMCard_ScrollArea_1 = QtWidgets.QScrollArea(parent=self.BlockATMCard_Page_25)
        self.BlockATMCard_ScrollArea_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.BlockATMCard_ScrollArea_1.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.BlockATMCard_ScrollArea_1.setWidgetResizable(True)
        self.BlockATMCard_ScrollArea_1.setObjectName("BlockATMCard_ScrollArea_1")
        self.scrollAreaWidgetContents_31 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_31.setGeometry(QtCore.QRect(0, 0, 388, 340))
        self.scrollAreaWidgetContents_31.setObjectName("scrollAreaWidgetContents_31")
        self.gridLayout_95 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_31)
        self.gridLayout_95.setObjectName("gridLayout_95")
        self.BlockATMCard_Frame_1 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_31)
        self.BlockATMCard_Frame_1.setMinimumSize(QtCore.QSize(0, 0))
        self.BlockATMCard_Frame_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.BlockATMCard_Frame_1.setStyleSheet("")
        self.BlockATMCard_Frame_1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.BlockATMCard_Frame_1.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.BlockATMCard_Frame_1.setObjectName("BlockATMCard_Frame_1")
        self.gridLayout_94 = QtWidgets.QGridLayout(self.BlockATMCard_Frame_1)
        self.gridLayout_94.setObjectName("gridLayout_94")
        spacerItem173 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_94.addItem(spacerItem173, 6, 0, 1, 4)
        spacerItem174 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_94.addItem(spacerItem174, 2, 0, 1, 4)
        spacerItem175 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_94.addItem(spacerItem175, 8, 1, 1, 1)
        self.BlockATMCardCancel_PushButton = QtWidgets.QPushButton(parent=self.BlockATMCard_Frame_1)
        self.BlockATMCardCancel_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.BlockATMCardCancel_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.BlockATMCardCancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.BlockATMCardCancel_PushButton.setObjectName("BlockATMCardCancel_PushButton")
        self.gridLayout_94.addWidget(self.BlockATMCardCancel_PushButton, 7, 3, 1, 1)
        spacerItem176 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_94.addItem(spacerItem176, 4, 0, 1, 1)
        self.BlockATMCard_Label_1 = QtWidgets.QLabel(parent=self.BlockATMCard_Frame_1)
        self.BlockATMCard_Label_1.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.BlockATMCard_Label_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.BlockATMCard_Label_1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.BlockATMCard_Label_1.setObjectName("BlockATMCard_Label_1")
        self.gridLayout_94.addWidget(self.BlockATMCard_Label_1, 1, 0, 1, 4)
        self.BlockATMCardContinue_PushButton = QtWidgets.QPushButton(parent=self.BlockATMCard_Frame_1)
        self.BlockATMCardContinue_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.BlockATMCardContinue_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.BlockATMCardContinue_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.BlockATMCardContinue_PushButton.setObjectName("BlockATMCardContinue_PushButton")
        self.gridLayout_94.addWidget(self.BlockATMCardContinue_PushButton, 7, 2, 1, 1)
        spacerItem177 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_94.addItem(spacerItem177, 0, 0, 1, 1)
        self.BlockATMCardSelectTheAccount_Label = QtWidgets.QLabel(parent=self.BlockATMCard_Frame_1)
        self.BlockATMCardSelectTheAccount_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.BlockATMCardSelectTheAccount_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.BlockATMCardSelectTheAccount_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.BlockATMCardSelectTheAccount_Label.setObjectName("BlockATMCardSelectTheAccount_Label")
        self.gridLayout_94.addWidget(self.BlockATMCardSelectTheAccount_Label, 3, 0, 1, 2)
        self.BlockATMCard_Frame_4 = QtWidgets.QFrame(parent=self.BlockATMCard_Frame_1)
        self.BlockATMCard_Frame_4.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.BlockATMCard_Frame_4.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.BlockATMCard_Frame_4.setObjectName("BlockATMCard_Frame_4")
        self.gridLayout_163 = QtWidgets.QGridLayout(self.BlockATMCard_Frame_4)
        self.gridLayout_163.setObjectName("gridLayout_163")
        self.BlockATMCard_Account_TableWidget = QtWidgets.QTableWidget(parent=self.BlockATMCard_Frame_4)
        self.BlockATMCard_Account_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.BlockATMCard_Account_TableWidget.setStyleSheet("")
        self.BlockATMCard_Account_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.BlockATMCard_Account_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.BlockATMCard_Account_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.BlockATMCard_Account_TableWidget.setDragEnabled(False)
        self.BlockATMCard_Account_TableWidget.setShowGrid(True)
        self.BlockATMCard_Account_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.BlockATMCard_Account_TableWidget.setRowCount(0)
        self.BlockATMCard_Account_TableWidget.setObjectName("BlockATMCard_Account_TableWidget")
        self.BlockATMCard_Account_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.BlockATMCard_Account_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.BlockATMCard_Account_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.BlockATMCard_Account_TableWidget.setHorizontalHeaderItem(2, item)
        self.BlockATMCard_Account_TableWidget.horizontalHeader().setVisible(True)
        self.BlockATMCard_Account_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.BlockATMCard_Account_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.BlockATMCard_Account_TableWidget.horizontalHeader().setHighlightSections(True)
        self.BlockATMCard_Account_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.BlockATMCard_Account_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.BlockATMCard_Account_TableWidget.verticalHeader().setVisible(True)
        self.BlockATMCard_Account_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.BlockATMCard_Account_TableWidget.verticalHeader().setHighlightSections(True)
        self.BlockATMCard_Account_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.BlockATMCard_Account_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_163.addWidget(self.BlockATMCard_Account_TableWidget, 0, 1, 1, 1)
        spacerItem178 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_163.addItem(spacerItem178, 0, 0, 1, 1)
        spacerItem179 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_163.addItem(spacerItem179, 0, 2, 1, 1)
        self.gridLayout_94.addWidget(self.BlockATMCard_Frame_4, 5, 0, 1, 4)
        self.gridLayout_95.addWidget(self.BlockATMCard_Frame_1, 0, 0, 1, 1)
        self.BlockATMCard_ScrollArea_1.setWidget(self.scrollAreaWidgetContents_31)
        self.gridLayout_93.addWidget(self.BlockATMCard_ScrollArea_1, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.BlockATMCard_Page_25)
        self.BlockATMCard_Page_26 = QtWidgets.QWidget()
        self.BlockATMCard_Page_26.setObjectName("BlockATMCard_Page_26")
        self.gridLayout_96 = QtWidgets.QGridLayout(self.BlockATMCard_Page_26)
        self.gridLayout_96.setObjectName("gridLayout_96")
        self.BlockATMCard_ScrollArea_2 = QtWidgets.QScrollArea(parent=self.BlockATMCard_Page_26)
        self.BlockATMCard_ScrollArea_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.BlockATMCard_ScrollArea_2.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.BlockATMCard_ScrollArea_2.setWidgetResizable(True)
        self.BlockATMCard_ScrollArea_2.setObjectName("BlockATMCard_ScrollArea_2")
        self.scrollAreaWidgetContents_32 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_32.setGeometry(QtCore.QRect(0, 0, 363, 192))
        self.scrollAreaWidgetContents_32.setObjectName("scrollAreaWidgetContents_32")
        self.gridLayout_98 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_32)
        self.gridLayout_98.setObjectName("gridLayout_98")
        self.BlockATMCard_Frame_2 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_32)
        self.BlockATMCard_Frame_2.setMinimumSize(QtCore.QSize(0, 0))
        self.BlockATMCard_Frame_2.setMaximumSize(QtCore.QSize(400, 16777215))
        self.BlockATMCard_Frame_2.setStyleSheet("")
        self.BlockATMCard_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.BlockATMCard_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.BlockATMCard_Frame_2.setObjectName("BlockATMCard_Frame_2")
        self.gridLayout_97 = QtWidgets.QGridLayout(self.BlockATMCard_Frame_2)
        self.gridLayout_97.setObjectName("gridLayout_97")
        spacerItem180 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_97.addItem(spacerItem180, 12, 0, 1, 2)
        spacerItem181 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_97.addItem(spacerItem181, 2, 0, 1, 2)
        self.SelectTheATMCardYouWishToBlockPushButton_1 = QtWidgets.QPushButton(parent=self.BlockATMCard_Frame_2)
        self.SelectTheATMCardYouWishToBlockPushButton_1.setStyleSheet("QPushButton\n"
"{border: 0px solid; border-color: rgb(173, 173, 173);\n"
"font: 600 14pt \"Segoe UI\"; \n"
"    color: rgb(0, 92, 97);\n"
"}\n"
"QPushButton:Hover\n"
"{    \n"
"    \n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(186, 213, 214);\n"
"}")
        self.SelectTheATMCardYouWishToBlockPushButton_1.setObjectName("SelectTheATMCardYouWishToBlockPushButton_1")
        self.gridLayout_97.addWidget(self.SelectTheATMCardYouWishToBlockPushButton_1, 5, 0, 1, 2)
        spacerItem182 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_97.addItem(spacerItem182, 10, 0, 1, 2)
        self.BlockATMCard_Label_2 = QtWidgets.QLabel(parent=self.BlockATMCard_Frame_2)
        self.BlockATMCard_Label_2.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.BlockATMCard_Label_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.BlockATMCard_Label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.BlockATMCard_Label_2.setObjectName("BlockATMCard_Label_2")
        self.gridLayout_97.addWidget(self.BlockATMCard_Label_2, 1, 0, 1, 2)
        spacerItem183 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_97.addItem(spacerItem183, 0, 0, 1, 2)
        self.AlreadyBlockedInactiveATMCard_PushButton = QtWidgets.QPushButton(parent=self.BlockATMCard_Frame_2)
        self.AlreadyBlockedInactiveATMCard_PushButton.setStyleSheet("QPushButton\n"
"{border: 0px solid; border-color: rgb(173, 173, 173);\n"
"font: 600 14pt \"Segoe UI\"; \n"
"    color: rgb(0, 92, 97);\n"
"}\n"
"QPushButton:Hover\n"
"{    \n"
"    \n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(186, 213, 214);\n"
"}")
        self.AlreadyBlockedInactiveATMCard_PushButton.setObjectName("AlreadyBlockedInactiveATMCard_PushButton")
        self.gridLayout_97.addWidget(self.AlreadyBlockedInactiveATMCard_PushButton, 11, 0, 1, 2)
        self.gridLayout_98.addWidget(self.BlockATMCard_Frame_2, 0, 0, 1, 1)
        self.BlockATMCard_ScrollArea_2.setWidget(self.scrollAreaWidgetContents_32)
        self.gridLayout_96.addWidget(self.BlockATMCard_ScrollArea_2, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.BlockATMCard_Page_26)
        self.BlockATMCard_Page_27 = QtWidgets.QWidget()
        self.BlockATMCard_Page_27.setObjectName("BlockATMCard_Page_27")
        self.gridLayout_99 = QtWidgets.QGridLayout(self.BlockATMCard_Page_27)
        self.gridLayout_99.setObjectName("gridLayout_99")
        self.BlockATMCard_ScrollArea_3 = QtWidgets.QScrollArea(parent=self.BlockATMCard_Page_27)
        self.BlockATMCard_ScrollArea_3.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.BlockATMCard_ScrollArea_3.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.BlockATMCard_ScrollArea_3.setWidgetResizable(True)
        self.BlockATMCard_ScrollArea_3.setObjectName("BlockATMCard_ScrollArea_3")
        self.scrollAreaWidgetContents_33 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_33.setGeometry(QtCore.QRect(0, 0, 528, 340))
        self.scrollAreaWidgetContents_33.setObjectName("scrollAreaWidgetContents_33")
        self.gridLayout_101 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_33)
        self.gridLayout_101.setObjectName("gridLayout_101")
        self.BlockATMCard_Frame_3 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_33)
        self.BlockATMCard_Frame_3.setMinimumSize(QtCore.QSize(0, 0))
        self.BlockATMCard_Frame_3.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.BlockATMCard_Frame_3.setStyleSheet("")
        self.BlockATMCard_Frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.BlockATMCard_Frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.BlockATMCard_Frame_3.setObjectName("BlockATMCard_Frame_3")
        self.gridLayout_100 = QtWidgets.QGridLayout(self.BlockATMCard_Frame_3)
        self.gridLayout_100.setObjectName("gridLayout_100")
        spacerItem184 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_100.addItem(spacerItem184, 9, 0, 1, 1)
        self.SelectTheATMCardYouWishToBlock__Label = QtWidgets.QLabel(parent=self.BlockATMCard_Frame_3)
        self.SelectTheATMCardYouWishToBlock__Label.setMinimumSize(QtCore.QSize(0, 35))
        self.SelectTheATMCardYouWishToBlock__Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.SelectTheATMCardYouWishToBlock__Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.SelectTheATMCardYouWishToBlock__Label.setObjectName("SelectTheATMCardYouWishToBlock__Label")
        self.gridLayout_100.addWidget(self.SelectTheATMCardYouWishToBlock__Label, 4, 0, 1, 1)
        spacerItem185 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_100.addItem(spacerItem185, 5, 0, 1, 1)
        spacerItem186 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_100.addItem(spacerItem186, 7, 0, 1, 3)
        self.SelectTheATMCardYouWishToBlockConfirm_PushButton = QtWidgets.QPushButton(parent=self.BlockATMCard_Frame_3)
        self.SelectTheATMCardYouWishToBlockConfirm_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.SelectTheATMCardYouWishToBlockConfirm_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.SelectTheATMCardYouWishToBlockConfirm_PushButton.setObjectName("SelectTheATMCardYouWishToBlockConfirm_PushButton")
        self.gridLayout_100.addWidget(self.SelectTheATMCardYouWishToBlockConfirm_PushButton, 8, 1, 1, 1)
        self.BlockATMCard_Label_3 = QtWidgets.QLabel(parent=self.BlockATMCard_Frame_3)
        self.BlockATMCard_Label_3.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.BlockATMCard_Label_3.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.BlockATMCard_Label_3.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.BlockATMCard_Label_3.setObjectName("BlockATMCard_Label_3")
        self.gridLayout_100.addWidget(self.BlockATMCard_Label_3, 1, 0, 1, 3)
        self.SelectTheATMCardYouWishToBlockCancel_PushButton = QtWidgets.QPushButton(parent=self.BlockATMCard_Frame_3)
        self.SelectTheATMCardYouWishToBlockCancel_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.SelectTheATMCardYouWishToBlockCancel_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.SelectTheATMCardYouWishToBlockCancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.SelectTheATMCardYouWishToBlockCancel_PushButton.setObjectName("SelectTheATMCardYouWishToBlockCancel_PushButton")
        self.gridLayout_100.addWidget(self.SelectTheATMCardYouWishToBlockCancel_PushButton, 8, 2, 1, 1)
        spacerItem187 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_100.addItem(spacerItem187, 0, 0, 1, 1)
        spacerItem188 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_100.addItem(spacerItem188, 3, 0, 1, 3)
        self.BlockATMCard_Frame_5 = QtWidgets.QFrame(parent=self.BlockATMCard_Frame_3)
        self.BlockATMCard_Frame_5.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.BlockATMCard_Frame_5.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.BlockATMCard_Frame_5.setObjectName("BlockATMCard_Frame_5")
        self.gridLayout_164 = QtWidgets.QGridLayout(self.BlockATMCard_Frame_5)
        self.gridLayout_164.setObjectName("gridLayout_164")
        spacerItem189 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_164.addItem(spacerItem189, 0, 0, 1, 1)
        self.BlockATMCard_ATM_TableWidget = QtWidgets.QTableWidget(parent=self.BlockATMCard_Frame_5)
        self.BlockATMCard_ATM_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.BlockATMCard_ATM_TableWidget.setStyleSheet("")
        self.BlockATMCard_ATM_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.BlockATMCard_ATM_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.BlockATMCard_ATM_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.BlockATMCard_ATM_TableWidget.setDragEnabled(False)
        self.BlockATMCard_ATM_TableWidget.setShowGrid(True)
        self.BlockATMCard_ATM_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.BlockATMCard_ATM_TableWidget.setRowCount(0)
        self.BlockATMCard_ATM_TableWidget.setObjectName("BlockATMCard_ATM_TableWidget")
        self.BlockATMCard_ATM_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.BlockATMCard_ATM_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.BlockATMCard_ATM_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.BlockATMCard_ATM_TableWidget.setHorizontalHeaderItem(2, item)
        self.BlockATMCard_ATM_TableWidget.horizontalHeader().setVisible(True)
        self.BlockATMCard_ATM_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.BlockATMCard_ATM_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.BlockATMCard_ATM_TableWidget.horizontalHeader().setHighlightSections(True)
        self.BlockATMCard_ATM_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.BlockATMCard_ATM_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.BlockATMCard_ATM_TableWidget.verticalHeader().setVisible(True)
        self.BlockATMCard_ATM_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.BlockATMCard_ATM_TableWidget.verticalHeader().setHighlightSections(True)
        self.BlockATMCard_ATM_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.BlockATMCard_ATM_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_164.addWidget(self.BlockATMCard_ATM_TableWidget, 0, 1, 1, 1)
        spacerItem190 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_164.addItem(spacerItem190, 0, 2, 1, 1)
        self.gridLayout_100.addWidget(self.BlockATMCard_Frame_5, 6, 0, 1, 3)
        self.gridLayout_101.addWidget(self.BlockATMCard_Frame_3, 0, 0, 1, 1)
        self.BlockATMCard_ScrollArea_3.setWidget(self.scrollAreaWidgetContents_33)
        self.gridLayout_99.addWidget(self.BlockATMCard_ScrollArea_3, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.BlockATMCard_Page_27)
        self.AlreadyBlocked_Page_28 = QtWidgets.QWidget()
        self.AlreadyBlocked_Page_28.setObjectName("AlreadyBlocked_Page_28")
        self.gridLayout_102 = QtWidgets.QGridLayout(self.AlreadyBlocked_Page_28)
        self.gridLayout_102.setObjectName("gridLayout_102")
        self.AlreadyBlockedInactiveATMCard_ScrollArea = QtWidgets.QScrollArea(parent=self.AlreadyBlocked_Page_28)
        self.AlreadyBlockedInactiveATMCard_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.AlreadyBlockedInactiveATMCard_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.AlreadyBlockedInactiveATMCard_ScrollArea.setWidgetResizable(True)
        self.AlreadyBlockedInactiveATMCard_ScrollArea.setObjectName("AlreadyBlockedInactiveATMCard_ScrollArea")
        self.scrollAreaWidgetContents_34 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_34.setGeometry(QtCore.QRect(0, 0, 409, 282))
        self.scrollAreaWidgetContents_34.setObjectName("scrollAreaWidgetContents_34")
        self.gridLayout_104 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_34)
        self.gridLayout_104.setObjectName("gridLayout_104")
        self.AlreadyBlockedInactiveATMCard_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_34)
        self.AlreadyBlockedInactiveATMCard_Frame.setMinimumSize(QtCore.QSize(0, 0))
        self.AlreadyBlockedInactiveATMCard_Frame.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AlreadyBlockedInactiveATMCard_Frame.setStyleSheet("")
        self.AlreadyBlockedInactiveATMCard_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.AlreadyBlockedInactiveATMCard_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.AlreadyBlockedInactiveATMCard_Frame.setObjectName("AlreadyBlockedInactiveATMCard_Frame")
        self.gridLayout_103 = QtWidgets.QGridLayout(self.AlreadyBlockedInactiveATMCard_Frame)
        self.gridLayout_103.setObjectName("gridLayout_103")
        spacerItem191 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_103.addItem(spacerItem191, 0, 0, 1, 2)
        self.AlreadyBlockedInactiveATMCard_Label = QtWidgets.QLabel(parent=self.AlreadyBlockedInactiveATMCard_Frame)
        self.AlreadyBlockedInactiveATMCard_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.AlreadyBlockedInactiveATMCard_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AlreadyBlockedInactiveATMCard_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.AlreadyBlockedInactiveATMCard_Label.setObjectName("AlreadyBlockedInactiveATMCard_Label")
        self.gridLayout_103.addWidget(self.AlreadyBlockedInactiveATMCard_Label, 1, 0, 1, 1)
        spacerItem192 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_103.addItem(spacerItem192, 4, 0, 1, 1)
        spacerItem193 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_103.addItem(spacerItem193, 2, 0, 1, 2)
        spacerItem194 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_103.addItem(spacerItem194, 6, 0, 1, 2)
        self.AlreadyBlockedInactiveATMCardBack_PushButton = QtWidgets.QPushButton(parent=self.AlreadyBlockedInactiveATMCard_Frame)
        self.AlreadyBlockedInactiveATMCardBack_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.AlreadyBlockedInactiveATMCardBack_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AlreadyBlockedInactiveATMCardBack_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.AlreadyBlockedInactiveATMCardBack_PushButton.setObjectName("AlreadyBlockedInactiveATMCardBack_PushButton")
        self.gridLayout_103.addWidget(self.AlreadyBlockedInactiveATMCardBack_PushButton, 5, 1, 1, 1)
        self.AlreadyBlockedInactiveATMCard_Frame_2 = QtWidgets.QFrame(parent=self.AlreadyBlockedInactiveATMCard_Frame)
        self.AlreadyBlockedInactiveATMCard_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.AlreadyBlockedInactiveATMCard_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.AlreadyBlockedInactiveATMCard_Frame_2.setObjectName("AlreadyBlockedInactiveATMCard_Frame_2")
        self.gridLayout_165 = QtWidgets.QGridLayout(self.AlreadyBlockedInactiveATMCard_Frame_2)
        self.gridLayout_165.setObjectName("gridLayout_165")
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget = QtWidgets.QTableWidget(parent=self.AlreadyBlockedInactiveATMCard_Frame_2)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.setStyleSheet("")
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.setDragEnabled(False)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.setShowGrid(True)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.setRowCount(0)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.setObjectName("AlreadyBlockedInactiveATMCard_ATM_TableWidget")
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.setHorizontalHeaderItem(2, item)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.horizontalHeader().setVisible(True)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.horizontalHeader().setHighlightSections(True)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.verticalHeader().setVisible(True)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.verticalHeader().setHighlightSections(True)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_165.addWidget(self.AlreadyBlockedInactiveATMCard_ATM_TableWidget, 0, 1, 1, 1)
        spacerItem195 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_165.addItem(spacerItem195, 0, 0, 1, 1)
        spacerItem196 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_165.addItem(spacerItem196, 0, 2, 1, 1)
        self.gridLayout_103.addWidget(self.AlreadyBlockedInactiveATMCard_Frame_2, 3, 0, 1, 2)
        self.gridLayout_104.addWidget(self.AlreadyBlockedInactiveATMCard_Frame, 0, 0, 1, 1)
        self.AlreadyBlockedInactiveATMCard_ScrollArea.setWidget(self.scrollAreaWidgetContents_34)
        self.gridLayout_102.addWidget(self.AlreadyBlockedInactiveATMCard_ScrollArea, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.AlreadyBlocked_Page_28)
        self.ViewLinkedATMCard_Page_29 = QtWidgets.QWidget()
        self.ViewLinkedATMCard_Page_29.setObjectName("ViewLinkedATMCard_Page_29")
        self.gridLayout_105 = QtWidgets.QGridLayout(self.ViewLinkedATMCard_Page_29)
        self.gridLayout_105.setObjectName("gridLayout_105")
        self.ViewLinkedATMCard_ScrollArea_1 = QtWidgets.QScrollArea(parent=self.ViewLinkedATMCard_Page_29)
        self.ViewLinkedATMCard_ScrollArea_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ViewLinkedATMCard_ScrollArea_1.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ViewLinkedATMCard_ScrollArea_1.setWidgetResizable(True)
        self.ViewLinkedATMCard_ScrollArea_1.setObjectName("ViewLinkedATMCard_ScrollArea_1")
        self.scrollAreaWidgetContents_35 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_35.setGeometry(QtCore.QRect(0, 0, 491, 340))
        self.scrollAreaWidgetContents_35.setObjectName("scrollAreaWidgetContents_35")
        self.gridLayout_107 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_35)
        self.gridLayout_107.setObjectName("gridLayout_107")
        self.ViewLinkedATMCard_Frame_1 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_35)
        self.ViewLinkedATMCard_Frame_1.setMinimumSize(QtCore.QSize(0, 0))
        self.ViewLinkedATMCard_Frame_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewLinkedATMCard_Frame_1.setStyleSheet("")
        self.ViewLinkedATMCard_Frame_1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ViewLinkedATMCard_Frame_1.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ViewLinkedATMCard_Frame_1.setObjectName("ViewLinkedATMCard_Frame_1")
        self.gridLayout_106 = QtWidgets.QGridLayout(self.ViewLinkedATMCard_Frame_1)
        self.gridLayout_106.setObjectName("gridLayout_106")
        self.ViewLinkedATMCardCancel_PushButton = QtWidgets.QPushButton(parent=self.ViewLinkedATMCard_Frame_1)
        self.ViewLinkedATMCardCancel_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.ViewLinkedATMCardCancel_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewLinkedATMCardCancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ViewLinkedATMCardCancel_PushButton.setObjectName("ViewLinkedATMCardCancel_PushButton")
        self.gridLayout_106.addWidget(self.ViewLinkedATMCardCancel_PushButton, 8, 2, 1, 1)
        spacerItem197 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_106.addItem(spacerItem197, 3, 0, 1, 3)
        spacerItem198 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_106.addItem(spacerItem198, 9, 0, 1, 1)
        spacerItem199 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_106.addItem(spacerItem199, 0, 0, 1, 1)
        self.SelectTheAccountNumberForLinkedATMCard_Label = QtWidgets.QLabel(parent=self.ViewLinkedATMCard_Frame_1)
        self.SelectTheAccountNumberForLinkedATMCard_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.SelectTheAccountNumberForLinkedATMCard_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.SelectTheAccountNumberForLinkedATMCard_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.SelectTheAccountNumberForLinkedATMCard_Label.setObjectName("SelectTheAccountNumberForLinkedATMCard_Label")
        self.gridLayout_106.addWidget(self.SelectTheAccountNumberForLinkedATMCard_Label, 4, 0, 1, 2)
        self.ViewLinkedATMCard_Label_1 = QtWidgets.QLabel(parent=self.ViewLinkedATMCard_Frame_1)
        self.ViewLinkedATMCard_Label_1.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.ViewLinkedATMCard_Label_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ViewLinkedATMCard_Label_1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ViewLinkedATMCard_Label_1.setObjectName("ViewLinkedATMCard_Label_1")
        self.gridLayout_106.addWidget(self.ViewLinkedATMCard_Label_1, 1, 0, 1, 3)
        self.ViewLinkedATMCardContinue_PushButton = QtWidgets.QPushButton(parent=self.ViewLinkedATMCard_Frame_1)
        self.ViewLinkedATMCardContinue_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.ViewLinkedATMCardContinue_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ViewLinkedATMCardContinue_PushButton.setObjectName("ViewLinkedATMCardContinue_PushButton")
        self.gridLayout_106.addWidget(self.ViewLinkedATMCardContinue_PushButton, 8, 1, 1, 1)
        spacerItem200 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_106.addItem(spacerItem200, 5, 0, 1, 1)
        spacerItem201 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_106.addItem(spacerItem201, 7, 0, 1, 3)
        self.ViewLinkedATMCard_Frame_3 = QtWidgets.QFrame(parent=self.ViewLinkedATMCard_Frame_1)
        self.ViewLinkedATMCard_Frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ViewLinkedATMCard_Frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ViewLinkedATMCard_Frame_3.setObjectName("ViewLinkedATMCard_Frame_3")
        self.gridLayout_166 = QtWidgets.QGridLayout(self.ViewLinkedATMCard_Frame_3)
        self.gridLayout_166.setObjectName("gridLayout_166")
        self.ViewLinkedATMCard_Account_TableWidget = QtWidgets.QTableWidget(parent=self.ViewLinkedATMCard_Frame_3)
        self.ViewLinkedATMCard_Account_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.ViewLinkedATMCard_Account_TableWidget.setStyleSheet("")
        self.ViewLinkedATMCard_Account_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.ViewLinkedATMCard_Account_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.ViewLinkedATMCard_Account_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.ViewLinkedATMCard_Account_TableWidget.setDragEnabled(False)
        self.ViewLinkedATMCard_Account_TableWidget.setShowGrid(True)
        self.ViewLinkedATMCard_Account_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.ViewLinkedATMCard_Account_TableWidget.setRowCount(0)
        self.ViewLinkedATMCard_Account_TableWidget.setObjectName("ViewLinkedATMCard_Account_TableWidget")
        self.ViewLinkedATMCard_Account_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ViewLinkedATMCard_Account_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.ViewLinkedATMCard_Account_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ViewLinkedATMCard_Account_TableWidget.setHorizontalHeaderItem(2, item)
        self.ViewLinkedATMCard_Account_TableWidget.horizontalHeader().setVisible(True)
        self.ViewLinkedATMCard_Account_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.ViewLinkedATMCard_Account_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.ViewLinkedATMCard_Account_TableWidget.horizontalHeader().setHighlightSections(True)
        self.ViewLinkedATMCard_Account_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.ViewLinkedATMCard_Account_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.ViewLinkedATMCard_Account_TableWidget.verticalHeader().setVisible(True)
        self.ViewLinkedATMCard_Account_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.ViewLinkedATMCard_Account_TableWidget.verticalHeader().setHighlightSections(True)
        self.ViewLinkedATMCard_Account_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.ViewLinkedATMCard_Account_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_166.addWidget(self.ViewLinkedATMCard_Account_TableWidget, 0, 1, 1, 1)
        spacerItem202 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_166.addItem(spacerItem202, 0, 0, 1, 1)
        spacerItem203 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_166.addItem(spacerItem203, 0, 2, 1, 1)
        self.gridLayout_106.addWidget(self.ViewLinkedATMCard_Frame_3, 6, 0, 1, 3)
        self.gridLayout_107.addWidget(self.ViewLinkedATMCard_Frame_1, 0, 0, 1, 1)
        self.ViewLinkedATMCard_ScrollArea_1.setWidget(self.scrollAreaWidgetContents_35)
        self.gridLayout_105.addWidget(self.ViewLinkedATMCard_ScrollArea_1, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ViewLinkedATMCard_Page_29)
        self.ViewLinkedATMCard_Page_30 = QtWidgets.QWidget()
        self.ViewLinkedATMCard_Page_30.setObjectName("ViewLinkedATMCard_Page_30")
        self.gridLayout_108 = QtWidgets.QGridLayout(self.ViewLinkedATMCard_Page_30)
        self.gridLayout_108.setObjectName("gridLayout_108")
        self.ViewLinkedATMCard_ScrollArea_2 = QtWidgets.QScrollArea(parent=self.ViewLinkedATMCard_Page_30)
        self.ViewLinkedATMCard_ScrollArea_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ViewLinkedATMCard_ScrollArea_2.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ViewLinkedATMCard_ScrollArea_2.setWidgetResizable(True)
        self.ViewLinkedATMCard_ScrollArea_2.setObjectName("ViewLinkedATMCard_ScrollArea_2")
        self.scrollAreaWidgetContents_36 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_36.setGeometry(QtCore.QRect(0, 0, 421, 192))
        self.scrollAreaWidgetContents_36.setObjectName("scrollAreaWidgetContents_36")
        self.gridLayout_110 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_36)
        self.gridLayout_110.setObjectName("gridLayout_110")
        self.ViewLinkedATMCard_Frame_2 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_36)
        self.ViewLinkedATMCard_Frame_2.setMinimumSize(QtCore.QSize(0, 0))
        self.ViewLinkedATMCard_Frame_2.setMaximumSize(QtCore.QSize(428, 16777215))
        self.ViewLinkedATMCard_Frame_2.setStyleSheet("")
        self.ViewLinkedATMCard_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ViewLinkedATMCard_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ViewLinkedATMCard_Frame_2.setObjectName("ViewLinkedATMCard_Frame_2")
        self.gridLayout_109 = QtWidgets.QGridLayout(self.ViewLinkedATMCard_Frame_2)
        self.gridLayout_109.setObjectName("gridLayout_109")
        spacerItem204 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_109.addItem(spacerItem204, 12, 0, 1, 2)
        spacerItem205 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_109.addItem(spacerItem205, 2, 0, 1, 2)
        self.ViewTheActiveATMCardNumber_PushButton = QtWidgets.QPushButton(parent=self.ViewLinkedATMCard_Frame_2)
        self.ViewTheActiveATMCardNumber_PushButton.setStyleSheet("QPushButton\n"
"{border: 0px solid; border-color: rgb(173, 173, 173);\n"
"font: 600 14pt \"Segoe UI\"; \n"
"    color: rgb(0, 92, 97);\n"
"}\n"
"QPushButton:Hover\n"
"{    \n"
"    \n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(186, 213, 214);\n"
"}")
        self.ViewTheActiveATMCardNumber_PushButton.setObjectName("ViewTheActiveATMCardNumber_PushButton")
        self.gridLayout_109.addWidget(self.ViewTheActiveATMCardNumber_PushButton, 5, 0, 1, 2)
        spacerItem206 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_109.addItem(spacerItem206, 10, 0, 1, 2)
        self.ViewLinkedATMCard_Label_2 = QtWidgets.QLabel(parent=self.ViewLinkedATMCard_Frame_2)
        self.ViewLinkedATMCard_Label_2.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.ViewLinkedATMCard_Label_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ViewLinkedATMCard_Label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.ViewLinkedATMCard_Label_2.setObjectName("ViewLinkedATMCard_Label_2")
        self.gridLayout_109.addWidget(self.ViewLinkedATMCard_Label_2, 1, 0, 1, 2)
        spacerItem207 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_109.addItem(spacerItem207, 0, 0, 1, 2)
        self.AlreadyBlockedInactiveATMCardNumber_PushButton = QtWidgets.QPushButton(parent=self.ViewLinkedATMCard_Frame_2)
        self.AlreadyBlockedInactiveATMCardNumber_PushButton.setStyleSheet("QPushButton\n"
"{border: 0px solid; border-color: rgb(173, 173, 173);\n"
"font: 600 14pt \"Segoe UI\"; \n"
"    color: rgb(0, 92, 97);\n"
"}\n"
"QPushButton:Hover\n"
"{    \n"
"    \n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(186, 213, 214);\n"
"}")
        self.AlreadyBlockedInactiveATMCardNumber_PushButton.setObjectName("AlreadyBlockedInactiveATMCardNumber_PushButton")
        self.gridLayout_109.addWidget(self.AlreadyBlockedInactiveATMCardNumber_PushButton, 11, 0, 1, 2)
        self.gridLayout_110.addWidget(self.ViewLinkedATMCard_Frame_2, 0, 0, 1, 1)
        self.ViewLinkedATMCard_ScrollArea_2.setWidget(self.scrollAreaWidgetContents_36)
        self.gridLayout_108.addWidget(self.ViewLinkedATMCard_ScrollArea_2, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ViewLinkedATMCard_Page_30)
        self.ViewTheActiveATMCard_Page_31 = QtWidgets.QWidget()
        self.ViewTheActiveATMCard_Page_31.setObjectName("ViewTheActiveATMCard_Page_31")
        self.gridLayout_111 = QtWidgets.QGridLayout(self.ViewTheActiveATMCard_Page_31)
        self.gridLayout_111.setObjectName("gridLayout_111")
        self.ViewTheATMCard_ScrollArea = QtWidgets.QScrollArea(parent=self.ViewTheActiveATMCard_Page_31)
        self.ViewTheATMCard_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.ViewTheATMCard_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.ViewTheATMCard_ScrollArea.setWidgetResizable(True)
        self.ViewTheATMCard_ScrollArea.setObjectName("ViewTheATMCard_ScrollArea")
        self.scrollAreaWidgetContents_37 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_37.setGeometry(QtCore.QRect(0, 0, 389, 282))
        self.scrollAreaWidgetContents_37.setObjectName("scrollAreaWidgetContents_37")
        self.gridLayout_113 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_37)
        self.gridLayout_113.setObjectName("gridLayout_113")
        self.ViewTheActiveATMCard_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_37)
        self.ViewTheActiveATMCard_Frame.setMinimumSize(QtCore.QSize(0, 0))
        self.ViewTheActiveATMCard_Frame.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewTheActiveATMCard_Frame.setStyleSheet("")
        self.ViewTheActiveATMCard_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ViewTheActiveATMCard_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ViewTheActiveATMCard_Frame.setObjectName("ViewTheActiveATMCard_Frame")
        self.gridLayout_112 = QtWidgets.QGridLayout(self.ViewTheActiveATMCard_Frame)
        self.gridLayout_112.setObjectName("gridLayout_112")
        spacerItem208 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_112.addItem(spacerItem208, 6, 0, 1, 2)
        self.ViewTheActiveATMCardNumber_Label = QtWidgets.QLabel(parent=self.ViewTheActiveATMCard_Frame)
        self.ViewTheActiveATMCardNumber_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.ViewTheActiveATMCardNumber_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ViewTheActiveATMCardNumber_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.ViewTheActiveATMCardNumber_Label.setObjectName("ViewTheActiveATMCardNumber_Label")
        self.gridLayout_112.addWidget(self.ViewTheActiveATMCardNumber_Label, 1, 0, 1, 1)
        spacerItem209 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_112.addItem(spacerItem209, 4, 0, 1, 1)
        spacerItem210 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_112.addItem(spacerItem210, 0, 0, 1, 2)
        spacerItem211 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_112.addItem(spacerItem211, 2, 0, 1, 2)
        self.ViewTheActiveATMCardNumberBack_PushButton = QtWidgets.QPushButton(parent=self.ViewTheActiveATMCard_Frame)
        self.ViewTheActiveATMCardNumberBack_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.ViewTheActiveATMCardNumberBack_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.ViewTheActiveATMCardNumberBack_PushButton.setObjectName("ViewTheActiveATMCardNumberBack_PushButton")
        self.gridLayout_112.addWidget(self.ViewTheActiveATMCardNumberBack_PushButton, 5, 1, 1, 1)
        self.ViewTheActiveATMCard_Frame_2 = QtWidgets.QFrame(parent=self.ViewTheActiveATMCard_Frame)
        self.ViewTheActiveATMCard_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ViewTheActiveATMCard_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ViewTheActiveATMCard_Frame_2.setObjectName("ViewTheActiveATMCard_Frame_2")
        self.gridLayout_167 = QtWidgets.QGridLayout(self.ViewTheActiveATMCard_Frame_2)
        self.gridLayout_167.setObjectName("gridLayout_167")
        spacerItem212 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_167.addItem(spacerItem212, 0, 0, 1, 1)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget = QtWidgets.QTableWidget(parent=self.ViewTheActiveATMCard_Frame_2)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.setStyleSheet("")
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.setDragEnabled(False)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.setShowGrid(True)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.setRowCount(0)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.setObjectName("ViewTheActiveATMCardNumber_ATM_TableWidget")
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.setHorizontalHeaderItem(2, item)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.horizontalHeader().setVisible(True)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.horizontalHeader().setHighlightSections(True)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.verticalHeader().setVisible(True)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.verticalHeader().setHighlightSections(True)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_167.addWidget(self.ViewTheActiveATMCardNumber_ATM_TableWidget, 0, 1, 1, 1)
        spacerItem213 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_167.addItem(spacerItem213, 0, 2, 1, 1)
        self.gridLayout_112.addWidget(self.ViewTheActiveATMCard_Frame_2, 3, 0, 1, 2)
        self.gridLayout_113.addWidget(self.ViewTheActiveATMCard_Frame, 0, 0, 1, 1)
        self.ViewTheATMCard_ScrollArea.setWidget(self.scrollAreaWidgetContents_37)
        self.gridLayout_111.addWidget(self.ViewTheATMCard_ScrollArea, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.ViewTheActiveATMCard_Page_31)
        self.UnlockATMCard_Page_32 = QtWidgets.QWidget()
        self.UnlockATMCard_Page_32.setObjectName("UnlockATMCard_Page_32")
        self.gridLayout_124 = QtWidgets.QGridLayout(self.UnlockATMCard_Page_32)
        self.gridLayout_124.setObjectName("gridLayout_124")
        self.UnblockATMCard_ScrollArea_1 = QtWidgets.QScrollArea(parent=self.UnlockATMCard_Page_32)
        self.UnblockATMCard_ScrollArea_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.UnblockATMCard_ScrollArea_1.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.UnblockATMCard_ScrollArea_1.setWidgetResizable(True)
        self.UnblockATMCard_ScrollArea_1.setObjectName("UnblockATMCard_ScrollArea_1")
        self.scrollAreaWidgetContents_42 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_42.setGeometry(QtCore.QRect(0, 0, 388, 340))
        self.scrollAreaWidgetContents_42.setObjectName("scrollAreaWidgetContents_42")
        self.gridLayout_121 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_42)
        self.gridLayout_121.setObjectName("gridLayout_121")
        self.UnblockATMCard_Frame_1 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_42)
        self.UnblockATMCard_Frame_1.setMinimumSize(QtCore.QSize(0, 0))
        self.UnblockATMCard_Frame_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.UnblockATMCard_Frame_1.setStyleSheet("")
        self.UnblockATMCard_Frame_1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.UnblockATMCard_Frame_1.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.UnblockATMCard_Frame_1.setObjectName("UnblockATMCard_Frame_1")
        self.gridLayout_122 = QtWidgets.QGridLayout(self.UnblockATMCard_Frame_1)
        self.gridLayout_122.setObjectName("gridLayout_122")
        self.BlockATMCardSelectTheAccount_Label_2 = QtWidgets.QLabel(parent=self.UnblockATMCard_Frame_1)
        self.BlockATMCardSelectTheAccount_Label_2.setMinimumSize(QtCore.QSize(0, 35))
        self.BlockATMCardSelectTheAccount_Label_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.BlockATMCardSelectTheAccount_Label_2.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.BlockATMCardSelectTheAccount_Label_2.setObjectName("BlockATMCardSelectTheAccount_Label_2")
        self.gridLayout_122.addWidget(self.BlockATMCardSelectTheAccount_Label_2, 3, 0, 1, 2)
        spacerItem214 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_122.addItem(spacerItem214, 6, 0, 1, 4)
        spacerItem215 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_122.addItem(spacerItem215, 2, 0, 1, 4)
        spacerItem216 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_122.addItem(spacerItem216, 0, 0, 1, 1)
        self.UnblockATMCardCancel_PushButton = QtWidgets.QPushButton(parent=self.UnblockATMCard_Frame_1)
        self.UnblockATMCardCancel_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.UnblockATMCardCancel_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.UnblockATMCardCancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.UnblockATMCardCancel_PushButton.setObjectName("UnblockATMCardCancel_PushButton")
        self.gridLayout_122.addWidget(self.UnblockATMCardCancel_PushButton, 7, 3, 1, 1)
        spacerItem217 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_122.addItem(spacerItem217, 8, 1, 1, 1)
        self.UnblockATMCard_Label_1 = QtWidgets.QLabel(parent=self.UnblockATMCard_Frame_1)
        self.UnblockATMCard_Label_1.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.UnblockATMCard_Label_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.UnblockATMCard_Label_1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.UnblockATMCard_Label_1.setObjectName("UnblockATMCard_Label_1")
        self.gridLayout_122.addWidget(self.UnblockATMCard_Label_1, 1, 0, 1, 4)
        spacerItem218 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_122.addItem(spacerItem218, 4, 0, 1, 1)
        self.UnblockATMCardContinue_PushButton = QtWidgets.QPushButton(parent=self.UnblockATMCard_Frame_1)
        self.UnblockATMCardContinue_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.UnblockATMCardContinue_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.UnblockATMCardContinue_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.UnblockATMCardContinue_PushButton.setObjectName("UnblockATMCardContinue_PushButton")
        self.gridLayout_122.addWidget(self.UnblockATMCardContinue_PushButton, 7, 2, 1, 1)
        self.UnblockATMCard_Frame_3 = QtWidgets.QFrame(parent=self.UnblockATMCard_Frame_1)
        self.UnblockATMCard_Frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.UnblockATMCard_Frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.UnblockATMCard_Frame_3.setObjectName("UnblockATMCard_Frame_3")
        self.gridLayout_168 = QtWidgets.QGridLayout(self.UnblockATMCard_Frame_3)
        self.gridLayout_168.setObjectName("gridLayout_168")
        self.UnblockATMCard_Account_TableWidget = QtWidgets.QTableWidget(parent=self.UnblockATMCard_Frame_3)
        self.UnblockATMCard_Account_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.UnblockATMCard_Account_TableWidget.setStyleSheet("")
        self.UnblockATMCard_Account_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.UnblockATMCard_Account_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.UnblockATMCard_Account_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.UnblockATMCard_Account_TableWidget.setDragEnabled(False)
        self.UnblockATMCard_Account_TableWidget.setShowGrid(True)
        self.UnblockATMCard_Account_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.UnblockATMCard_Account_TableWidget.setRowCount(0)
        self.UnblockATMCard_Account_TableWidget.setObjectName("UnblockATMCard_Account_TableWidget")
        self.UnblockATMCard_Account_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.UnblockATMCard_Account_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.UnblockATMCard_Account_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.UnblockATMCard_Account_TableWidget.setHorizontalHeaderItem(2, item)
        self.UnblockATMCard_Account_TableWidget.horizontalHeader().setVisible(True)
        self.UnblockATMCard_Account_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.UnblockATMCard_Account_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.UnblockATMCard_Account_TableWidget.horizontalHeader().setHighlightSections(True)
        self.UnblockATMCard_Account_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.UnblockATMCard_Account_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.UnblockATMCard_Account_TableWidget.verticalHeader().setVisible(True)
        self.UnblockATMCard_Account_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.UnblockATMCard_Account_TableWidget.verticalHeader().setHighlightSections(True)
        self.UnblockATMCard_Account_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.UnblockATMCard_Account_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_168.addWidget(self.UnblockATMCard_Account_TableWidget, 0, 1, 1, 1)
        spacerItem219 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_168.addItem(spacerItem219, 0, 0, 1, 1)
        spacerItem220 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_168.addItem(spacerItem220, 0, 2, 1, 1)
        self.gridLayout_122.addWidget(self.UnblockATMCard_Frame_3, 5, 0, 1, 4)
        self.gridLayout_121.addWidget(self.UnblockATMCard_Frame_1, 0, 0, 1, 1)
        self.UnblockATMCard_ScrollArea_1.setWidget(self.scrollAreaWidgetContents_42)
        self.gridLayout_124.addWidget(self.UnblockATMCard_ScrollArea_1, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.UnlockATMCard_Page_32)
        self.UnlockATMCard_Page_33 = QtWidgets.QWidget()
        self.UnlockATMCard_Page_33.setObjectName("UnlockATMCard_Page_33")
        self.gridLayout_123 = QtWidgets.QGridLayout(self.UnlockATMCard_Page_33)
        self.gridLayout_123.setObjectName("gridLayout_123")
        self.UnblockATMCard_ScrollArea_2 = QtWidgets.QScrollArea(parent=self.UnlockATMCard_Page_33)
        self.UnblockATMCard_ScrollArea_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.UnblockATMCard_ScrollArea_2.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.UnblockATMCard_ScrollArea_2.setWidgetResizable(True)
        self.UnblockATMCard_ScrollArea_2.setObjectName("UnblockATMCard_ScrollArea_2")
        self.scrollAreaWidgetContents_41 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_41.setGeometry(QtCore.QRect(0, 0, 548, 340))
        self.scrollAreaWidgetContents_41.setObjectName("scrollAreaWidgetContents_41")
        self.gridLayout_119 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_41)
        self.gridLayout_119.setObjectName("gridLayout_119")
        self.UnblockATMCard_Frame_2 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_41)
        self.UnblockATMCard_Frame_2.setMinimumSize(QtCore.QSize(0, 0))
        self.UnblockATMCard_Frame_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.UnblockATMCard_Frame_2.setStyleSheet("")
        self.UnblockATMCard_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.UnblockATMCard_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.UnblockATMCard_Frame_2.setObjectName("UnblockATMCard_Frame_2")
        self.gridLayout_120 = QtWidgets.QGridLayout(self.UnblockATMCard_Frame_2)
        self.gridLayout_120.setObjectName("gridLayout_120")
        self.UnblockATMCard_Label_2 = QtWidgets.QLabel(parent=self.UnblockATMCard_Frame_2)
        self.UnblockATMCard_Label_2.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.UnblockATMCard_Label_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.UnblockATMCard_Label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.UnblockATMCard_Label_2.setObjectName("UnblockATMCard_Label_2")
        self.gridLayout_120.addWidget(self.UnblockATMCard_Label_2, 1, 0, 1, 3)
        self.SelectTheATMCardYouWishToUnblockConfirm_PushButton = QtWidgets.QPushButton(parent=self.UnblockATMCard_Frame_2)
        self.SelectTheATMCardYouWishToUnblockConfirm_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.SelectTheATMCardYouWishToUnblockConfirm_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.SelectTheATMCardYouWishToUnblockConfirm_PushButton.setObjectName("SelectTheATMCardYouWishToUnblockConfirm_PushButton")
        self.gridLayout_120.addWidget(self.SelectTheATMCardYouWishToUnblockConfirm_PushButton, 8, 1, 1, 1)
        spacerItem221 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_120.addItem(spacerItem221, 3, 0, 1, 3)
        self.SelectTheATMCardYouWishToUnblockCancel_PushButton = QtWidgets.QPushButton(parent=self.UnblockATMCard_Frame_2)
        self.SelectTheATMCardYouWishToUnblockCancel_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.SelectTheATMCardYouWishToUnblockCancel_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.SelectTheATMCardYouWishToUnblockCancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.SelectTheATMCardYouWishToUnblockCancel_PushButton.setObjectName("SelectTheATMCardYouWishToUnblockCancel_PushButton")
        self.gridLayout_120.addWidget(self.SelectTheATMCardYouWishToUnblockCancel_PushButton, 8, 2, 1, 1)
        spacerItem222 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_120.addItem(spacerItem222, 5, 0, 1, 1)
        spacerItem223 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_120.addItem(spacerItem223, 9, 0, 1, 1)
        spacerItem224 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_120.addItem(spacerItem224, 7, 0, 1, 3)
        self.SelectTheATMCardYouWishToUnblock__Label = QtWidgets.QLabel(parent=self.UnblockATMCard_Frame_2)
        self.SelectTheATMCardYouWishToUnblock__Label.setMinimumSize(QtCore.QSize(0, 35))
        self.SelectTheATMCardYouWishToUnblock__Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.SelectTheATMCardYouWishToUnblock__Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.SelectTheATMCardYouWishToUnblock__Label.setObjectName("SelectTheATMCardYouWishToUnblock__Label")
        self.gridLayout_120.addWidget(self.SelectTheATMCardYouWishToUnblock__Label, 4, 0, 1, 1)
        spacerItem225 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_120.addItem(spacerItem225, 0, 0, 1, 1)
        self.UnblockATMCard_Frame_4 = QtWidgets.QFrame(parent=self.UnblockATMCard_Frame_2)
        self.UnblockATMCard_Frame_4.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.UnblockATMCard_Frame_4.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.UnblockATMCard_Frame_4.setObjectName("UnblockATMCard_Frame_4")
        self.gridLayout_169 = QtWidgets.QGridLayout(self.UnblockATMCard_Frame_4)
        self.gridLayout_169.setObjectName("gridLayout_169")
        spacerItem226 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_169.addItem(spacerItem226, 0, 0, 1, 1)
        self.UnblockATMCard_ATM_TableWidget = QtWidgets.QTableWidget(parent=self.UnblockATMCard_Frame_4)
        self.UnblockATMCard_ATM_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.UnblockATMCard_ATM_TableWidget.setStyleSheet("")
        self.UnblockATMCard_ATM_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.UnblockATMCard_ATM_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.UnblockATMCard_ATM_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.UnblockATMCard_ATM_TableWidget.setDragEnabled(False)
        self.UnblockATMCard_ATM_TableWidget.setShowGrid(True)
        self.UnblockATMCard_ATM_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.UnblockATMCard_ATM_TableWidget.setRowCount(0)
        self.UnblockATMCard_ATM_TableWidget.setObjectName("UnblockATMCard_ATM_TableWidget")
        self.UnblockATMCard_ATM_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.UnblockATMCard_ATM_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.UnblockATMCard_ATM_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.UnblockATMCard_ATM_TableWidget.setHorizontalHeaderItem(2, item)
        self.UnblockATMCard_ATM_TableWidget.horizontalHeader().setVisible(True)
        self.UnblockATMCard_ATM_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.UnblockATMCard_ATM_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.UnblockATMCard_ATM_TableWidget.horizontalHeader().setHighlightSections(True)
        self.UnblockATMCard_ATM_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.UnblockATMCard_ATM_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.UnblockATMCard_ATM_TableWidget.verticalHeader().setVisible(True)
        self.UnblockATMCard_ATM_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.UnblockATMCard_ATM_TableWidget.verticalHeader().setHighlightSections(True)
        self.UnblockATMCard_ATM_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.UnblockATMCard_ATM_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_169.addWidget(self.UnblockATMCard_ATM_TableWidget, 0, 1, 1, 1)
        spacerItem227 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_169.addItem(spacerItem227, 0, 2, 1, 1)
        self.gridLayout_120.addWidget(self.UnblockATMCard_Frame_4, 6, 0, 1, 3)
        self.gridLayout_119.addWidget(self.UnblockATMCard_Frame_2, 0, 0, 1, 1)
        self.UnblockATMCard_ScrollArea_2.setWidget(self.scrollAreaWidgetContents_41)
        self.gridLayout_123.addWidget(self.UnblockATMCard_ScrollArea_2, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.UnlockATMCard_Page_33)
        self.CloseAccount_Page_34 = QtWidgets.QWidget()
        self.CloseAccount_Page_34.setObjectName("CloseAccount_Page_34")
        self.gridLayout_115 = QtWidgets.QGridLayout(self.CloseAccount_Page_34)
        self.gridLayout_115.setObjectName("gridLayout_115")
        self.CloseAccount_ScrollArea = QtWidgets.QScrollArea(parent=self.CloseAccount_Page_34)
        self.CloseAccount_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.CloseAccount_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.CloseAccount_ScrollArea.setWidgetResizable(True)
        self.CloseAccount_ScrollArea.setObjectName("CloseAccount_ScrollArea")
        self.scrollAreaWidgetContents_38 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_38.setGeometry(QtCore.QRect(0, 0, 517, 340))
        self.scrollAreaWidgetContents_38.setObjectName("scrollAreaWidgetContents_38")
        self.gridLayout_116 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_38)
        self.gridLayout_116.setObjectName("gridLayout_116")
        self.CloseAccount_Frame = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_38)
        self.CloseAccount_Frame.setMinimumSize(QtCore.QSize(0, 0))
        self.CloseAccount_Frame.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.CloseAccount_Frame.setStyleSheet("")
        self.CloseAccount_Frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.CloseAccount_Frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.CloseAccount_Frame.setObjectName("CloseAccount_Frame")
        self.gridLayout_114 = QtWidgets.QGridLayout(self.CloseAccount_Frame)
        self.gridLayout_114.setObjectName("gridLayout_114")
        spacerItem228 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_114.addItem(spacerItem228, 4, 0, 1, 1)
        self.SelectTheAccountYouWishToClose_Label = QtWidgets.QLabel(parent=self.CloseAccount_Frame)
        self.SelectTheAccountYouWishToClose_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.SelectTheAccountYouWishToClose_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.SelectTheAccountYouWishToClose_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.SelectTheAccountYouWishToClose_Label.setObjectName("SelectTheAccountYouWishToClose_Label")
        self.gridLayout_114.addWidget(self.SelectTheAccountYouWishToClose_Label, 3, 0, 1, 2)
        spacerItem229 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_114.addItem(spacerItem229, 2, 0, 1, 4)
        spacerItem230 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_114.addItem(spacerItem230, 8, 1, 1, 1)
        self.CloseAccount_Label = QtWidgets.QLabel(parent=self.CloseAccount_Frame)
        self.CloseAccount_Label.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.CloseAccount_Label.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.CloseAccount_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.CloseAccount_Label.setObjectName("CloseAccount_Label")
        self.gridLayout_114.addWidget(self.CloseAccount_Label, 1, 0, 1, 4)
        spacerItem231 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_114.addItem(spacerItem231, 6, 0, 1, 4)
        spacerItem232 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_114.addItem(spacerItem232, 0, 0, 1, 1)
        self.CloseAccountCancel_PushButton = QtWidgets.QPushButton(parent=self.CloseAccount_Frame)
        self.CloseAccountCancel_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.CloseAccountCancel_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.CloseAccountCancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.CloseAccountCancel_PushButton.setObjectName("CloseAccountCancel_PushButton")
        self.gridLayout_114.addWidget(self.CloseAccountCancel_PushButton, 7, 3, 1, 1)
        self.CloseAccountConfirm_PushButton = QtWidgets.QPushButton(parent=self.CloseAccount_Frame)
        self.CloseAccountConfirm_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.CloseAccountConfirm_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.CloseAccountConfirm_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.CloseAccountConfirm_PushButton.setObjectName("CloseAccountConfirm_PushButton")
        self.gridLayout_114.addWidget(self.CloseAccountConfirm_PushButton, 7, 2, 1, 1)
        self.CloseAccount_Frame_2 = QtWidgets.QFrame(parent=self.CloseAccount_Frame)
        self.CloseAccount_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.CloseAccount_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.CloseAccount_Frame_2.setObjectName("CloseAccount_Frame_2")
        self.gridLayout_170 = QtWidgets.QGridLayout(self.CloseAccount_Frame_2)
        self.gridLayout_170.setObjectName("gridLayout_170")
        self.CloseAccount_Account_TableWidget = QtWidgets.QTableWidget(parent=self.CloseAccount_Frame_2)
        self.CloseAccount_Account_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.CloseAccount_Account_TableWidget.setStyleSheet("")
        self.CloseAccount_Account_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.CloseAccount_Account_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.CloseAccount_Account_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.CloseAccount_Account_TableWidget.setDragEnabled(False)
        self.CloseAccount_Account_TableWidget.setShowGrid(True)
        self.CloseAccount_Account_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.CloseAccount_Account_TableWidget.setRowCount(0)
        self.CloseAccount_Account_TableWidget.setObjectName("CloseAccount_Account_TableWidget")
        self.CloseAccount_Account_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.CloseAccount_Account_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.CloseAccount_Account_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.CloseAccount_Account_TableWidget.setHorizontalHeaderItem(2, item)
        self.CloseAccount_Account_TableWidget.horizontalHeader().setVisible(True)
        self.CloseAccount_Account_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.CloseAccount_Account_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.CloseAccount_Account_TableWidget.horizontalHeader().setHighlightSections(True)
        self.CloseAccount_Account_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.CloseAccount_Account_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.CloseAccount_Account_TableWidget.verticalHeader().setVisible(True)
        self.CloseAccount_Account_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.CloseAccount_Account_TableWidget.verticalHeader().setHighlightSections(True)
        self.CloseAccount_Account_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.CloseAccount_Account_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_170.addWidget(self.CloseAccount_Account_TableWidget, 0, 1, 1, 1)
        spacerItem233 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_170.addItem(spacerItem233, 0, 0, 1, 1)
        spacerItem234 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_170.addItem(spacerItem234, 0, 2, 1, 1)
        self.gridLayout_114.addWidget(self.CloseAccount_Frame_2, 5, 0, 1, 4)
        self.gridLayout_116.addWidget(self.CloseAccount_Frame, 0, 0, 1, 1)
        self.CloseAccount_ScrollArea.setWidget(self.scrollAreaWidgetContents_38)
        self.gridLayout_115.addWidget(self.CloseAccount_ScrollArea, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.CloseAccount_Page_34)
        self.AddAccount_Page_35 = QtWidgets.QWidget()
        self.AddAccount_Page_35.setObjectName("AddAccount_Page_35")
        self.gridLayout_140 = QtWidgets.QGridLayout(self.AddAccount_Page_35)
        self.gridLayout_140.setObjectName("gridLayout_140")
        self.AddAccount_ScrollArea_1 = QtWidgets.QScrollArea(parent=self.AddAccount_Page_35)
        self.AddAccount_ScrollArea_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.AddAccount_ScrollArea_1.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.AddAccount_ScrollArea_1.setWidgetResizable(True)
        self.AddAccount_ScrollArea_1.setObjectName("AddAccount_ScrollArea_1")
        self.scrollAreaWidgetContents_47 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_47.setGeometry(QtCore.QRect(0, 0, 191, 340))
        self.scrollAreaWidgetContents_47.setObjectName("scrollAreaWidgetContents_47")
        self.gridLayout_137 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_47)
        self.gridLayout_137.setObjectName("gridLayout_137")
        self.AddAccount_Frame_1 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_47)
        self.AddAccount_Frame_1.setMinimumSize(QtCore.QSize(0, 0))
        self.AddAccount_Frame_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AddAccount_Frame_1.setStyleSheet("")
        self.AddAccount_Frame_1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.AddAccount_Frame_1.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.AddAccount_Frame_1.setObjectName("AddAccount_Frame_1")
        self.gridLayout_139 = QtWidgets.QGridLayout(self.AddAccount_Frame_1)
        self.gridLayout_139.setObjectName("gridLayout_139")
        spacerItem235 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_139.addItem(spacerItem235, 2, 0, 1, 3)
        spacerItem236 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_139.addItem(spacerItem236, 4, 0, 1, 1)
        spacerItem237 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_139.addItem(spacerItem237, 8, 1, 1, 1)
        spacerItem238 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_139.addItem(spacerItem238, 6, 0, 1, 3)
        self.AddAccount_PushButton_2 = QtWidgets.QPushButton(parent=self.AddAccount_Frame_1)
        self.AddAccount_PushButton_2.setMinimumSize(QtCore.QSize(120, 40))
        self.AddAccount_PushButton_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AddAccount_PushButton_2.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.AddAccount_PushButton_2.setObjectName("AddAccount_PushButton_2")
        self.gridLayout_139.addWidget(self.AddAccount_PushButton_2, 7, 1, 1, 2)
        spacerItem239 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_139.addItem(spacerItem239, 0, 0, 1, 1)
        self.AddAccount_AccountList_Label = QtWidgets.QLabel(parent=self.AddAccount_Frame_1)
        self.AddAccount_AccountList_Label.setMinimumSize(QtCore.QSize(0, 35))
        self.AddAccount_AccountList_Label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AddAccount_AccountList_Label.setStyleSheet("font: 600 12pt \"Segoe UI\"; ")
        self.AddAccount_AccountList_Label.setObjectName("AddAccount_AccountList_Label")
        self.gridLayout_139.addWidget(self.AddAccount_AccountList_Label, 3, 0, 1, 2)
        self.AddAccount_Label_1 = QtWidgets.QLabel(parent=self.AddAccount_Frame_1)
        self.AddAccount_Label_1.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.AddAccount_Label_1.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.AddAccount_Label_1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.AddAccount_Label_1.setObjectName("AddAccount_Label_1")
        self.gridLayout_139.addWidget(self.AddAccount_Label_1, 1, 0, 1, 3)
        self.AddAccount_Frame_5 = QtWidgets.QFrame(parent=self.AddAccount_Frame_1)
        self.AddAccount_Frame_5.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.AddAccount_Frame_5.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.AddAccount_Frame_5.setObjectName("AddAccount_Frame_5")
        self.gridLayout_171 = QtWidgets.QGridLayout(self.AddAccount_Frame_5)
        self.gridLayout_171.setObjectName("gridLayout_171")
        spacerItem240 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_171.addItem(spacerItem240, 0, 0, 1, 1)
        self.AddAccount_Account_TableWidget = QtWidgets.QTableWidget(parent=self.AddAccount_Frame_5)
        self.AddAccount_Account_TableWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.AddAccount_Account_TableWidget.setStyleSheet("")
        self.AddAccount_Account_TableWidget.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.AddAccount_Account_TableWidget.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.AddAccount_Account_TableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.AddAccount_Account_TableWidget.setDragEnabled(False)
        self.AddAccount_Account_TableWidget.setShowGrid(True)
        self.AddAccount_Account_TableWidget.setGridStyle(QtCore.Qt.PenStyle.NoPen)
        self.AddAccount_Account_TableWidget.setRowCount(0)
        self.AddAccount_Account_TableWidget.setObjectName("AddAccount_Account_TableWidget")
        self.AddAccount_Account_TableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.AddAccount_Account_TableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        item.setFont(font)
        self.AddAccount_Account_TableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        item.setFont(font)
        self.AddAccount_Account_TableWidget.setHorizontalHeaderItem(2, item)
        self.AddAccount_Account_TableWidget.horizontalHeader().setVisible(True)
        self.AddAccount_Account_TableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.AddAccount_Account_TableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.AddAccount_Account_TableWidget.horizontalHeader().setHighlightSections(True)
        self.AddAccount_Account_TableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.AddAccount_Account_TableWidget.horizontalHeader().setStretchLastSection(False)
        self.AddAccount_Account_TableWidget.verticalHeader().setVisible(True)
        self.AddAccount_Account_TableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.AddAccount_Account_TableWidget.verticalHeader().setDefaultSectionSize(30)
        self.AddAccount_Account_TableWidget.verticalHeader().setHighlightSections(True)
        self.AddAccount_Account_TableWidget.verticalHeader().setMinimumSectionSize(24)
        self.AddAccount_Account_TableWidget.verticalHeader().setSortIndicatorShown(False)
        self.AddAccount_Account_TableWidget.verticalHeader().setStretchLastSection(False)
        self.gridLayout_171.addWidget(self.AddAccount_Account_TableWidget, 0, 1, 1, 1)
        spacerItem241 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_171.addItem(spacerItem241, 0, 2, 1, 1)
        self.gridLayout_139.addWidget(self.AddAccount_Frame_5, 5, 0, 1, 3)
        self.gridLayout_137.addWidget(self.AddAccount_Frame_1, 0, 0, 1, 1)
        self.AddAccount_ScrollArea_1.setWidget(self.scrollAreaWidgetContents_47)
        self.gridLayout_140.addWidget(self.AddAccount_ScrollArea_1, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.AddAccount_Page_35)
        self.AddAccount_Page_36 = QtWidgets.QWidget()
        self.AddAccount_Page_36.setObjectName("AddAccount_Page_36")
        self.gridLayout_138 = QtWidgets.QGridLayout(self.AddAccount_Page_36)
        self.gridLayout_138.setObjectName("gridLayout_138")
        self.AddAccount_ScrollArea_2 = QtWidgets.QScrollArea(parent=self.AddAccount_Page_36)
        self.AddAccount_ScrollArea_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.AddAccount_ScrollArea_2.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.AddAccount_ScrollArea_2.setWidgetResizable(True)
        self.AddAccount_ScrollArea_2.setObjectName("AddAccount_ScrollArea_2")
        self.scrollAreaWidgetContents_46 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_46.setGeometry(QtCore.QRect(0, 0, 576, 449))
        self.scrollAreaWidgetContents_46.setObjectName("scrollAreaWidgetContents_46")
        self.gridLayout_131 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_46)
        self.gridLayout_131.setObjectName("gridLayout_131")
        self.AddAccount_Frame_2 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_46)
        self.AddAccount_Frame_2.setMinimumSize(QtCore.QSize(0, 0))
        self.AddAccount_Frame_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AddAccount_Frame_2.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.AddAccount_Frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.AddAccount_Frame_2.setObjectName("AddAccount_Frame_2")
        self.gridLayout_134 = QtWidgets.QGridLayout(self.AddAccount_Frame_2)
        self.gridLayout_134.setObjectName("gridLayout_134")
        spacerItem242 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_134.addItem(spacerItem242, 1, 0, 1, 1)
        self.AddAccount_Frame_3 = QtWidgets.QFrame(parent=self.AddAccount_Frame_2)
        self.AddAccount_Frame_3.setMinimumSize(QtCore.QSize(500, 0))
        self.AddAccount_Frame_3.setMaximumSize(QtCore.QSize(16777215, 400))
        self.AddAccount_Frame_3.setStyleSheet("background-color: rgb(226, 226, 226);\n"
"padding-left: 5px;\n"
"padding-right: 14px;")
        self.AddAccount_Frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.AddAccount_Frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.AddAccount_Frame_3.setObjectName("AddAccount_Frame_3")
        self.gridLayout_136 = QtWidgets.QGridLayout(self.AddAccount_Frame_3)
        self.gridLayout_136.setObjectName("gridLayout_136")
        self.AddAccount_Address_Label = QtWidgets.QLabel(parent=self.AddAccount_Frame_3)
        self.AddAccount_Address_Label.setStyleSheet("font: 600 16pt \"Segoe UI\"; \n"
"background-color: rgb(200, 200, 200);")
        self.AddAccount_Address_Label.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.AddAccount_Address_Label.setObjectName("AddAccount_Address_Label")
        self.gridLayout_136.addWidget(self.AddAccount_Address_Label, 5, 0, 1, 1)
        self.AddAccount_FirstName_LineEdit = QtWidgets.QLineEdit(parent=self.AddAccount_Frame_3)
        self.AddAccount_FirstName_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.AddAccount_FirstName_LineEdit.setObjectName("AddAccount_FirstName_LineEdit")
        self.gridLayout_136.addWidget(self.AddAccount_FirstName_LineEdit, 0, 2, 1, 1)
        self.AddAccount_Surname_Label = QtWidgets.QLabel(parent=self.AddAccount_Frame_3)
        self.AddAccount_Surname_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AddAccount_Surname_Label.setObjectName("AddAccount_Surname_Label")
        self.gridLayout_136.addWidget(self.AddAccount_Surname_Label, 1, 0, 1, 1)
        self.AddAccount_Gender_ComboBox = QtWidgets.QComboBox(parent=self.AddAccount_Frame_3)
        self.AddAccount_Gender_ComboBox.setStyleSheet("QComboBox{\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QComboBox:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QComboBox:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.AddAccount_Gender_ComboBox.setObjectName("AddAccount_Gender_ComboBox")
        self.gridLayout_136.addWidget(self.AddAccount_Gender_ComboBox, 3, 2, 1, 1)
        self.AddAccount_City_Label = QtWidgets.QLabel(parent=self.AddAccount_Frame_3)
        self.AddAccount_City_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AddAccount_City_Label.setObjectName("AddAccount_City_Label")
        self.gridLayout_136.addWidget(self.AddAccount_City_Label, 7, 0, 1, 1)
        self.AddAccount_Surname_LineEdit = QtWidgets.QLineEdit(parent=self.AddAccount_Frame_3)
        self.AddAccount_Surname_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.AddAccount_Surname_LineEdit.setObjectName("AddAccount_Surname_LineEdit")
        self.gridLayout_136.addWidget(self.AddAccount_Surname_LineEdit, 1, 2, 1, 1)
        self.AddAccount_State_Label = QtWidgets.QLabel(parent=self.AddAccount_Frame_3)
        self.AddAccount_State_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AddAccount_State_Label.setObjectName("AddAccount_State_Label")
        self.gridLayout_136.addWidget(self.AddAccount_State_Label, 8, 0, 1, 1)
        self.AddAccount_DateOfBirth_Label = QtWidgets.QLabel(parent=self.AddAccount_Frame_3)
        self.AddAccount_DateOfBirth_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AddAccount_DateOfBirth_Label.setObjectName("AddAccount_DateOfBirth_Label")
        self.gridLayout_136.addWidget(self.AddAccount_DateOfBirth_Label, 2, 0, 1, 1)
        self.AddAccount_FirstName_Label = QtWidgets.QLabel(parent=self.AddAccount_Frame_3)
        self.AddAccount_FirstName_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AddAccount_FirstName_Label.setObjectName("AddAccount_FirstName_Label")
        self.gridLayout_136.addWidget(self.AddAccount_FirstName_Label, 0, 0, 1, 1)
        self.AddAccount_AccountType_Label = QtWidgets.QLabel(parent=self.AddAccount_Frame_3)
        self.AddAccount_AccountType_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AddAccount_AccountType_Label.setObjectName("AddAccount_AccountType_Label")
        self.gridLayout_136.addWidget(self.AddAccount_AccountType_Label, 4, 0, 1, 1)
        self.AddAccount_SelectAccountType_ComboBox = QtWidgets.QComboBox(parent=self.AddAccount_Frame_3)
        self.AddAccount_SelectAccountType_ComboBox.setStyleSheet("QComboBox{\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QComboBox:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QComboBox:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.AddAccount_SelectAccountType_ComboBox.setObjectName("AddAccount_SelectAccountType_ComboBox")
        self.gridLayout_136.addWidget(self.AddAccount_SelectAccountType_ComboBox, 4, 2, 1, 1)
        self.AddAccount_DateEdit = QtWidgets.QDateEdit(parent=self.AddAccount_Frame_3)
        self.AddAccount_DateEdit.setStyleSheet("QDateEdit{\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QDateEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QDateEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"\n"
"")
        self.AddAccount_DateEdit.setObjectName("AddAccount_DateEdit")
        self.gridLayout_136.addWidget(self.AddAccount_DateEdit, 2, 2, 1, 1)
        self.AddAccount_Gender_Label = QtWidgets.QLabel(parent=self.AddAccount_Frame_3)
        self.AddAccount_Gender_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AddAccount_Gender_Label.setObjectName("AddAccount_Gender_Label")
        self.gridLayout_136.addWidget(self.AddAccount_Gender_Label, 3, 0, 1, 1)
        self.AddAccount_Street_Label = QtWidgets.QLabel(parent=self.AddAccount_Frame_3)
        self.AddAccount_Street_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AddAccount_Street_Label.setObjectName("AddAccount_Street_Label")
        self.gridLayout_136.addWidget(self.AddAccount_Street_Label, 6, 0, 1, 1)
        self.AddAccount_Country_Label = QtWidgets.QLabel(parent=self.AddAccount_Frame_3)
        self.AddAccount_Country_Label.setStyleSheet("font: 600 12pt \"Segoe UI\";")
        self.AddAccount_Country_Label.setObjectName("AddAccount_Country_Label")
        self.gridLayout_136.addWidget(self.AddAccount_Country_Label, 9, 0, 1, 1)
        self.AddAccount_Street_LineEdit = QtWidgets.QLineEdit(parent=self.AddAccount_Frame_3)
        self.AddAccount_Street_LineEdit.setMinimumSize(QtCore.QSize(0, 0))
        self.AddAccount_Street_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.AddAccount_Street_LineEdit.setObjectName("AddAccount_Street_LineEdit")
        self.gridLayout_136.addWidget(self.AddAccount_Street_LineEdit, 6, 2, 1, 1)
        self.AddAccount_City_LineEdit = QtWidgets.QLineEdit(parent=self.AddAccount_Frame_3)
        self.AddAccount_City_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.AddAccount_City_LineEdit.setObjectName("AddAccount_City_LineEdit")
        self.gridLayout_136.addWidget(self.AddAccount_City_LineEdit, 7, 2, 1, 1)
        self.AddAccount_State_LineEdit = QtWidgets.QLineEdit(parent=self.AddAccount_Frame_3)
        self.AddAccount_State_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.AddAccount_State_LineEdit.setObjectName("AddAccount_State_LineEdit")
        self.gridLayout_136.addWidget(self.AddAccount_State_LineEdit, 8, 2, 1, 1)
        self.AddAccount_Country_LineEdit = QtWidgets.QLineEdit(parent=self.AddAccount_Frame_3)
        self.AddAccount_Country_LineEdit.setStyleSheet("QLineEdit {\n"
"border: 1px solid; border-color: rgb(89, 89, 89);\n"
"border-radius: 5px;\n"
"font: 600 12pt \"Segoe UI\";\n"
"padding-left: 9px;\n"
"padding-right: 14px;\n"
"}\n"
"QLineEdit:hover {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}\n"
"QLineEdit:focus {\n"
"border: 2px solid; border-color: rgb(0, 139, 181);\n"
"}")
        self.AddAccount_Country_LineEdit.setObjectName("AddAccount_Country_LineEdit")
        self.gridLayout_136.addWidget(self.AddAccount_Country_LineEdit, 9, 2, 1, 1)
        self.gridLayout_134.addWidget(self.AddAccount_Frame_3, 1, 1, 1, 3)
        spacerItem243 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_134.addItem(spacerItem243, 1, 4, 1, 1)
        spacerItem244 = QtWidgets.QSpacerItem(285, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_134.addItem(spacerItem244, 2, 1, 1, 1)
        self.AddAccount_Submit_PushButton = QtWidgets.QPushButton(parent=self.AddAccount_Frame_2)
        self.AddAccount_Submit_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.AddAccount_Submit_PushButton.setMaximumSize(QtCore.QSize(90, 16777215))
        self.AddAccount_Submit_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.AddAccount_Submit_PushButton.setObjectName("AddAccount_Submit_PushButton")
        self.gridLayout_134.addWidget(self.AddAccount_Submit_PushButton, 2, 2, 1, 1)
        self.AddAccount_Cancel_PushButton = QtWidgets.QPushButton(parent=self.AddAccount_Frame_2)
        self.AddAccount_Cancel_PushButton.setMinimumSize(QtCore.QSize(100, 40))
        self.AddAccount_Cancel_PushButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AddAccount_Cancel_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}")
        self.AddAccount_Cancel_PushButton.setObjectName("AddAccount_Cancel_PushButton")
        self.gridLayout_134.addWidget(self.AddAccount_Cancel_PushButton, 2, 3, 1, 1)
        spacerItem245 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_134.addItem(spacerItem245, 3, 1, 1, 1)
        self.AddAccount_Label = QtWidgets.QLabel(parent=self.AddAccount_Frame_2)
        self.AddAccount_Label.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.AddAccount_Label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.AddAccount_Label.setObjectName("AddAccount_Label")
        self.gridLayout_134.addWidget(self.AddAccount_Label, 0, 1, 1, 3)
        self.gridLayout_131.addWidget(self.AddAccount_Frame_2, 0, 0, 1, 1)
        self.AddAccount_ScrollArea_2.setWidget(self.scrollAreaWidgetContents_46)
        self.gridLayout_138.addWidget(self.AddAccount_ScrollArea_2, 0, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.AddAccount_Page_36)
        self.gridLayout_89.addWidget(self.stackedWidget_2, 1, 1, 1, 1)
        self.MainAccount_ScrollArea.setWidget(self.scrollAreaWidgetContents_6)
        self.gridLayout_22.addWidget(self.MainAccount_ScrollArea, 0, 0, 1, 2)
        self.stackedWidget.addWidget(self.MainAccount_Page_5)
        self.History_Page_6 = QtWidgets.QWidget()
        self.History_Page_6.setObjectName("History_Page_6")
        self.gridLayout_149 = QtWidgets.QGridLayout(self.History_Page_6)
        self.gridLayout_149.setObjectName("gridLayout_149")
        self.Welcome_ScrollArea_2 = QtWidgets.QScrollArea(parent=self.History_Page_6)
        self.Welcome_ScrollArea_2.setStyleSheet("")
        self.Welcome_ScrollArea_2.setWidgetResizable(True)
        self.Welcome_ScrollArea_2.setObjectName("Welcome_ScrollArea_2")
        self.scrollAreaWidgetContents_49 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_49.setGeometry(QtCore.QRect(0, 0, 815, 591))
        self.scrollAreaWidgetContents_49.setObjectName("scrollAreaWidgetContents_49")
        self.gridLayout_143 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_49)
        self.gridLayout_143.setObjectName("gridLayout_143")
        self.History_ScrollArea = QtWidgets.QScrollArea(parent=self.scrollAreaWidgetContents_49)
        self.History_ScrollArea.setMinimumSize(QtCore.QSize(100, 100))
        self.History_ScrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.History_ScrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.History_ScrollArea.setWidgetResizable(True)
        self.History_ScrollArea.setObjectName("History_ScrollArea")
        self.scrollAreaWidgetContents_48 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_48.setGeometry(QtCore.QRect(0, 0, 797, 541))
        self.scrollAreaWidgetContents_48.setObjectName("scrollAreaWidgetContents_48")
        self.gridLayout_144 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_48)
        self.gridLayout_144.setObjectName("gridLayout_144")
        self.AddAccount_ScrollArea_3 = QtWidgets.QScrollArea(parent=self.scrollAreaWidgetContents_48)
        self.AddAccount_ScrollArea_3.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.AddAccount_ScrollArea_3.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.AddAccount_ScrollArea_3.setWidgetResizable(True)
        self.AddAccount_ScrollArea_3.setObjectName("AddAccount_ScrollArea_3")
        self.scrollAreaWidgetContents_50 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_50.setGeometry(QtCore.QRect(0, 0, 779, 467))
        self.scrollAreaWidgetContents_50.setObjectName("scrollAreaWidgetContents_50")
        self.gridLayout_142 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_50)
        self.gridLayout_142.setObjectName("gridLayout_142")
        self.AddAccount_Frame_4 = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_50)
        self.AddAccount_Frame_4.setMinimumSize(QtCore.QSize(0, 0))
        self.AddAccount_Frame_4.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.AddAccount_Frame_4.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.AddAccount_Frame_4.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.AddAccount_Frame_4.setObjectName("AddAccount_Frame_4")
        self.gridLayout_146 = QtWidgets.QGridLayout(self.AddAccount_Frame_4)
        self.gridLayout_146.setObjectName("gridLayout_146")
        spacerItem246 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_146.addItem(spacerItem246, 1, 0, 1, 1)
        spacerItem247 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_146.addItem(spacerItem247, 1, 2, 1, 1)
        self.History_Label_2 = QtWidgets.QLabel(parent=self.AddAccount_Frame_4)
        self.History_Label_2.setStyleSheet("font: 600 12pt \"Segoe UI\"; \n"
"background-color: rgb(230, 230, 230);\n"
"padding-left: 9px;\n"
"padding-right: 9px; \n"
"padding-top: 9px; \n"
"padding-bottom: 9px; ")
        self.History_Label_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.History_Label_2.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.History_Label_2.setObjectName("History_Label_2")
        self.gridLayout_146.addWidget(self.History_Label_2, 1, 1, 1, 1)
        spacerItem248 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_146.addItem(spacerItem248, 0, 1, 1, 1)
        self.gridLayout_142.addWidget(self.AddAccount_Frame_4, 0, 0, 1, 1)
        spacerItem249 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_142.addItem(spacerItem249, 1, 0, 1, 1)
        self.AddAccount_ScrollArea_3.setWidget(self.scrollAreaWidgetContents_50)
        self.gridLayout_144.addWidget(self.AddAccount_ScrollArea_3, 0, 0, 1, 3)
        self.History_GoToWelcomePage_PushButton = QtWidgets.QPushButton(parent=self.scrollAreaWidgetContents_48)
        self.History_GoToWelcomePage_PushButton.setStyleSheet("QPushButton\n"
"{border: 0px solid; border-color: rgb(173, 173, 173);\n"
"font: 600 11pt \"Segoe UI\"; \n"
"}\n"
"QPushButton:Hover\n"
"{    \n"
"    color:  rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(186, 213, 214);\n"
"}")
        self.History_GoToWelcomePage_PushButton.setObjectName("History_GoToWelcomePage_PushButton")
        self.gridLayout_144.addWidget(self.History_GoToWelcomePage_PushButton, 1, 0, 1, 1)
        spacerItem250 = QtWidgets.QSpacerItem(619, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_144.addItem(spacerItem250, 1, 1, 1, 1)
        self.History_ClearData_PushButton = QtWidgets.QPushButton(parent=self.scrollAreaWidgetContents_48)
        self.History_ClearData_PushButton.setMinimumSize(QtCore.QSize(100, 50))
        self.History_ClearData_PushButton.setMaximumSize(QtCore.QSize(90, 16777215))
        self.History_ClearData_PushButton.setStyleSheet("QPushButton\n"
"{\n"
"font: 600 12pt \"Segoe UI\"; \n"
"    color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 139, 181);\n"
"border-radius:10px;\n"
"}\n"
"QPushButton:Hover\n"
"{\n"
"    background-color: rgb(0, 105, 115);\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"    background-color: rgb(0, 81, 104)\n"
"}\n"
"")
        self.History_ClearData_PushButton.setObjectName("History_ClearData_PushButton")
        self.gridLayout_144.addWidget(self.History_ClearData_PushButton, 1, 2, 1, 1)
        self.History_ScrollArea.setWidget(self.scrollAreaWidgetContents_48)
        self.gridLayout_143.addWidget(self.History_ScrollArea, 3, 1, 1, 1)
        self.History_Label_1 = QtWidgets.QLabel(parent=self.scrollAreaWidgetContents_49)
        self.History_Label_1.setStyleSheet("font: 600 14pt \"Segoe UI\"; ")
        self.History_Label_1.setObjectName("History_Label_1")
        self.gridLayout_143.addWidget(self.History_Label_1, 2, 1, 1, 1)
        self.Welcome_ScrollArea_2.setWidget(self.scrollAreaWidgetContents_49)
        self.gridLayout_149.addWidget(self.Welcome_ScrollArea_2, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.History_Page_6)
        self.gridLayout_141.addWidget(self.stackedWidget, 1, 0, 1, 3)
        self.stackedWidget_3.addWidget(self.LeftArrowRightArrow_Page_0)
        self.gridLayout.addWidget(self.stackedWidget_3, 0, 0, 1, 1)
        BAM.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=BAM)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 871, 22))
        self.menubar.setObjectName("menubar")
        BAM.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=BAM)
        self.statusbar.setObjectName("statusbar")
        BAM.setStatusBar(self.statusbar)

        self.retranslateUi(BAM)
        self.stackedWidget_3.setCurrentIndex(0)
        self.stackedWidget.setCurrentIndex(0)
        self.stackedWidget_2.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(BAM)

    def retranslateUi(self, BAM):
        _translate = QtCore.QCoreApplication.translate
        BAM.setWindowTitle(_translate("BAM", "BAM"))
        self.LeftArrow_PushButton.setText(_translate("BAM", "<"))
        self.RightArrow_PushButton.setText(_translate("BAM", ">"))
        self.Login_PushButton_1.setText(_translate("BAM", "Login"))
        self.Register_PushButton_2.setText(_translate("BAM", "Register"))
        self.LetsGetStarted_Label.setText(_translate("BAM", "Let\'s get started!"))
        self.WelcomeToJBBank_Label.setText(_translate("BAM", "Welcome To\n"
"JB Bank"))
        self.HeythereReadyTo_Label.setText(_translate("BAM", "Hey there! Ready to "))
        self.ForgotPassword_PushButton_4.setText(_translate("BAM", "Forgot Password?"))
        self.Login_Label.setText(_translate("BAM", "Login"))
        self.Login_PushButton_2.setText(_translate("BAM", "Login"))
        self.Login_Password_Label.setText(_translate("BAM", "Password"))
        self.LoginUsername_LineEdit_1.setPlaceholderText(_translate("BAM", "Username"))
        self.Login_Password_LineEdit_2.setPlaceholderText(_translate("BAM", "Password"))
        self.ForgotUsername_PushButton_5.setText(_translate("BAM", "Forgot Username?"))
        self.Login_Username_Label.setText(_translate("BAM", "Username"))
        self.Submit_PushButton_6.setText(_translate("BAM", "Submit"))
        self.ForgotUsername_Answer_Label.setText(_translate("BAM", "Answer"))
        self.ForgotUsername_SecurityQuestion_ComboBox.setPlaceholderText(_translate("BAM", "Select Question"))
        self.ForgotUsername_ConfirmProfilePin_Label.setText(_translate("BAM", "Confirm Profile Pin"))
        self.ForgotUsername_Email_Label.setText(_translate("BAM", "Email"))
        self.ForgotUsername_ProfilePin_Label.setText(_translate("BAM", "Profile Pin"))
        self.ForgotUsername_SecurityQuestion_Label.setText(_translate("BAM", "Security Question"))
        self.ForgotUsername_Label.setText(_translate("BAM", "Forgot Username?"))
        self.ForgotPassword_NewPassword_Label.setText(_translate("BAM", "New Password"))
        self.ForgotPassword_Username_Label.setText(_translate("BAM", "Username"))
        self.ForgotPassword_Answer_Label.setText(_translate("BAM", "Answer"))
        self.ForgotPassword_SecurityQuestion_ComboBox.setPlaceholderText(_translate("BAM", "Select Question"))
        self.ForgotPassword_Email_Label.setText(_translate("BAM", "Email"))
        self.ForgotPassword_SecurityQuestion_Label.setText(_translate("BAM", "Security Question"))
        self.ForgotPassword_ConfirmProfilePin_Label.setText(_translate("BAM", "Confirm Profile Pin"))
        self.ForgotPassword_ProfilePin_Label.setText(_translate("BAM", "Profile Pin"))
        self.ForgotPassword_ConfirmNewPassword_Label.setText(_translate("BAM", "Confirm New Password"))
        self.Submit_PushButton_7.setText(_translate("BAM", "Submit"))
        self.ForgotPassword_Label.setText(_translate("BAM", "Forgot Password?"))
        self.Submit_PushButton_8.setText(_translate("BAM", "Submit"))
        self.Registration_Label.setText(_translate("BAM", "Registration"))
        self.Registration_Gender_Label.setText(_translate("BAM", "Gender"))
        self.Registration_Password_Label.setText(_translate("BAM", "Password"))
        self.Registration_ConfirmPassword_Label.setText(_translate("BAM", "Confirm Password"))
        self.Registration_Surname_Label.setText(_translate("BAM", "Surname"))
        self.Registration_Username_Label.setText(_translate("BAM", "Username"))
        self.Registration_AccountType_Label.setText(_translate("BAM", "Account Type"))
        self.Registration_SelectAccountType_ComboBox.setPlaceholderText(_translate("BAM", "Select Account Type"))
        self.Registration_FirstName_Label.setText(_translate("BAM", "First Name"))
        self.Registration_CreateProfilePin_Label.setText(_translate("BAM", "Create Profile Pin"))
        self.Registration_Gender_ComboBox.setPlaceholderText(_translate("BAM", "Select Gender"))
        self.Registration_DateOfBirth_Label.setText(_translate("BAM", "Date Of Birth"))
        self.Registration_Email_Label.setText(_translate("BAM", "Email"))
        self.Registration_ConfirmProfilePin_Label.setText(_translate("BAM", "Confirm Profile Pin"))
        self.Registration_Answer_Label.setText(_translate("BAM", "Answer"))
        self.Registration_SecurityQuestion_Label.setText(_translate("BAM", "Security Question"))
        self.Registration_State_Label.setText(_translate("BAM", "State"))
        self.Registration_Street_Label.setText(_translate("BAM", "Street"))
        self.Registration_Address_Label.setText(_translate("BAM", "Address"))
        self.Registration_Country_Label.setText(_translate("BAM", "Country"))
        self.Registration_City_Label.setText(_translate("BAM", "City"))
        self.Registration_SecurityQuestion_ComboBox.setPlaceholderText(_translate("BAM", "Select Question"))
        self.Account_Profile_PushButton.setText(_translate("BAM", "PB"))
        self.User_First_Surname_Name_Label.setText(_translate("BAM", "TextLabel"))
        self.ViewAccountDetails_PushButton.setText(_translate("BAM", "View Account Details"))
        self.DepositMoney_PushButton.setText(_translate("BAM", "Deposit Money"))
        self.WithdrawMoney_PushButton.setText(_translate("BAM", "Withdraw Money"))
        self.TransferMoney_PushButton.setText(_translate("BAM", "Transfer Money"))
        self.ViewTransaction_PushButton.setText(_translate("BAM", "View Transaction"))
        self.ViewBalance_PushButton.setText(_translate("BAM", "View Balance"))
        self.ATMCardServices_PushButton.setText(_translate("BAM", "ATM Card Services"))
        self.AddAccount_PushButton_1.setText(_translate("BAM", "Add Account"))
        self.CloseAccount_PushButton.setText(_translate("BAM", "Close Account"))
        self.ManageProfile_PushButton.setText(_translate("BAM", "Manage Profile"))
        self.WelcomeDelighted_Label.setText(_translate("BAM", "\"Welcome! Delighted to have you here.\n"
" Take a moment to explore your account.\""))
        self.AccountDetailsSelectTheAccount_Label_2.setText(_translate("BAM", "Select the Account"))
        self.AccountDetails_Label_1.setText(_translate("BAM", "Account Details"))
        self.AccountDetailsCancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.AccountDetailsContinue_PushButton.setText(_translate("BAM", "Continue"))
        self.AccountDetails_Account_TableWidget.setSortingEnabled(False)
        item = self.AccountDetails_Account_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "Account Number"))
        item = self.AccountDetails_Account_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Name"))
        item = self.AccountDetails_Account_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Account Type"))
        self.AccountDetails_Street_Label_1.setText(_translate("BAM", "Street"))
        self.AccountDetails_Surname_Label_2.setText(_translate("BAM", "TextLabel"))
        self.AccountDetails_AccountNumber_Label_2.setText(_translate("BAM", "TextLabel"))
        self.AccountDetails_FirstName_Label_2.setText(_translate("BAM", "TextLabel"))
        self.AccountDetails_FirstName_Label_1.setText(_translate("BAM", "First Name"))
        self.AccountDetails_Surname_Label_1.setText(_translate("BAM", "Surname"))
        self.AccountDetails_Address_Label.setText(_translate("BAM", "Address"))
        self.AccountDetails_AccountType_Label_2.setText(_translate("BAM", "TextLabel"))
        self.AccountDetails_Email_Label_1.setText(_translate("BAM", "Email"))
        self.AccountDetails_Gender_Label_1.setText(_translate("BAM", "Gender"))
        self.AccountDetails_Gender_Label_2.setText(_translate("BAM", "TextLabel"))
        self.AccountDetails_AccountNumber_Label_1.setText(_translate("BAM", "Account Number"))
        self.AccountDetails_DateOfBirth_Label_2.setText(_translate("BAM", "TextLabel"))
        self.AccountDetails_City_Label_1.setText(_translate("BAM", "City"))
        self.AccountDetails_AccountType_Label_1.setText(_translate("BAM", "Account Type"))
        self.AccountDetails_DateOfBirth_Label_1.setText(_translate("BAM", "Date Of Birth"))
        self.AccountDetails_State_Label_1.setText(_translate("BAM", "State"))
        self.AccountDetails_Email_Label_2.setText(_translate("BAM", "TextLabel"))
        self.AccountDetails_Country_Label_1.setText(_translate("BAM", "Country"))
        self.AccountDetails_Street_Label_2.setText(_translate("BAM", "TextLabel"))
        self.AccountDetails_City_Label_2.setText(_translate("BAM", "TextLabel"))
        self.AccountDetails_State_Label_2.setText(_translate("BAM", "TextLabel"))
        self.AccountDetails_Country_Label_2.setText(_translate("BAM", "TextLabel"))
        self.AccountDetails_Label_2.setText(_translate("BAM", "Account Details"))
        self.DepositMoneySelectTheAccount_Label.setText(_translate("BAM", "Select the Account"))
        self.DepositMoney_Cancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.DepositMoneyContinue_PushButton.setText(_translate("BAM", "Continue"))
        self.DepositMoney_Label.setText(_translate("BAM", "Deposit Money"))
        self.DepositMoney_Account_TableWidget.setSortingEnabled(False)
        item = self.DepositMoney_Account_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "Account Number"))
        item = self.DepositMoney_Account_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Name"))
        item = self.DepositMoney_Account_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Account Type"))
        self.DepositAmount_Label.setText(_translate("BAM", "Deposit Amount"))
        self.DepositAmount_Cancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.DepositAmountConfirm_PushButton.setText(_translate("BAM", "Confirm"))
        self.WithdrawMoneyCancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.WithdrawMoneySelectTheAccount_Label.setText(_translate("BAM", "Select the Account"))
        self.WithdrawMoney_Label.setText(_translate("BAM", "Withdraw Money"))
        self.WithdrawMoneyContinue_PushButton.setText(_translate("BAM", "Continue"))
        self.WithdrawMoney_Account_TableWidget.setSortingEnabled(False)
        item = self.WithdrawMoney_Account_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "Account Number"))
        item = self.WithdrawMoney_Account_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Name"))
        item = self.WithdrawMoney_Account_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Account Type"))
        self.WithdrawAmount_Label.setText(_translate("BAM", "Withdraw Amount"))
        self.WithdrawAmountCancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.WithdrawAmount_PushButton.setText(_translate("BAM", "Confirm"))
        self.TransferCancel_PushButton_1.setText(_translate("BAM", "Cancel"))
        self.TransferContinue_PushButton.setText(_translate("BAM", "Continue"))
        self.TransferSelectTheAccount_Label.setText(_translate("BAM", "Select the Account"))
        self.Transfer_Label_1.setText(_translate("BAM", "Transfer"))
        self.Transfer_Account_TableWidget.setSortingEnabled(False)
        item = self.Transfer_Account_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "Account Number"))
        item = self.Transfer_Account_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Name"))
        item = self.Transfer_Account_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Account Type"))
        self.RecipientName_Label.setText(_translate("BAM", "Recipient Name"))
        self.Transfer_Label_2.setText(_translate("BAM", "Transfer"))
        self.TransferConfirm_PushButton.setText(_translate("BAM", "Confirm"))
        self.ReceiverAccountNumber_Label.setText(_translate("BAM", "Recipient Account Number"))
        self.TransferAmount_Label.setText(_translate("BAM", "Transfer Amount"))
        self.TransferCancel_PushButton_2.setText(_translate("BAM", "Cancel"))
        self.RecipientName_LineEdit.setPlaceholderText(_translate("BAM", "First_Name and Surname"))
        self.ViewTransactionContinue_PushButton.setText(_translate("BAM", "Continue"))
        self.ViewTransactionCancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.ViewTransaction_Label_1.setText(_translate("BAM", "View Transaction"))
        self.ViewTransactionSelectTheAccount_Label.setText(_translate("BAM", "Select the Account"))
        self.ViewTransaction_Account_TableWidget.setSortingEnabled(False)
        item = self.ViewTransaction_Account_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "Account Number"))
        item = self.ViewTransaction_Account_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Name"))
        item = self.ViewTransaction_Account_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Account Type"))
        self.ViewTransactionBack_PushButton.setText(_translate("BAM", "Back"))
        self.ViewTransaction_Label_2.setText(_translate("BAM", "View Transaction"))
        self.ViewBalanceContinue_PushButton.setText(_translate("BAM", "Continue"))
        self.ViewBalance_Label.setText(_translate("BAM", "View Balance"))
        self.ViewBalanceSelectTheAccount_Label.setText(_translate("BAM", "Select the Account"))
        self.ViewBalanceCancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.ViewBalance_Account_TableWidget.setSortingEnabled(False)
        item = self.ViewBalance_Account_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "Account Number"))
        item = self.ViewBalance_Account_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Name"))
        item = self.ViewBalance_Account_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Account Type"))
        self.AvailableBalance_PushButton.setText(_translate("BAM", "Back"))
        self.AvailableBalance_Label_1.setText(_translate("BAM", "Available Balance"))
        self.ProfileDetails_Password_Label_2.setText(_translate("BAM", "TextLabel"))
        self.ProfileDetails_Username_Label.setText(_translate("BAM", "Username"))
        self.ProfileDetails_ProfilePin_Label.setText(_translate("BAM", "Profile Pin"))
        self.ProfileDetails_Answer_Label.setText(_translate("BAM", "Answer"))
        self.ProfileDetails_SecurityQuestion_Label.setText(_translate("BAM", "Security Question"))
        self.ProfileDetails_SecurityQuestion_Label_2.setText(_translate("BAM", "TextLabel"))
        self.ProfileDetails_ProfilePin_Label_2.setText(_translate("BAM", "TextLabel"))
        self.ChangeProfilePassword_PushButton.setText(_translate("BAM", "Change Password"))
        self.ProfileDetails_Username_Label_2.setText(_translate("BAM", "TextLabel"))
        self.ProfileDetails_Answer_Label_2.setText(_translate("BAM", "TextLabel"))
        self.ProfileDetails_Password_Label.setText(_translate("BAM", "Password"))
        self.ChangeProfilePin_PushButton.setText(_translate("BAM", "Change Pin"))
        self.ProfileDetails_Email_Label.setText(_translate("BAM", "Email"))
        self.ProfileDetails_Email_Label_2.setText(_translate("BAM", "TextLabel"))
        self.ProfileDetails_Label.setText(_translate("BAM", "Profile Details"))
        self.ChangePassword_NewPassword_Label.setText(_translate("BAM", "New Password"))
        self.ChangePasswordCancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.ChangeProfilePassword_Label.setText(_translate("BAM", "Change Profile Password"))
        self.ChangePassword_ConfirmPassword_Label.setText(_translate("BAM", "Confirm Password"))
        self.ChangePasswordConfirm_PushButton.setText(_translate("BAM", "Confirm"))
        self.ChangePassword_CurrentPassword_Label.setText(_translate("BAM", "Current Password"))
        self.ChangeProfilePin_CurrentPin_Label.setText(_translate("BAM", "Current Pin"))
        self.ChangeProfilePin_NewPin_Label.setText(_translate("BAM", "New Pin"))
        self.ChangeProfilePin_ConfirmPin_Label.setText(_translate("BAM", "Confirm Pin"))
        self.ChangePinConfirm_PushButton.setText(_translate("BAM", "Confirm"))
        self.ChangePinCancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.ChangeProfilePin_Label.setText(_translate("BAM", "Change Profile Pin"))
        self.ATMCardServices_Label.setText(_translate("BAM", "ATM Card Services"))
        self.RequestDebitCard_PushButton.setText(_translate("BAM", "Request Debit Card"))
        self.ATMCardLimitChange_PushButton.setText(_translate("BAM", "ATM Card Limit Change"))
        self.ATMPinGeneration_PushButton.setText(_translate("BAM", "ATM Pin Generation"))
        self.ViewLinkedATMCardPushButton.setText(_translate("BAM", "View Linked ATM Card"))
        self.BlockATMCard_PushButton.setText(_translate("BAM", "Block ATM Card"))
        self.UnblockATMCard_PushButton.setText(_translate("BAM", "Unblock ATM Card"))
        self.RequestDebitCard_Label_1.setText(_translate("BAM", "Request Debit Card"))
        self.RequestDebitCardContinue_PushButton.setText(_translate("BAM", "Continue"))
        self.RequestDebitCardSelectTheAccount_Label.setText(_translate("BAM", "Select the Account"))
        self.RequestDebitCardCancel_PushButton_1.setText(_translate("BAM", "Cancel"))
        self.RequestDebitCard_Account_TableWidget.setSortingEnabled(False)
        item = self.RequestDebitCard_Account_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "Account Number"))
        item = self.RequestDebitCard_Account_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Name"))
        item = self.RequestDebitCard_Account_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Account Type"))
        self.SelectTypeOfTheCard_Label.setText(_translate("BAM", "Select Type of the Card"))
        self.RequestDebitCardConfirm_PushButton.setText(_translate("BAM", "Confirm"))
        self.CardCategory_Label.setText(_translate("BAM", "Card Category"))
        self.RequestDebitCard_Label_2.setText(_translate("BAM", "Request Debit Card"))
        self.CardCategory_ComboBox.setPlaceholderText(_translate("BAM", "Select Category"))
        self.RequestDebitCardCancel_PushButton_2.setText(_translate("BAM", "Cancel"))
        self.NameOnTheCard_Label.setText(_translate("BAM", "Name on the Card"))
        self.SelectTypeOfTheCard_ComboBox.setPlaceholderText(_translate("BAM", "Select Type"))
        self.ATMPinGenerationSelectTheAccount_Label.setText(_translate("BAM", "Select the Account"))
        self.ATMPinGeneration_Label_1.setText(_translate("BAM", "ATM Pin Generation"))
        self.ATMPinGenerationCancel_PushButton_1.setText(_translate("BAM", "Cancel"))
        self.ATMPinGenerationContinue_PushButton_1.setText(_translate("BAM", "Continue"))
        self.ATMPinGeneration_Account_TableWidget.setSortingEnabled(False)
        item = self.ATMPinGeneration_Account_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "Account Number"))
        item = self.ATMPinGeneration_Account_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Name"))
        item = self.ATMPinGeneration_Account_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Account Type"))
        self.ATMPinGenerationSelectTheATMCard_Label.setText(_translate("BAM", "Select the ATM card"))
        self.ATMPinGenerationCancel_PushButton_2.setText(_translate("BAM", "Cancel"))
        self.ATMPinGenerationContinue_PushButton_2.setText(_translate("BAM", "Continue"))
        self.ATMPinGeneration_Label_2.setText(_translate("BAM", "ATM Pin Generation"))
        self.ATMPinGeneration_ATM_TableWidget.setSortingEnabled(False)
        item = self.ATMPinGeneration_ATM_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "ATM Card Number"))
        item = self.ATMPinGeneration_ATM_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Card Holder Name"))
        item = self.ATMPinGeneration_ATM_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Card Status"))
        self.ATMPinGenerationConfirm_PushButton.setText(_translate("BAM", "Confirm"))
        self.ATMPinGenerarionCancel_PushButton_3.setText(_translate("BAM", "Cancel"))
        self.EnterFourDigitsOfYourDesiredPinLabel.setText(_translate("BAM", "Enter Four Digits of Your Desired PIN"))
        self.ATMPinGeneration_Label_3.setText(_translate("BAM", "ATM Pin Generation"))
        self.ATMCardLimitChangeCancel_PushButton_1.setText(_translate("BAM", "Cancel"))
        self.ATMCardLimitChangeSelectTheAccount_Label.setText(_translate("BAM", "Select the Account"))
        self.ATMCardLimitChange_Label_1.setText(_translate("BAM", "ATM Card Limit Change"))
        self.ATMCardLimitChangeContinue_PushButton_1.setText(_translate("BAM", "Continue"))
        self.ATMCardLimitChange_Account_TableWidget.setSortingEnabled(False)
        item = self.ATMCardLimitChange_Account_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "Account Number"))
        item = self.ATMCardLimitChange_Account_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Name"))
        item = self.ATMCardLimitChange_Account_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Account Type"))
        self.ATMCardLimitChangeContinue_PushButton_2.setText(_translate("BAM", "Continue"))
        self.ATMCardLimitChangeCancel_PushButton_2.setText(_translate("BAM", "Cancel"))
        self.ATMCardLimitChange_Label_2.setText(_translate("BAM", "ATM Card Limit Change"))
        self.ATMCardLimitChangeSelectTheATMCard_Label.setText(_translate("BAM", "Select the ATM card"))
        self.ATMCardLimitChange_ATM_TableWidget.setSortingEnabled(False)
        item = self.ATMCardLimitChange_ATM_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "ATM Card Number"))
        item = self.ATMCardLimitChange_ATM_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Card Holder Name"))
        item = self.ATMCardLimitChange_ATM_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Card Status"))
        self.FiftyThousand_Label.setText(_translate("BAM", "50000"))
        self.ATMCardLimitChangeCancel_PushButton_3.setText(_translate("BAM", "Cancel"))
        self.MaximumLimitAllowed_Label.setText(_translate("BAM", "Maximum limit  allowed"))
        self.YourCurrentATMLimit_Label_1.setText(_translate("BAM", "Your Current ATM  Limit"))
        self.ATMCardLimitChangeConfirm_PushButton.setText(_translate("BAM", "Confirm"))
        self.NewATMLimit_Label.setText(_translate("BAM", "New ATM Limit"))
        self.ATMCardLimitChange_Label_3.setText(_translate("BAM", "ATM Card Limit Change"))
        self.ChangeDailyLimit_Label.setText(_translate("BAM", "Change Daily Limit"))
        self.BlockATMCardCancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.BlockATMCard_Label_1.setText(_translate("BAM", "Block ATM Card"))
        self.BlockATMCardContinue_PushButton.setText(_translate("BAM", "Continue"))
        self.BlockATMCardSelectTheAccount_Label.setText(_translate("BAM", "Select the Account"))
        self.BlockATMCard_Account_TableWidget.setSortingEnabled(False)
        item = self.BlockATMCard_Account_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "Account Number"))
        item = self.BlockATMCard_Account_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Name"))
        item = self.BlockATMCard_Account_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Account Type"))
        self.SelectTheATMCardYouWishToBlockPushButton_1.setText(_translate("BAM", "Select the ATM card you wish to block"))
        self.BlockATMCard_Label_2.setText(_translate("BAM", "Block ATM Card"))
        self.AlreadyBlockedInactiveATMCard_PushButton.setText(_translate("BAM", "Already Blocked / Inactive ATM card"))
        self.SelectTheATMCardYouWishToBlock__Label.setText(_translate("BAM", "Select the ATM card you wish to block"))
        self.SelectTheATMCardYouWishToBlockConfirm_PushButton.setText(_translate("BAM", "Confirm"))
        self.BlockATMCard_Label_3.setText(_translate("BAM", "Block ATM Card"))
        self.SelectTheATMCardYouWishToBlockCancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.BlockATMCard_ATM_TableWidget.setSortingEnabled(False)
        item = self.BlockATMCard_ATM_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "ATM Card Number"))
        item = self.BlockATMCard_ATM_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Card Holder Name"))
        item = self.BlockATMCard_ATM_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Card Status"))
        self.AlreadyBlockedInactiveATMCard_Label.setText(_translate("BAM", "Already Blocked / Inactive ATM card"))
        self.AlreadyBlockedInactiveATMCardBack_PushButton.setText(_translate("BAM", "Back"))
        self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.setSortingEnabled(False)
        item = self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "ATM Card Number"))
        item = self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Card Holder Name"))
        item = self.AlreadyBlockedInactiveATMCard_ATM_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Card Status"))
        self.ViewLinkedATMCardCancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.SelectTheAccountNumberForLinkedATMCard_Label.setText(_translate("BAM", "Select the Account number for linked ATM card"))
        self.ViewLinkedATMCard_Label_1.setText(_translate("BAM", "View Linked ATM Card"))
        self.ViewLinkedATMCardContinue_PushButton.setText(_translate("BAM", "Continue"))
        self.ViewLinkedATMCard_Account_TableWidget.setSortingEnabled(False)
        item = self.ViewLinkedATMCard_Account_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "Account Number"))
        item = self.ViewLinkedATMCard_Account_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Name"))
        item = self.ViewLinkedATMCard_Account_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Account Type"))
        self.ViewTheActiveATMCardNumber_PushButton.setText(_translate("BAM", "View the active ATM card number"))
        self.ViewLinkedATMCard_Label_2.setText(_translate("BAM", "View Linked ATM Card"))
        self.AlreadyBlockedInactiveATMCardNumber_PushButton.setText(_translate("BAM", "Already Blocked / Inactive ATM card number"))
        self.ViewTheActiveATMCardNumber_Label.setText(_translate("BAM", "View the active ATM card number"))
        self.ViewTheActiveATMCardNumberBack_PushButton.setText(_translate("BAM", "Back"))
        self.ViewTheActiveATMCardNumber_ATM_TableWidget.setSortingEnabled(False)
        item = self.ViewTheActiveATMCardNumber_ATM_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "ATM Card Number"))
        item = self.ViewTheActiveATMCardNumber_ATM_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Card Holder Name"))
        item = self.ViewTheActiveATMCardNumber_ATM_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Card Status"))
        self.BlockATMCardSelectTheAccount_Label_2.setText(_translate("BAM", "Select the Account"))
        self.UnblockATMCardCancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.UnblockATMCard_Label_1.setText(_translate("BAM", "Unblock ATM Card"))
        self.UnblockATMCardContinue_PushButton.setText(_translate("BAM", "Continue"))
        self.UnblockATMCard_Account_TableWidget.setSortingEnabled(False)
        item = self.UnblockATMCard_Account_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "Account Number"))
        item = self.UnblockATMCard_Account_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Name"))
        item = self.UnblockATMCard_Account_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Account Type"))
        self.UnblockATMCard_Label_2.setText(_translate("BAM", "Unblock ATM Card"))
        self.SelectTheATMCardYouWishToUnblockConfirm_PushButton.setText(_translate("BAM", "Confirm"))
        self.SelectTheATMCardYouWishToUnblockCancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.SelectTheATMCardYouWishToUnblock__Label.setText(_translate("BAM", "Select the ATM card you wish to Unblock"))
        self.UnblockATMCard_ATM_TableWidget.setSortingEnabled(False)
        item = self.UnblockATMCard_ATM_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "ATM Card Number"))
        item = self.UnblockATMCard_ATM_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Card Holder Name"))
        item = self.UnblockATMCard_ATM_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Card Status"))
        self.SelectTheAccountYouWishToClose_Label.setText(_translate("BAM", "Select the Account you wish to close"))
        self.CloseAccount_Label.setText(_translate("BAM", "Close Account"))
        self.CloseAccountCancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.CloseAccountConfirm_PushButton.setText(_translate("BAM", "Confirm"))
        self.CloseAccount_Account_TableWidget.setSortingEnabled(False)
        item = self.CloseAccount_Account_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "Account Number"))
        item = self.CloseAccount_Account_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Name"))
        item = self.CloseAccount_Account_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Account Type"))
        self.AddAccount_PushButton_2.setText(_translate("BAM", "Add Account"))
        self.AddAccount_AccountList_Label.setText(_translate("BAM", "Account List"))
        self.AddAccount_Label_1.setText(_translate("BAM", "Add Account"))
        self.AddAccount_Account_TableWidget.setSortingEnabled(False)
        item = self.AddAccount_Account_TableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BAM", "Account Number"))
        item = self.AddAccount_Account_TableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BAM", "Name"))
        item = self.AddAccount_Account_TableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BAM", "Account Type"))
        self.AddAccount_Address_Label.setText(_translate("BAM", "Address"))
        self.AddAccount_Surname_Label.setText(_translate("BAM", "Surname"))
        self.AddAccount_Gender_ComboBox.setPlaceholderText(_translate("BAM", "Select Gender"))
        self.AddAccount_City_Label.setText(_translate("BAM", "City"))
        self.AddAccount_State_Label.setText(_translate("BAM", "State"))
        self.AddAccount_DateOfBirth_Label.setText(_translate("BAM", "Date Of Birth"))
        self.AddAccount_FirstName_Label.setText(_translate("BAM", "First Name"))
        self.AddAccount_AccountType_Label.setText(_translate("BAM", "Account Type"))
        self.AddAccount_SelectAccountType_ComboBox.setPlaceholderText(_translate("BAM", "Select Account Type"))
        self.AddAccount_Gender_Label.setText(_translate("BAM", "Gender"))
        self.AddAccount_Street_Label.setText(_translate("BAM", "Street"))
        self.AddAccount_Country_Label.setText(_translate("BAM", "Country"))
        self.AddAccount_Submit_PushButton.setText(_translate("BAM", "Submit"))
        self.AddAccount_Cancel_PushButton.setText(_translate("BAM", "Cancel"))
        self.AddAccount_Label.setText(_translate("BAM", "Add Account"))
        self.History_Label_2.setText(_translate("BAM", "Text Label"))
        self.History_GoToWelcomePage_PushButton.setText(_translate("BAM", "Go to Welcome Page"))
        self.History_ClearData_PushButton.setText(_translate("BAM", "Clear Data"))
        self.History_Label_1.setText(_translate("BAM", "History"))


## Lines to populate the combo boxes with the new questions
        self.ForgotUsername_SecurityQuestion_ComboBox.addItems(["What is your nickname?", "What is your pet name?", "What is your favorite food?"])
        self.ForgotPassword_SecurityQuestion_ComboBox.addItems(["What is your nickname?", "What is your pet name?", "What is your favorite food?"])
        self.Registration_Gender_ComboBox.addItems(["Male", "Female", "Other"])
        self.AddAccount_Gender_ComboBox.addItems(["Male", "Female", "Other"])
        self.Registration_SelectAccountType_ComboBox.addItems(["Savings account", "Checking", "Salary account"])
        self.AddAccount_SelectAccountType_ComboBox.addItems(["Savings account", "Checking", "Salary account"])
        self.Registration_SecurityQuestion_ComboBox.addItems(["What is your nickname?", "What is your pet name?", "What is your favorite food?"])
        self.CardCategory_ComboBox.addItems(["Visa Debit Card", "Mastercard Debit Card", "RuPay Debit Card"])
        self.SelectTypeOfTheCard_ComboBox.addItems(["Debit Card"])

## Calendar popup for the dateEdit widget
        # Define the modified stylesheet
        calendar_stylesheet = """
            QCalendarWidget QTableWidget {
                alternate-background-color: lightblue;
                border-width: 0px;
            }
            QCalendarWidget QWidget {
                alternate-background-color: lightblue;
                color: darkblue;
            }
            QCalendarWidget QToolButton {
                background-color: lightgray;
                color: darkblue;
                border: 1px solid darkblue;
                border-radius: 3px;
                min-width: 20px;
                min-height: 20px;
            }
            QCalendarWidget QToolButton:hover {
                background-color: gray;
                color: white;
            }
            QCalendarWidget QToolButton:pressed {
                background-color: darkblue;
                color: white;
            }
        """

        # Set calendar popup and stylesheet for Registration_DateEdit
        self.Registration_DateEdit.setCalendarPopup(True)
        registration_calendar_widget = QCalendarWidget(self.Registration_DateEdit)
        registration_calendar_widget.setStyleSheet(calendar_stylesheet)
        self.Registration_DateEdit.setCalendarWidget(registration_calendar_widget)

        # Set calendar popup and stylesheet for AddAccount_DateEdit
        self.AddAccount_DateEdit.setCalendarPopup(True)
        add_account_calendar_widget = QCalendarWidget(self.AddAccount_DateEdit)
        add_account_calendar_widget.setStyleSheet(calendar_stylesheet)
        self.AddAccount_DateEdit.setCalendarWidget(add_account_calendar_widget)

        # Connect slot to handle date change
        self.Registration_DateEdit.dateChanged.connect(self.handleDateChange)
        self.AddAccount_DateEdit.dateChanged.connect(self.handleDateChange)       

## Connect buttons to pages
    # stackedWidget 
        # Connect the Login_PushButton_1 in Welcome_Page_0(CurrentIndex_0, stackedWidget) to switch to Login_Page_1(CurrentIndex_1, stackedWidget)
        self.Login_PushButton_1.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(1))
        # Connect the Register_PushButton_2 in Welcome_Page_0(CurrentIndex_0, stackedWidget) to switch to Registration_Page_4(CurrentIndex_4, stackedWidget)
        self.Register_PushButton_2.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(4))
        # Connect the ForgotPassword_PushButton_4 in Login_Page_1(CurrentIndex_1, stackedWidget) to switch to ForgotPassword_Page_3(CurrentIndex_1, stackedWidget)
        self.ForgotPassword_PushButton_4.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(3))
        # Connect the ForgotUsername_PushButton_5 in Login_Page_1(CurrentIndex_1, stackedWidget) to switch to ForgotUsername_Page_2(CurrentIndex_2, stackedWidget)
        self.ForgotUsername_PushButton_5.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(2))

        # Connect the clicked signal of Account_Profile_PushButton in MainAccount_Page_5(CurrentIndex_5, stackedWidget)to show_dropdown_menu method
        self.Account_Profile_PushButton.clicked.connect(self.show_dropdown_menu)

    # stackedWidget_2
        # Connect the ViewAccountDetails_PushButton in MainAccount_Page_5(CurrentIndex_5, stackedWidget) to switch to AccountDetails_Page_1(CurrentIndex_1, stackedWidget_2)
        self.ViewAccountDetails_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(1))
        # Connect the  DepositMoney_PushButton in MainAccount_Page_5(CurrentIndex_5, stackedWidget) to switch to DepositMoney_Page_3(CurrentIndex_3, stackedWidget_2)
        self.DepositMoney_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(3))
        # Connect the WithdrawMoney_PushButton in MainAccount_Page_5(CurrentIndex_5, stackedWidget) to switch to WithdrawMoney_Page_5(CurrentIndex_5, stackedWidget_2)
        self.WithdrawMoney_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(5))
        # Connect the TransferMoney_PushButton in MainAccount_Page_5(CurrentIndex_5, stackedWidget) to switch to Transfer_Page_7(CurrentIndex_7, stackedWidget_2)
        self.TransferMoney_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(7))
        # Connect the ViewTransaction_PushButton in MainAccount_Page_5(CurrentIndex_5, stackedWidget) to switch to ViewTransaction_Page_9(CurrentIndex_9, stackedWidget_2)
        self.ViewTransaction_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(9))
        # Connect the ViewTransactionBack_PushButton in ViewTransaction_Page_10(CurrentIndex_10, stackedWidget_2) to switch to ViewTransaction_Page_9(CurrentIndex_9, stackedWidget_2)
        self.ViewTransactionBack_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(9))
        # Connect the ViewBalance_PushButton in MainAccount_Page_5(CurrentIndex_5, stackedWidget) to switch to ViewBalance_Page_11(CurrentIndex_11, stackedWidget_2)
        self.ViewBalance_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(11))
        # Connect the ManageProfile_PushButton in MainAccount_Page_5(CurrentIndex_5, stackedWidget) to switch to ProfileDetails_Page_13(CurrentIndex_13, stackedWidget_2)
        self.ManageProfile_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(13))
        # Connect the ChangeProfilePassword_PushButton in ProfileDetails_Page_13(CurrentIndex_13, stackedWidget_2) to switch to ChangeProfilePassword_Page_14(CurrentIndex_14, stackedWidget_2)
        self.ChangeProfilePassword_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(14))
        # Connect the ChangeProfilePin_PushButton in ProfileDetails_Page_13(CurrentIndex_13, stackedWidget_2) to switch to ChangeProfilePin_Page_15(CurrentIndex_15, stackedWidget_2)
        self.ChangeProfilePin_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(15))
        # ATMCardServices(stackedWidget_2)
        # Connect the ATMCardServices_PushButton in MainAccount_Page_5(CurrentIndex_5, stackedWidget_2) to switch to ATMCardServices_Page_16(CurrentIndex_16, stackedWidget_2)
        self.ATMCardServices_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(16))
        # Connect the RequestDebitCard_PushButton in ATMCardServices_Page_16(CurrentIndex_16, stackedWidget_2) to switch to RequestDebitCard_Page_17(CurrentIndex_17, stackedWidget_2)
        self.RequestDebitCard_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(17))
        # Connect the ATMPinGeneration_PushButton in ATMCardServices_Page_16(CurrentIndex_16, stackedWidget_2) to switch to ATMPinGeneration_Page_19(CurrentIndex_19, stackedWidget_2)
        self.ATMPinGeneration_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(19))
        # Connect the ATMCardLimitChange_PushButton in ATMCardServices_Page_16(CurrentIndex_16, stackedWidget_2) to switch to ATMCardLimitChange_Page_22(CurrentIndex_22, stackedWidget_2)
        self.ATMCardLimitChange_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(22))
        # Connect the BlockATMCard_PushButton in ATMCardServices_Page_16(CurrentIndex_16, stackedWidget_2) to switch to BlockATMCard_Page_25(CurrentIndex_25, stackedWidget_2)
        self.BlockATMCard_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(25))
        # Connect the SelectTheATMCardYouWishToBlockPushButton_1 in BlockATMCard_Page_26(CurrentIndex_26, stackedWidget_2) to switch to BlockATMCard_Page_27(CurrentIndex_27, stackedWidget_2)
        self.SelectTheATMCardYouWishToBlockPushButton_1.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(27))
        # Connect the AlreadyBlockedInactiveATMCard_PushButton in BlockATMCard_Page_26(CurrentIndex_26, stackedWidget_2) to switch to AlreadyBlocked_Page_28(CurrentIndex_28, stackedWidget_2)
        self.AlreadyBlockedInactiveATMCard_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(28))
        # Connect the ViewLinkedATMCardPushButton in ATMCardServices_Page_16(CurrentIndex_16, stackedWidget_2) to switch to ViewLinkedATMCard_Page_29(CurrentIndex_29, stackedWidget_2)
        self.ViewLinkedATMCardPushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(29))
        # Connect the UnblockATMCard_PushButton in ATMCardServices_Page_16(CurrentIndex_16, stackedWidget_2) to switch to UnlockATMCard_Page_32(CurrentIndex_32, stackedWidget_2)
        self.UnblockATMCard_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(32))
        # Connect the ViewTheActiveATMCardNumber_PushButton in ViewLinkedATMCard_Page_30(CurrentIndex_30, stackedWidget_2) to switch to ViewTheActiveATMCard_Page_31(CurrentIndex_31, stackedWidget_2)
        self.ViewTheActiveATMCardNumber_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(31))
        # Connect the ViewTheActiveATMCardNumberBack_PushButton in ViewTheActiveATMCard_Page_31(CurrentIndex_31, stackedWidget_2) to switch to ViewLinkedATMCard_Page_30(CurrentIndex_30, stackedWidget_2)
        self.ViewTheActiveATMCardNumberBack_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(30))
        # Connect the AlreadyBlockedInactiveATMCardNumber_PushButton in ViewLinkedATMCard_Page_30 (CurrentIndex_30, stackedWidget_2)to switch to AlreadyBlocked_Page_28(CurrentIndex_28, stackedWidget_2)
        self.AlreadyBlockedInactiveATMCardNumber_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(28))
        # Connect the AddAccount_PushButton_1 in MainAccount_Page_5(CurrentIndex_5, stackedWidget) to switch to AddAccount_Page_35(CurrentIndex_35, stackedWidget_2)
        self.AddAccount_PushButton_1.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(35))
        # Connect the AddAccount_PushButton_2 in AddAccount_Page_35(CurrentIndex_35, stackedWidget_2) to switch to AddAccount_Page_36(CurrentIndex_36, stackedWidget_2)
        self.AddAccount_PushButton_2.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(36)) 
        # Connect the CloseAccount_PushButton in MainAccount_Page_5(CurrentIndex_5, stackedWidget) to switch to CloseAccount_Page_34(CurrentIndex_34, stackedWidget_2)
        self.CloseAccount_PushButton.clicked.connect(lambda: self.stackedWidget_2.setCurrentIndex(34))

        # Connect the History_GoToWelcomePage_PushButton to switch to Welcome_Page_0 and clear login fields
        self.History_GoToWelcomePage_PushButton.clicked.connect(lambda: self.go_to_welcome_page())

        ## It sets up button styling effects.
        # Connect button clicks to the on_button_clicked method
        # Each button click is connected to the same method, allowing for uniform handling of button clicks.
        self.ViewAccountDetails_PushButton.clicked.connect(lambda: self.on_button_clicked(self.ViewAccountDetails_PushButton))
        self.DepositMoney_PushButton.clicked.connect(lambda: self.on_button_clicked(self.DepositMoney_PushButton))
        self.WithdrawMoney_PushButton.clicked.connect(lambda: self.on_button_clicked(self.WithdrawMoney_PushButton))
        self.TransferMoney_PushButton.clicked.connect(lambda: self.on_button_clicked(self.TransferMoney_PushButton))
        self.ViewTransaction_PushButton.clicked.connect(lambda: self.on_button_clicked(self.ViewTransaction_PushButton))
        self.ViewBalance_PushButton.clicked.connect(lambda: self.on_button_clicked(self.ViewBalance_PushButton))
        self.ATMCardServices_PushButton.clicked.connect(lambda: self.on_button_clicked(self.ATMCardServices_PushButton))
        self.AddAccount_PushButton_1.clicked.connect(lambda: self.on_button_clicked(self.AddAccount_PushButton_1))
        self.CloseAccount_PushButton.clicked.connect(lambda: self.on_button_clicked(self.CloseAccount_PushButton))
        self.ManageProfile_PushButton.clicked.connect(lambda: self.on_button_clicked(self.ManageProfile_PushButton)) 

        self.current_pressed_button = None  # Track currently pressed button

        # The method to connect buttons to methods
        self.connect_buttons_to_methods() 

    ## Handle methods 
        # Connect signals to functions  
        # Connect the Login_PushButton_3 in Login_Page_1(CurrentIndex_1, stackedWidget) to handle_login method
        self.Login_PushButton_2.clicked.connect(self.handle_login)
        # Connect the Submit_PushButton_8 in Registration_Page_4(CurrentIndex_4, stackedWidget) to save_data method
        self.Submit_PushButton_8.clicked.connect(self.save_data)
        # Connect the Submit_PushButton_7 in ForgotPassword_Page_3(CurrentIndex_3, stackedWidget) to update_password method
        self.Submit_PushButton_7.clicked.connect(self.update_password)
        # Connect the Submit_PushButton_6 in ForgotUsername_Page_2(CurrentIndex_2, stackedWidget) to handle_forgot_username method
        self.Submit_PushButton_6.clicked.connect(self.handle_forgot_username)
        # TableWidgets 
        # Connect the AccountDetailsContinue_PushButton in AccountDetails_Page_1(CurrentIndex_1, stackedWidget_2) to check_selection_and_continue method
        self.AccountDetailsContinue_PushButton.clicked.connect(lambda: self.check_selection_and_continue(self.AccountDetails_Account_TableWidget, 2))
        # Connect the AccountDetailsCancel_PushButton in AccountDetails_Page_1(CurrentIndex_1, stackedWidget_2) to clear_selection
        self.AccountDetailsCancel_PushButton.clicked.connect(lambda: self.clear_selection(self.AccountDetails_Account_TableWidget))

        # Connect the DepositMoneyContinue_PushButton in DepositMoney_Page_3(CurrentIndex_3, stackedWidget_2) to check_selection_and_continue
        self.DepositMoneyContinue_PushButton.clicked.connect(lambda: self.check_selection_and_continue(self.DepositMoney_Account_TableWidget, 4))
        # Connect the DepositMoney_Cancel_PushButton in DepositMoney_Page_3(CurrentIndex_3, stackedWidget_2) to clear_selection
        self.DepositMoney_Cancel_PushButton.clicked.connect(lambda: self.clear_selection(self.DepositMoney_Account_TableWidget))
        # Connect the DepositAmountConfirm_PushButton in DepositAmount_Page_4(CurrentIndex_4, stackedWidget_2) to deposit_amount
        self.DepositAmountConfirm_PushButton.clicked.connect(self.deposit_amount)
        # Connect the DepositAmount_Cancel_PushButton in DepositAmount_Page_4(CurrentIndex_4, stackedWidget_2) to clear_amount_field
        self.DepositAmount_Cancel_PushButton.clicked.connect(lambda: self.clear_amount_field(self.DepositAmount_LineEdit))

        # Connect the  WithdrawMoneyContinue_PushButton in WithdrawMoney_Page_5(CurrentIndex_5, stackedWidget_2) to check_selection_and_continue
        self.WithdrawMoneyContinue_PushButton.clicked.connect(lambda: self.check_selection_and_continue(self.WithdrawMoney_Account_TableWidget, 6))
        # Connect the WithdrawMoneyCancel_PushButton in WithdrawMoney_Page_5(CurrentIndex_5, stackedWidget_2) to clear_selection
        self.WithdrawMoneyCancel_PushButton.clicked.connect(lambda: self.clear_selection(self.WithdrawMoney_Account_TableWidget))
        # Connect the WithdrawAmount_PushButton in WithdrawAmount_Page_6(CurrentIndex_6, stackedWidget_2) to withdraw_amount
        self.WithdrawAmount_PushButton.clicked.connect(self.withdraw_amount)
        # Connect the WithdrawAmount_PushButton in WithdrawAmount_Page_6(CurrentIndex_6, stackedWidget_2) to clear_amount_field
        self.WithdrawAmountCancel_PushButton.clicked.connect(lambda: self.clear_amount_field(self.WithdrawAmount_LineEdit))

        # Connect the TransferContinue_PushButton in Transfer_Page_7(CurrentIndex_7, stackedWidget_2) to check_selection_and_continue
        self.TransferContinue_PushButton.clicked.connect(lambda: self.check_selection_and_continue(self.Transfer_Account_TableWidget, 8))
        # Connect the TransferCancel_PushButton_1 in Transfer_Page_7(CurrentIndex_7, stackedWidget_2) to clear_selection
        self.TransferCancel_PushButton_1.clicked.connect(lambda: self.clear_selection(self.Transfer_Account_TableWidget))
        # Connect the TransferConfirm_PushButton in Transfer_Page_8(CurrentIndex_8, stackedWidget_2) to transfer_amount
        self.TransferConfirm_PushButton.clicked.connect(self.transfer_amount)
        # Connect the TransferCancel_PushButton_2 in Transfer_Page_8(CurrentIndex_8, stackedWidget_2) to clear_transfer_line_edits method
        self.TransferCancel_PushButton_2.clicked.connect(lambda: self.clear_transfer_line_edits())

        # Connect the ViewTransactionContinue_PushButton in ViewTransaction_Page_9(CurrentIndex_9, stackedWidget_2) to check_selection_and_continue
        self.ViewTransactionContinue_PushButton.clicked.connect(lambda: self.check_selection_and_continue(self.ViewTransaction_Account_TableWidget, 10))
        # Connect the ViewTransactionCancel_PushButton in ViewTransaction_Page_9(CurrentIndex_9, stackedWidget_2) to clear_selection
        self.ViewTransactionCancel_PushButton.clicked.connect(lambda: self.clear_selection(self.ViewTransaction_Account_TableWidget))

        # Connect the ViewBalanceContinue_PushButton in ViewBalance_Page_11(CurrentIndex_11, stackedWidget_2) to check_selection_and_continue
        self.ViewBalanceContinue_PushButton.clicked.connect(lambda: self.check_selection_and_continue(self.ViewBalance_Account_TableWidget, 12))
        # Connect the ViewBalanceCancel_PushButton in ViewBalance_Page_11(CurrentIndex_11, stackedWidget_2) to clear_selection
        self.ViewBalanceCancel_PushButton.clicked.connect(lambda: self.clear_selection(self.ViewBalance_Account_TableWidget))

        # Connect the ChangePasswordConfirm_PushButton in ChangeProfilePassword_Page_14(CurrentIndex_14, stackedWidget_2) to change_password method
        self.ChangePasswordConfirm_PushButton.clicked.connect(self.change_password)
        # Connect the ChangePasswordCancel_PushButton in ChangeProfilePassword_Page_14(CurrentIndex_14, stackedWidget_2) to clear_change_password_line_edits method
        self.ChangePasswordCancel_PushButton.clicked.connect(lambda: self.clear_change_password_line_edits())

        # Connect the ChangePinConfirm_PushButton in ChangeProfilePin_Page_15(CurrentIndex_15, stackedWidget_2) to change_pin method
        self.ChangePinConfirm_PushButton.clicked.connect(self.change_pin)
        # Connect the ChangePinCancel_PushButton in ChangeProfilePin_Page_15(CurrentIndex_15, stackedWidget_2) to clear_change_pin_line_edits method
        self.ChangePinCancel_PushButton.clicked.connect(lambda: self.clear_change_pin_line_edits())

        # Connect the RequestDebitCardContinue_PushButton in RequestDebitCard_Page_17(CurrentIndex_17, stackedWidget_2) to check_selection_and_continue method
        self.RequestDebitCardContinue_PushButton.clicked.connect(lambda: self.check_selection_and_continue(self.RequestDebitCard_Account_TableWidget, 18))
        # Connect the RequestDebitCardCancel_PushButton_1 in RequestDebitCard_Page_17(CurrentIndex_17, stackedWidget_2) to clear_selection method
        self.RequestDebitCardCancel_PushButton_1.clicked.connect(lambda: self.clear_selection(self.RequestDebitCard_Account_TableWidget))
        # Connect the RequestDebitCardConfirm_PushButton in RequestDebitCard_Page_18(CurrentIndex_18, stackedWidget_2) to request_debit_card method
        self.RequestDebitCardConfirm_PushButton.clicked.connect(self.request_debit_card)
        # Connect the RequestDebitCardCancel_PushButton_2 in RequestDebitCard_Page_18(CurrentIndex_18, stackedWidget_2) to clear_request_debit_card_line_edits method
        self.RequestDebitCardCancel_PushButton_2.clicked.connect(lambda: self.clear_request_debit_card_line_edits())

        # Connect the ATMPinGenerationContinue_PushButton_1 in ATMPinGeneration_Page_19(CurrentIndex_19, stackedWidget_2) to check_selection_and_continue method
        self.ATMPinGenerationContinue_PushButton_1.clicked.connect(lambda: self.check_selection_and_continue(self.ATMPinGeneration_Account_TableWidget, 20))
        # Connect the ATMPinGenerationCancel_PushButton_1 in ATMPinGeneration_Page_19(CurrentIndex_19, stackedWidget_2) to clear_selection method
        self.ATMPinGenerationCancel_PushButton_1.clicked.connect(lambda: self.clear_selection(self.ATMPinGeneration_Account_TableWidget))
        # Connect the ATMPinGenerationContinue_PushButton_2 in ATMPinGeneration_Page_20(CurrentIndex_20, stackedWidget_2) to check_selection_and_continue method
        self.ATMPinGenerationContinue_PushButton_2.clicked.connect(lambda: self.check_selection_and_continue(self.ATMPinGeneration_ATM_TableWidget, 21))
        # Connect the ATMPinGenerationCancel_PushButton_2 in ATMPinGeneration_Page_20(CurrentIndex_20, stackedWidget_2) to clear_selection method
        self.ATMPinGenerationCancel_PushButton_2.clicked.connect(lambda: self.clear_selection(self.ATMPinGeneration_ATM_TableWidget))
        # Connect the ATMPinGenerationConfirm_PushButton in ATMPinGeneration_Page_21(CurrentIndex_21, stackedWidget_2) to activate_card method
        self.ATMPinGenerationConfirm_PushButton.clicked.connect(self.activate_card)
        # Connect the ATMPinGenerarionCancel_PushButton_3 in ATMPinGeneration_Page_21(CurrentIndex_21, stackedWidget_2) to clear_amount_field method
        self.ATMPinGenerarionCancel_PushButton_3.clicked.connect(lambda: self.clear_amount_field(self.EnterFourDigitsOfYourDesiredPin_LineEdit))

        # Connect the ATMCardLimitChangeContinue_PushButton_1 in ATMCardLimitChange_Page_22(CurrentIndex_22, stackedWidget_2) to check_selection_and_continue method
        self.ATMCardLimitChangeContinue_PushButton_1.clicked.connect(lambda: self.check_selection_and_continue(self.ATMCardLimitChange_Account_TableWidget, 23))
        # Connect the ATMCardLimitChangeCancel_PushButton_1 in ATMCardLimitChange_Page_22(CurrentIndex_22, stackedWidget_2) to clear_selection method
        self.ATMCardLimitChangeCancel_PushButton_1.clicked.connect(lambda: self.clear_selection(self.ATMCardLimitChange_Account_TableWidget))
        # Connect the ATMCardLimitChangeContinue_PushButton_2 in ATMCardLimitChange_Page_23(CurrentIndex_23, stackedWidget_2) to check_selection_and_continue method
        self.ATMCardLimitChangeContinue_PushButton_2.clicked.connect(lambda: self.check_selection_and_continue(self.ATMCardLimitChange_ATM_TableWidget, 24))
        # Connect the ATMCardLimitChangeCancel_PushButton_2 in ATMCardLimitChange_Page_23(CurrentIndex_23, stackedWidget_2) to clear_selection method
        self.ATMCardLimitChangeCancel_PushButton_2.clicked.connect(lambda: self.clear_selection(self.ATMCardLimitChange_ATM_TableWidget))
        # Connect the ATMCardLimitChangeConfirm_PushButton in ATMCardLimitChange_Page_24(CurrentIndex_24, stackedWidget_2) to change_atm_card_limit method
        self.ATMCardLimitChangeConfirm_PushButton.clicked.connect(self.change_atm_card_limit)
        # Connect the ATMCardLimitChangeCancel_PushButton_3 in ATMCardLimitChange_Page_24(CurrentIndex_24, stackedWidget_2) to clear_amount_field method
        self.ATMCardLimitChangeCancel_PushButton_3.clicked.connect(lambda: self.clear_amount_field(self.NewATMLimit_LineEdit)) 
       
        # Connect the BlockATMCardContinue_PushButton in BlockATMCard_Page_25(CurrentIndex_25, stackedWidget_2) to check_selection_and_continue method
        self.BlockATMCardContinue_PushButton.clicked.connect(lambda: self.check_selection_and_continue(self.BlockATMCard_Account_TableWidget, 26))
        # Connect the BlockATMCardCancel_PushButton in BlockATMCard_Page_25(CurrentIndex_25, stackedWidget_2) to clear_selection method
        self.BlockATMCardCancel_PushButton.clicked.connect(lambda: self.clear_selection(self.BlockATMCard_Account_TableWidget))
        # Connect the SelectTheATMCardYouWishToBlockConfirm_PushButton in BlockATMCard_Page_27(CurrentIndex_27, stackedWidget_2) to confirm_block_card method
        self.SelectTheATMCardYouWishToBlockConfirm_PushButton.clicked.connect(self.confirm_block_card)
        # Connect the SelectTheATMCardYouWishToBlockCancel_PushButton in BlockATMCard_Page_27(CurrentIndex_27, stackedWidget_2) to clear_selection method
        self.SelectTheATMCardYouWishToBlockCancel_PushButton.clicked.connect(lambda: self.clear_selection(self.BlockATMCard_ATM_TableWidget))
        
        # Connect the ViewLinkedATMCardContinue_PushButton in ViewLinkedATMCard_Page_29(CurrentIndex_29, stackedWidget_2) to check_selection_and_continue method
        self.ViewLinkedATMCardContinue_PushButton.clicked.connect(lambda: self.check_selection_and_continue(self.ViewLinkedATMCard_Account_TableWidget, 30))
        # Connect the ViewLinkedATMCardCancel_PushButton in ViewLinkedATMCard_Page_29(CurrentIndex_29, stackedWidget_2) to clear_selection method
        self.ViewLinkedATMCardCancel_PushButton.clicked.connect(lambda: self.clear_selection(self.ViewLinkedATMCard_Account_TableWidget))

        # Connect the UnblockATMCardContinue_PushButton in UnlockATMCard_Page_32(CurrentIndex_32, stackedWidget_2) to check_selection_and_continue method
        self.UnblockATMCardContinue_PushButton.clicked.connect(lambda: self.check_selection_and_continue(self.UnblockATMCard_Account_TableWidget, 33))
        # Connect the UnblockATMCardCancel_PushButton in UnlockATMCard_Page_32(CurrentIndex_32, stackedWidget_2) to clear_selection method
        self.UnblockATMCardCancel_PushButton.clicked.connect(lambda: self.clear_selection(self.UnblockATMCard_Account_TableWidget))
        # Connect the SelectTheATMCardYouWishToUnblockConfirm_PushButton in UnlockATMCard_Page_33(CurrentIndex_33, stackedWidget_2) to confirm_unblock_card method
        self.SelectTheATMCardYouWishToUnblockConfirm_PushButton.clicked.connect(self.confirm_unblock_card)
        # Connect the SelectTheATMCardYouWishToUnblockCancel_PushButton in UnlockATMCard_Page_33(CurrentIndex_33, stackedWidget_2) to clear_selection method
        self.SelectTheATMCardYouWishToUnblockCancel_PushButton.clicked.connect(lambda: self.clear_selection(self.UnblockATMCard_ATM_TableWidget))

        # Connect the AddAccount_Submit_PushButton in AddAccount_Page_36(CurrentIndex_36, stackedWidget_2) to add_account method
        self.AddAccount_Submit_PushButton.clicked.connect(self.add_account) 
        # Connect the AddAccount_Cancel_PushButton in AddAccount_Page_36(CurrentIndex_36, stackedWidget_2) to clear_Add_Account_line_edits method
        self.AddAccount_Cancel_PushButton.clicked.connect(lambda: self.clear_Add_Account_line_edits())
    
        # Connect the CloseAccountConfirm_PushButton in CloseAccount_Page_34(CurrentIndex_34, stackedWidget_2) to close_account method
        self.CloseAccountConfirm_PushButton.clicked.connect(self.close_account) 
        # Connect the CloseAccountCancel_PushButton in CloseAccount_Page_34(CurrentIndex_34, stackedWidget_2) to clear_selection method
        self.CloseAccountCancel_PushButton.clicked.connect(lambda: self.clear_selection(self.CloseAccount_Account_TableWidget))
        
## History_Page_6 (stackedWidget)
        # Initialize a list to store page history
        self.page_history = []

        # Connect index change signal from stackedWidget to update page history
        self.stackedWidget.currentChanged.connect(lambda index: self.update_page_history(index, "stackedWidget"))

        # Connect index change signal from stackedWidget_2 to update page history
        self.stackedWidget_2.currentChanged.connect(lambda index: self.update_page_history(index, "stackedWidget_2"))

        # Connect clear data button signal to confirmation dialog
        self.History_ClearData_PushButton.clicked.connect(self.confirm_clear_history)

        # LeftArrowRightArrow_Page_0 (stackedWidget_3)
        # Connect LeftArrow_PushButton signal to navigate back
        self.LeftArrow_PushButton.clicked.connect(self.navigate_back)
        # Connect RightArrow_PushButton signal to navigate forward
        self.RightArrow_PushButton.clicked.connect(self.navigate_forward)

        # Call a method to adjust column widths
        self.adjust_column_widths() 

        #  AlreadyBlocked_Page_28 (CurrentIndex_28, stackedWidget_2)
        # Connect AlreadyBlockedInactiveATMCardBack_PushButton signal to navigate back
        self.AlreadyBlockedInactiveATMCardBack_PushButton.clicked.connect(self.navigate_back)

        # AvailableBalance_Page_12 (CurrentIndex_12, stackedWidget_2)
        # Connect AvailableBalance_PushButton signal to navigate back
        self.AvailableBalance_PushButton.clicked.connect(self.navigate_back)

## fullscreen state
        self.fullscreen = False  # Track fullscreen state

        # Connect F11 key press event to toggleFullscreen method
        BAM.keyPressEvent = self.toggleFullscreen

## Database
        # Connect to PostgreSQL
        self.conn = psycopg2.connect(
            database="postgres",
            user="postgres",
            password="juhigg",
            host="localhost",
            port=5432 
        )
        self.cursor = self.conn.cursor()

        # Create schema and tables if not exist
        self.create_schema("BAM")  # Create the schema for 'bank'
        self.create_table("BAM_registration_data")  # Create BAM_registration_data table
        self.create_table("User_Account_Cards")  # Create BAM_registration_data table
        self.create_table("TransactionHistory")   # Create TransactionHistory table

    def create_schema(self, schema_name):
        # Create a schema if not exists
        create_schema_query = f"CREATE SCHEMA IF NOT EXISTS {schema_name};"
        self.cursor.execute(create_schema_query) 
        self.conn.commit()

    def create_table(self, table_name):
        # Create tables if not exist
        if table_name == "BAM_registration_data":
            create_table_query = f'''
                CREATE TABLE IF NOT EXISTS BAM.{table_name} ( 
                    id SERIAL PRIMARY KEY,
                    Username VARCHAR(255),
                    Password VARCHAR(255),
                    Confirm_Password VARCHAR(255),
                    First_Name VARCHAR(255),
                    Surname VARCHAR(255),
                    Date_Of_Birth DATE,
                    Email VARCHAR(255),
                    Gender VARCHAR(10),
                    Create_Pin CHAR(4),
                    Confirm_Pin CHAR(4),
                    Street VARCHAR(255),
                    City VARCHAR(255),
                    State VARCHAR(255),
                    Country VARCHAR(255),
                    Security_Question VARCHAR(255),
                    Answer VARCHAR(255)       
                );
            '''

        elif table_name == "User_Account_Cards":
            create_table_query = f'''
                CREATE TABLE IF NOT EXISTS BAM.{table_name} (
                    Username VARCHAR(255),
                    Account_Number BIGINT PRIMARY KEY,
                    Account_Type VARCHAR(50),        -- Adding Account_Type column
                    First_Name VARCHAR(255),
                    Surname VARCHAR(255),
                    Date_Of_Birth DATE,
                    Gender VARCHAR(10),
                    Street VARCHAR(255),
                    City VARCHAR(255),
                    State VARCHAR(255),
                    Country VARCHAR(255),
                    Balance DECIMAL, -- Add a column to store balance
                    ATM_Card_Number VARCHAR(16),  -- Adding the ATM_Card_Number column
                    Card_Holder_Name VARCHAR(255), -- Adding Card_Holder_Name column
                    Card_Type VARCHAR(50),         -- Adding Card_Type column
                    Card_Status VARCHAR(20),        -- Adding Card_Status column
                    ATM_Card_PIN_Number CHAR(4),  -- Adding PIN column
                    ATM_Limit DECIMAL              -- Adding ATM_Limit column 
                    
                );
            '''    

        elif table_name == "TransactionHistory":
            create_table_query = f'''
                CREATE TABLE IF NOT EXISTS BAM.{table_name} (
                    id SERIAL PRIMARY KEY,
                    Username VARCHAR(255),
                    user_identifier VARCHAR(255),
                    transaction_record TEXT, -- Adjust data type as per requirement
                    Previous_Balance DECIMAL,
                    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                );
            '''
         
        else:
            raise ValueError("Invalid table name")

        self.cursor.execute(create_table_query)
        self.conn.commit()

    def save_data(self):
        # Get data from UI, Registration_Page_4(CurrentIndex_4, stackedWidget)
        Username = self.Registration_Username_LineEdit.text()
        Password = self.Registration_Password_LineEdit.text()
        Confirm_Password = self.Registration_ConfirmPassword_LineEdit.text()
        First_Name = self.Registration_FirstName_LineEdit.text()
        Surname = self.Registration_Surname_LineEdit.text()
        Date_Of_Birth = self.Registration_DateEdit.text()
        Email = self.Registration_Email_LineEdit.text()
        Gender = self.Registration_Gender_ComboBox.currentText()
        Account_Type= self.Registration_SelectAccountType_ComboBox.currentText()
        Create_Pin = self.Registration_CreateProfilePin_LineEdit.text()
        Confirm_Pin = self.Registration_ConfirmProfilePin_LineEdit.text()
        Street = self.Registration_Street_LineEdit.text()
        City = self.Registration_City_LineEdit.text()
        State = self.Registration_State_LineEdit.text()
        Country = self.Registration_Country_LineEdit.text()
        Security_Question = self.Registration_SecurityQuestion_ComboBox.currentText()# Add your security question
        Answer = self.Registration_Answer_LineEdit.text()

        # Check if any required field is empty
        required_fields = [Username, Password, Confirm_Password, First_Name, Surname,
                        Date_Of_Birth, Email, Gender, Account_Type, Create_Pin, Confirm_Pin,
                        Street, City, State, Country, Security_Question, Answer]

        if any(not field.strip() for field in required_fields):
             # Display an error message
             self.show_error_message("Please fill in all the required fields.")
        else:
             # Check if passwords match
             if Password != Confirm_Password:
                self.show_error_message("Password and Confirm Password do not match.")
             # Check if the password is at least four characters long
             elif len(Password) < 4:
                self.show_error_message("Password should be at least four characters long.")
            # Check if PINs match
             elif Create_Pin != Confirm_Pin:
                self.show_error_message("Create PIN and Confirm PIN do not match.")
                # Check if PINs contain exactly four numeric digits
             elif not (Create_Pin.isdigit() and Confirm_Pin.isdigit() and len(Create_Pin) == len(Confirm_Pin) == 4):
                self.show_error_message("PIN should contain exactly four numeric digits.")
             else:
                try:
                     # Check if the same data already exists in the database
                    existing_user = self.data_exists(Username, None)
                    existing_email = self.data_exists(None, Email)

                    if existing_user and existing_email:
                        self.show_error_message("This user already exists with the provided Username and Email.")
                    elif existing_user:
                        self.show_error_message("This user already exists with the provided Username.")
                    elif existing_email:
                        self.show_error_message("This user already exists with the provided Email.")
                    else:
                        # Generate a random 11-digit account number
                        account_number = random.randint(10**10, 10**11 - 1)

                        # Insert data into the BAM.BAM_registration_data
                        insert_query = '''
                        INSERT INTO BAM.BAM_registration_data (
                        Username, Password, Confirm_Password, First_Name, Surname, Date_Of_Birth,
                        Email, Gender, Create_Pin, Confirm_Pin, Street, City,
                        State, Country, Security_Question, Answer
                        )
                        VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s) 
                        '''
                        self.cursor.execute(insert_query, (
                        Username, Password, Confirm_Password, First_Name, Surname, Date_Of_Birth,
                        Email, Gender, Create_Pin, Confirm_Pin, Street, City,
                        State, Country, Security_Question, Answer  
                        ))

                        # Insert data into the BAM.User_Account_Cards table
                        insert_card_query = '''
                        INSERT INTO BAM.User_Account_Cards (
                        Username, Account_Number, Account_Type, First_Name, Surname, Date_Of_Birth, 
                        Gender, Street, City, State, Country, Balance, ATM_Card_Number, Card_Holder_Name, Card_Type,
                        Card_Status, ATM_Card_PIN_Number, ATM_Limit
                        )
                        VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
                        '''
                        self.cursor.execute(insert_card_query, (
                        Username, account_number, Account_Type, First_Name, Surname, Date_Of_Birth, 
                        Gender, Street, City, State, Country, 0, None, None, None, None, None, 0  # Initialize card-related fields
                        ))

                        self.conn.commit()

                        # Display a success message
                        self.show_success_message("Registration successful!")

                        # After a successful Registration                   
                        self.stackedWidget.setCurrentIndex(5)
                        # Switch to a specific page "WelcomeDelighted_Page_0" (CurrentIndex_0, stackedWidget_2)
                        self.stackedWidget_2.setCurrentIndex(0)

                        # Fetch user details and update UI
                        user_details = self.get_user_details(Username)
                        self.update_user_details_ui(user_details)

                        # Reset UI components to their initial state
                        self.reset_ui()
                        
                        # Define other_tableWidgets as a list containing all table widgets
                        other_tableWidgets = [
                            self.AccountDetails_Account_TableWidget,
                            self.DepositMoney_Account_TableWidget,
                            self.WithdrawMoney_Account_TableWidget,
                            self.Transfer_Account_TableWidget,
                            self.ViewTransaction_Account_TableWidget,
                            self.ViewBalance_Account_TableWidget,
                            self.RequestDebitCard_Account_TableWidget,
                            self.ATMPinGeneration_Account_TableWidget,
                            self.ATMCardLimitChange_Account_TableWidget,
                            self.BlockATMCard_Account_TableWidget,
                            self.ViewLinkedATMCard_Account_TableWidget,
                            self.UnblockATMCard_Account_TableWidget,
                            self.AddAccount_Account_TableWidget,
                            self.CloseAccount_Account_TableWidget
                        ]

                        # Populate the accounts table for each tableWidget
                        for tableWidget in other_tableWidgets:
                            self.populate_accounts_table(Username, tableWidget, other_tableWidgets)

                        # Fetch ATM card number for the logged-in user
                        atm_card_number = self.get_current_atm_card_number()

                        # Fetch and display ATM card limit using ATM card number
                        atm_card_limit = self.fetch_atm_card_limit(atm_card_number)
                        if atm_card_limit is not None:
                            self.YourCurrentATMLimit_Label_2.setText(str(atm_card_limit))
    
                except Exception as e:
                        # If an error occurs during data insertion, display an error message
                        self.show_error_message(f"Error inserting data: {str(e)}")

    def data_exists(self, username, email):
        """
        Check if the provided username or email already exists in the database.

        Args:
            username (str): The username to check for existence.
            email (str): The email to check for existence.

        Returns:
            bool: True if the provided username or email exists in the database, False otherwise.
        """
        try:  
            # Construct the SQL query based on the provided parameters     
            if username and email:
                select_query = "SELECT * FROM BAM.BAM_registration_data WHERE Username = %s OR Email = %s"
                self.cursor.execute(select_query, (username, email))
            elif username:
                select_query = "SELECT * FROM BAM.BAM_registration_data WHERE Username = %s"
                self.cursor.execute(select_query, (username,))
            elif email:
                select_query = "SELECT * FROM BAM.BAM_registration_data WHERE Email = %s"
                self.cursor.execute(select_query, (email,))

            # Fetch the result of the query
            existing_data = self.cursor.fetchone()

            # Return True if the data exists, False otherwise
            return existing_data is not None
        
        except Exception as e:
            # Handle any exceptions that occur during the database query
            print("Error occurred while checking if data exists:", e)
            # Might want to log the error or display a message to the user
            # Depending on the application's requirements
            return False  # Return False to indicate that an error occurred                   

## TableWidgets
    def __init__(self):        
        # Add a new instance variable to store selected rows
        self.selected_rows = [] 
    
    def populate_accounts_table(self, username, tableWidget, other_tableWidgets):
        # Fetch user account details from the database
        select_query = """
            SELECT UAC.Account_Number, UAC.First_Name, UAC.Surname, UAC.Account_Type, UAC.Balance 
            FROM BAM.User_Account_Cards AS UAC
            INNER JOIN BAM.BAM_registration_data AS BRD ON UAC.Username = BRD.Username 
            WHERE BRD.Username = %s
        """ 
        self.cursor.execute(select_query, (username,))
        accounts = self.cursor.fetchall()

        # Populate the table with fetched user account details
        tableWidget.setRowCount(len(accounts))
        for row_num, account in enumerate(accounts):
            account_number, first_name, surname, account_type, balance = account
           
            if balance is not None:
                self.AvailableBalance_Label_2.setText('{:,.2f}'.format(balance))
            else:
                self.AvailableBalance_Label_2.setText("N/A")  # Or any other default text to indicate no balance available          

            if tableWidget == self.AddAccount_Account_TableWidget:
                # Add column headers for the table
                tableWidget.setHorizontalHeaderLabels(["Account Number", "Name", "Account Type"])

                # Create QTableWidgetItem instances and set their text and alignment
                account_number_item = QTableWidgetItem(str(account_number))
                account_number_item.setFlags(account_number_item.flags() & ~Qt.ItemFlag.ItemIsEditable) 
                account_number_item.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
                tableWidget.setItem(row_num, 0, account_number_item)
                
                name_item = QTableWidgetItem(f"{first_name} {surname}")
                name_item.setFlags(name_item.flags() & ~Qt.ItemFlag.ItemIsEditable) 
                name_item.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
                tableWidget.setItem(row_num, 1, name_item)

                account_type_item = QTableWidgetItem(account_type)
                account_type_item.setFlags(account_type_item.flags() & ~Qt.ItemFlag.ItemIsEditable)
                account_type_item.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
                tableWidget.setItem(row_num, 2, account_type_item)

            else:    
                # Add column headers for the table
                tableWidget.setColumnCount(4)  # Set the number of columns to 4
                # Add column headers for the table
                tableWidget.setHorizontalHeaderLabels(["", "Account Number", "Name", "Account Type"])

                # Set the width of the newly inserted column
                tableWidget.setColumnWidth(0, 10)

                # Create a widget to hold the checkbox
                checkbox_widget = QWidget()
                checkbox_layout = QHBoxLayout(checkbox_widget)
                checkbox_layout.setAlignment(Qt.AlignmentFlag.AlignCenter)

                # Create the checkbox and add it to the layout
                checkbox = QCheckBox()
                checkbox_layout.addWidget(checkbox)
                checkbox_widget.setLayout(checkbox_layout)

                # Insert the checkbox into each cell of the newly inserted column
                tableWidget.setCellWidget(row_num, 0, checkbox_widget)

                # Create QTableWidgetItem instances and set their text and alignment
                account_number_item = QTableWidgetItem(str(account_number))
                account_number_item.setFlags(account_number_item.flags() & ~Qt.ItemFlag.ItemIsEditable) 
                account_number_item.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
                tableWidget.setItem(row_num, 1, account_number_item)
                
                name_item = QTableWidgetItem(f"{first_name} {surname}")
                name_item.setFlags(name_item.flags() & ~Qt.ItemFlag.ItemIsEditable) 
                name_item.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
                tableWidget.setItem(row_num, 2, name_item)

                account_type_item = QTableWidgetItem(account_type)
                account_type_item.setFlags(account_type_item.flags() & ~Qt.ItemFlag.ItemIsEditable)
                account_type_item.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
                tableWidget.setItem(row_num, 3, account_type_item)

                # Adjust the font settings for the "Account Type" column header
                font = QtGui.QFont()
                font.setBold(True)
                font.setUnderline(True)
                tableWidget.horizontalHeaderItem(3).setFont(font)

                # Change the background color of the cell in row row_num and column 0
                item = QTableWidgetItem()
                item.setBackground(QColor (0, 139, 181)) # Its possible to set any color in here
                tableWidget.setItem(row_num, 0, item)

                # Hide the vertical header (row numbers)
                # tableWidget.verticalHeader().hide()
                # Connect the checkbox's stateChanged signal to a slot
                checkbox.stateChanged.connect(lambda state, row=row_num: self.change_row_color(row, state, tableWidget))
                # Store selected rows
                checkbox.stateChanged.connect(lambda state, row=row_num: self.update_selected_rows(row, state, tableWidget, other_tableWidgets))
                # Connect the checkbox's stateChanged signal to update_account_details_on_checkbox_click
                checkbox.stateChanged.connect(lambda state, account_number=account_number: self.update_account_details_on_checkbox_click(account_number))
        # Update the select account label after populating the tableWidget
        self.update_select_account_labels(tableWidget, len(accounts))

    # Method to update UI with account details when a checkbox is clicked
    def update_account_details_on_checkbox_click(self, account_number):
        # Fetch account details based on account number
        account_details = self.get_account_details(account_number)
        # Update UI with account details
        self.update_account_details_ui(account_details)
        # Fetch and display balance for the selected account
        self.fetch_and_display_balance(account_number)   
        # Fetch and display transactions related to the selected account
        self.fetch_and_display_transaction_history_for_account(account_number)

        # Populate cards table for active, inactive and blocked cards
        self.populate_cards_table(account_number, self.ATMPinGeneration_ATM_TableWidget, card_status=None)  # Populate cards table for active and inactive cards, excluding blocked cards, in ATMPinGeneration_ATM_TableWidget
        self.populate_cards_table(account_number, self.AlreadyBlockedInactiveATMCard_ATM_TableWidget, card_status=None)  # Both blocked and inactive cards
        self.populate_cards_table(account_number, self.UnblockATMCard_ATM_TableWidget, "Blocked")  # Blocked cards
        self.populate_cards_table(account_number, self.ATMCardLimitChange_ATM_TableWidget, "Active")  # Active cards
        self.populate_cards_table(account_number, self.BlockATMCard_ATM_TableWidget, "Active")  # Active cards
        self.populate_cards_table(account_number, self.ViewTheActiveATMCardNumber_ATM_TableWidget, "Active")  # Active cards

        # Display empty table message if necessary
        self.display_empty_table_message(self.ATMPinGeneration_ATM_TableWidget)
        self.display_empty_table_message(self.AlreadyBlockedInactiveATMCard_ATM_TableWidget)
        self.display_empty_table_message(self.UnblockATMCard_ATM_TableWidget)
        self.display_empty_table_message(self.ATMCardLimitChange_ATM_TableWidget)
        self.display_empty_table_message(self.BlockATMCard_ATM_TableWidget)
        self.display_empty_table_message(self.ViewTheActiveATMCardNumber_ATM_TableWidget)

    def fetch_and_display_balance(self, account_number):
        try:
            # Fetch balance from the database using the account number
            select_query = "SELECT Balance FROM BAM.User_Account_Cards WHERE Account_Number = %s"
            self.cursor.execute(select_query, (account_number,))
            balance = self.cursor.fetchone()[0]
            # Display balance in AvailableBalance_Label_2
            if balance is not None:
                self.AvailableBalance_Label_2.setText('{:,.2f}'.format(balance))
            else:
                self.AvailableBalance_Label_2.setText("N/A")  # Or any other default text to indicate no balance available
        except Exception as e:
            print("Error occurred while fetching and displaying balance:", e)   

    def fetch_and_display_transaction_history_for_account(self, account_number):
        try:
            # Fetch transaction history from the database for the given account number
            select_query = """
            SELECT transaction_record 
            FROM BAM.TransactionHistory 
            WHERE user_identifier = %s 
            AND (
                transaction_record LIKE %s 
                OR transaction_record LIKE %s
                OR transaction_record LIKE %s
            )
            """
            self.cursor.execute(select_query, (str(account_number), '%Deposited Amount%', '%Withdrawn Amount%', '%Transfer%')) 
            transactions = self.cursor.fetchall()

            # Update the transaction record label in the UI(ViewTransaction_Label_3)
            transaction_text = ""
            for transaction in transactions:
                transaction_text += transaction[0] + "\n"  # Transaction[0] contains the transaction record

            if transaction_text:
                self.ViewTransaction_Label_3.setText(transaction_text)  
            else:
                self.ViewTransaction_Label_3.setText("No transactions found.")  # Set appropriate message when no transactions found

        except Exception as e:
            # Handle any exceptions that occur during the database query
            print("Error occurred while fetching and displaying transaction history for account:", e)
            # Might want to log the error or display a message to the user
            # Depending on the application's requirements            

    def change_row_color(self, row, state, tableWidget):
        # If the checkbox is checked
        if state == 2:  # 2 represents checked state
            for col in range(1, 4):
                # Change the background color of cells in columns 1, 2, and 3 for the specified row
                item = tableWidget.item(row, col)
                item.setBackground(QColor (0, 139, 181))
                item.setForeground(QColor("white"))
        else:
                # If the checkbox is unchecked, revert the background color of cells in columns 1, 2, and 3 to default (white) and text color to default (black)
            for col in range(1, 4):
                item = tableWidget.item(row, col)
                item.setBackground(QColor ("white"))  # Revert to default background color
                item.setForeground(QColor("black"))  # Revert to default text color

    def update_selected_rows(self, row, state, tableWidget, other_tableWidgets):
        # If the checkbox is checked
        if state == 2:  # 2 represents checked state
            for widget in other_tableWidgets:
                if widget != tableWidget:
                    for other_row in range(widget.rowCount()):
                        checkbox_widget = widget.cellWidget(other_row, 0)
                        if checkbox_widget is not None:
                            checkbox = checkbox_widget.findChild(QCheckBox)
                            if checkbox is not None:
                                checkbox.setChecked(False)

        # Uncheck previously selected rows in the same tableWidget
        for other_row in range(tableWidget.rowCount()):
            if other_row != row:
                checkbox_widget = tableWidget.cellWidget(other_row, 0)
                if checkbox_widget is not None:
                    checkbox = checkbox_widget.findChild(QCheckBox)
                    if checkbox is not None:
                        checkbox.setChecked(False)                       

        # If the checkbox is checked, add the row to the list of selected rows
        if state == 2:
            if row not in self.selected_rows:
                self.selected_rows.append(row)
        # If the checkbox is unchecked, remove the row from the list of selected rows
        else:
            if row in self.selected_rows:
                self.selected_rows.remove(row)  

    def update_select_account_label(self, label, text):
        """
        Update the text of the given label.

        Args:
            label: QLabel object to be updated.
            text: The new text to set for the label.
        """
        label.setText(text)           

    def update_select_account_labels(self, tableWidget, num_accounts):
        """
        Update the select account labels based on the number of accounts.

        Args:
            tableWidget: The table widget for which the label is being updated.
            num_accounts: The number of accounts associated with the tableWidget.
        """
        # Update labels based on the type of tableWidget
        if tableWidget == self.ViewLinkedATMCard_Account_TableWidget:
            # Update label for viewing linked ATM card accounts
            if num_accounts > 1:
                label_text = "Select the Account number(s) for linked ATM card"
            else:
                label_text = "Select the Account number for linked ATM card"
            self.SelectTheAccountNumberForLinkedATMCard_Label.setText(label_text)

        elif tableWidget == self.CloseAccount_Account_TableWidget:
            # Update label for closing accounts
            if num_accounts > 1:
                label_text = "Select the Account(s) you wish to close"
            else:
                label_text = "Select the Account you wish to close"
            self.SelectTheAccountYouWishToClose_Label.setText(label_text)

        elif tableWidget == self.AddAccount_Account_TableWidget:
            # Update label for adding accounts
            if num_accounts > 1:
                label_text = "Account(s) List"
            else:
                label_text = "Account List"
            self.AddAccount_AccountList_Label.setText(label_text) 

        else:
            # Update generic labels for other tableWidgets
            if num_accounts > 1:
                label_text = "Select the Account(s):"
            else:
                label_text = "Select the Account:"
        # Update labels for other tableWidgets
        if tableWidget == self.AccountDetails_Account_TableWidget:
            self.update_select_account_label(self.AccountDetailsSelectTheAccount_Label_2, label_text)
        elif tableWidget == self.DepositMoney_Account_TableWidget:
            self.update_select_account_label(self.DepositMoneySelectTheAccount_Label, label_text)
        elif tableWidget == self.WithdrawMoney_Account_TableWidget:
            self.update_select_account_label(self.WithdrawMoneySelectTheAccount_Label, label_text)
        elif tableWidget == self.Transfer_Account_TableWidget:
            self.update_select_account_label(self.TransferSelectTheAccount_Label, label_text)
        elif tableWidget == self.ViewTransaction_Account_TableWidget:
            self.update_select_account_label(self.ViewTransactionSelectTheAccount_Label, label_text)
        elif tableWidget == self.ViewBalance_Account_TableWidget:
            self.update_select_account_label(self.ViewBalanceSelectTheAccount_Label, label_text)
        elif tableWidget == self.RequestDebitCard_Account_TableWidget:
            self.update_select_account_label(self.RequestDebitCardSelectTheAccount_Label, label_text)
        elif tableWidget == self.ATMPinGeneration_Account_TableWidget:
            self.update_select_account_label(self.ATMPinGenerationSelectTheAccount_Label, label_text)
        elif tableWidget == self.ATMCardLimitChange_Account_TableWidget:
            self.update_select_account_label(self.ATMCardLimitChangeSelectTheAccount_Label, label_text)
        elif tableWidget == self.BlockATMCard_Account_TableWidget:
            self.update_select_account_label(self.BlockATMCardSelectTheAccount_Label, label_text)
        elif tableWidget == self.UnblockATMCard_Account_TableWidget:
            self.update_select_account_label(self.BlockATMCardSelectTheAccount_Label_2, label_text)
                               
    # Modify the check_selection_and_continue method to take the current tableWidget as an argument
    def check_selection_and_continue(self, tableWidget, index):
        # Check if any checkbox is checked
        if not self.selected_rows: 
            self.show_error_message("Please select one account.")
            return
        
        if tableWidget == self.AccountDetails_Account_TableWidget:
            # Check if selected rows belong to the AccountDetails_Account_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select one account from Account Details.")
                return
        elif tableWidget == self.DepositMoney_Account_TableWidget:
            # Check if selected rows belong to the DepositMoney_Account_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select one account from Deposit Money.")
                return
        elif tableWidget == self.WithdrawMoney_Account_TableWidget:
            # Check if selected rows belong to the WithdrawMoney_Account_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select one account from Withdraw Money.")
                return
        elif tableWidget == self.Transfer_Account_TableWidget:
            # Check if selected rows belong to the Transfer_Account_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select one account from Transfer.")
                return
        elif tableWidget == self.ViewTransaction_Account_TableWidget:
            # Check if selected rows belong to the ViewTransaction_Account_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select one account from View Transaction.")
                return
        elif tableWidget == self.ViewBalance_Account_TableWidget:
            # Check if selected rows belong to the ViewBalance_Account_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select one account from View Balance.")
                return
        elif tableWidget == self.RequestDebitCard_Account_TableWidget:
            # Check if selected rows belong to the RequestDebitCard_Account_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select one account from Request DebitCard.")
                return
        elif tableWidget == self.ATMPinGeneration_Account_TableWidget:
            # Check if selected rows belong to the ATMPinGeneration_Account_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select one account from ATMPinGeneration.")
                return
        elif tableWidget == self.ATMCardLimitChange_Account_TableWidget:
            # Check if selected rows belong to the ATMCardLimitChange_Account_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select one account from ATM CardLimit Change.")
                return
        elif tableWidget == self.BlockATMCard_Account_TableWidget:
            # Check if selected rows belong to the BlockATMCard_Account_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select one account from Block ATM Card.")
                return
        elif tableWidget == self.ViewLinkedATMCard_Account_TableWidget:
            # Check if selected rows belong to the ViewLinkedATMCard_Account_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select one account from View Linked ATMCard.")
                return
        elif tableWidget == self.UnblockATMCard_Account_TableWidget:
            # Check if selected rows belong to the UnblockATMCard_Account_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select one account from Unblock ATM Card.")
                return
        elif tableWidget == self.CloseAccount_Account_TableWidget:
            # Check if selected rows belong to the CloseAccount_Account_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select one account from Close Account.")
                return
        elif tableWidget == self.ATMPinGeneration_ATM_TableWidget:
            # Check if selected rows belong to the ATMPinGeneration_ATM_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select an ATM card from ATM Pin Generation.")
                return
        elif tableWidget == self.AlreadyBlockedInactiveATMCard_ATM_TableWidget:
            # Check if selected rows belong to the AlreadyBlockedInactiveATMCard_ATM_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select an ATM card from Already Blocked / Inactive ATM card.")
                return
        elif tableWidget == self.UnblockATMCard_ATM_TableWidget:
            # Check if selected rows belong to the UnblockATMCard_ATM_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select an ATM card from Unblock ATM Card.")
                return
        elif tableWidget == self.ATMCardLimitChange_ATM_TableWidget:
            # Check if selected rows belong to the ATMCardLimitChange_ATM_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select an ATM card from ATM Card Limit Change.")
                return
        elif tableWidget == self.BlockATMCard_ATM_TableWidget:
            # Check if selected rows belong to the BlockATMCard_ATM_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select an ATM card from BlockATMCard.")
                return
        elif tableWidget == self.ViewTheActiveATMCardNumber_ATM_TableWidget:
            # Check if selected rows belong to the ViewTheActiveATMCardNumber_ATM_TableWidget
            if not self.selected_rows_belong_to_table(self.selected_rows, tableWidget):
                self.show_error_message("Please select an ATM card from View The Active ATM Card Number.")
                return
                     
        # If all checks pass, proceed to the next page
        self.stackedWidget_2.setCurrentIndex(index)

    # Add a helper method to check if selected rows belong to a specific tableWidget
    def selected_rows_belong_to_table(self, selected_rows, tableWidget):
        for row in selected_rows:
            # Retrieve the cell widget
            cell_widget = tableWidget.cellWidget(row, 0)
        
            # Check if the cell widget exists and is not None
            if cell_widget is not None:
                # Attempt to find the checkbox widget within the cell widget
                checkbox = cell_widget.findChild(QCheckBox)
            
                # Check if the checkbox widget is found and is checked
                if checkbox is not None and checkbox.isChecked():
                    return True
        return False

## ATMPinGeneration_Page_17, ATMCardLimitChange_Page_20
    def populate_cards_table(self, account_number, tableWidget, card_status=None):
        # Fetch user account details from the database
        select_query = "SELECT ATM_Card_Number, Card_Holder_Name, Card_Status FROM BAM.User_Account_Cards WHERE Account_Number = %s"
        # Adjust the query to fetch only active and inactive cards excluding blocked cards
        if tableWidget == self.ATMPinGeneration_ATM_TableWidget:
            select_query += " AND (Card_Status = 'Active' OR Card_Status = 'Inactive') AND Card_Status != 'Blocked'"
        # Adjust the query to fetch only inactive and blocked cards for AlreadyBlockedInactiveATMCard_ATM_TableWidget
        elif tableWidget == self.AlreadyBlockedInactiveATMCard_ATM_TableWidget:
            select_query += " AND (Card_Status = 'Inactive' OR Card_Status = 'Blocked')"
        # Adjust the query to fetch only blocked cards for UnblockATMCard_Account_TableWidget
        elif tableWidget == self.UnblockATMCard_Account_TableWidget:
            select_query += " AND Card_Status = 'Blocked'"    
        elif card_status is not None:
            select_query += " AND Card_Status = %s"

        if card_status is not None:   
            self.cursor.execute(select_query, (account_number, card_status))
        else:
            self.cursor.execute(select_query, (account_number,))
        cards = self.cursor.fetchall()

        # Populate the table with fetched card details
        tableWidget.setRowCount(len(cards))

        if not cards:  # If cards list is empty, insert a message into the tableWidget
            message_item = QTableWidgetItem("No cards found.")
            tableWidget.setItem(0, 0, message_item)
            return 

        for row_num, card in enumerate(cards):
            ATM_Card_Number, Card_Holder_Name, Card_Status = card

            if tableWidget == self.ViewTheActiveATMCardNumber_ATM_TableWidget or tableWidget == self.AlreadyBlockedInactiveATMCard_ATM_TableWidget:
                # Set column headers
                tableWidget.setHorizontalHeaderLabels(["ATM Card Number", "Name", "Card Status"])

                # Create QTableWidgetItem instances and set their text and alignment
                ATM_Card_Number_item = QTableWidgetItem(str(ATM_Card_Number))
                ATM_Card_Number_item.setFlags(ATM_Card_Number_item.flags() & ~Qt.ItemFlag.ItemIsEditable) 
                ATM_Card_Number_item.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
                tableWidget.setItem(row_num, 0, ATM_Card_Number_item)

                name_item = QTableWidgetItem(Card_Holder_Name)
                name_item.setFlags(name_item.flags() & ~Qt.ItemFlag.ItemIsEditable) 
                name_item.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
                tableWidget.setItem(row_num, 1, name_item)

                Card_Status_item = QTableWidgetItem(Card_Status)
                Card_Status_item.setFlags(Card_Status_item.flags() & ~Qt.ItemFlag.ItemIsEditable)
                Card_Status_item.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
                tableWidget.setItem(row_num, 2, Card_Status_item)

            else:
                # Add column headers for the table
                tableWidget.setColumnCount(4)  # Set the number of columns to 4
                # Add column headers for the table
                tableWidget.setHorizontalHeaderLabels(["", "ATM Card Number", "Name", "Card Status"])

                # Set the width of the newly inserted column
                tableWidget.setColumnWidth(0, 10)

                # Create a widget to hold the checkbox
                checkbox_widget = QWidget()
                checkbox_layout = QHBoxLayout(checkbox_widget)
                checkbox_layout.setAlignment(Qt.AlignmentFlag.AlignCenter)

                # Create the checkbox and add it to the layout
                checkbox = QCheckBox()
                checkbox_layout.addWidget(checkbox)
                checkbox_widget.setLayout(checkbox_layout)

                # Insert the checkbox into each cell of the newly inserted column
                tableWidget.setCellWidget(row_num, 0, checkbox_widget)

                # Create QTableWidgetItem instances and set their text and alignment
                ATM_Card_Number_item = QTableWidgetItem(str(ATM_Card_Number))
                ATM_Card_Number_item.setFlags(ATM_Card_Number_item.flags() & ~Qt.ItemFlag.ItemIsEditable) 
                ATM_Card_Number_item.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
                tableWidget.setItem(row_num, 1, ATM_Card_Number_item)
                
                name_item = QTableWidgetItem(Card_Holder_Name)
                name_item.setFlags(name_item.flags() & ~Qt.ItemFlag.ItemIsEditable) 
                name_item.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
                tableWidget.setItem(row_num, 2, name_item)

                Card_Status_item = QTableWidgetItem(Card_Status)
                Card_Status_item.setFlags(Card_Status_item.flags() & ~Qt.ItemFlag.ItemIsEditable)
                Card_Status_item.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
                tableWidget.setItem(row_num, 3, Card_Status_item)

                # Adjust the font settings for the "Account Type" column header
                font = QtGui.QFont()
                font.setBold(True)
                font.setUnderline(True)
                tableWidget.horizontalHeaderItem(3).setFont(font)

                # Change the background color of the cell in row row_num and column 0
                item = QTableWidgetItem()
                item.setBackground(QColor (0, 139, 181)) # Its possible to set any color in here
                tableWidget.setItem(row_num, 0, item)

                # Hide the vertical header (row numbers)
                # tableWidget.verticalHeader().hide()
                # Define other_tableWidgets as a list containing all table widgets except tableWidget
                other_tableWidgets = [
                    self.ViewTheActiveATMCardNumber_ATM_TableWidget,
                    self.AlreadyBlockedInactiveATMCard_ATM_TableWidget,
                    self.UnblockATMCard_ATM_TableWidget,
                    self.ATMPinGeneration_ATM_TableWidget,
                    self.ATMCardLimitChange_ATM_TableWidget,
                    self.BlockATMCard_ATM_TableWidget
                ]
                # Connect the checkbox's stateChanged signal to a slot
                checkbox.stateChanged.connect(lambda state, row=row_num: self.change_row_color(row, state, tableWidget))
                # Store selected rows
                checkbox.stateChanged.connect(lambda state, row=row_num, tableWidget=tableWidget, other_tableWidgets=other_tableWidgets: self.update_selected_rows(row, state, tableWidget, other_tableWidgets))

                # Inside the loop where checkboxes are being set up in ATMPinGeneration_ATM_TableWidget
                checkbox.stateChanged.connect(lambda state, atm_card_number=ATM_Card_Number: self.update_current_atm_limit_label(atm_card_number))

    # A method to update the ATM limit label based on the selected ATM card number
    def update_current_atm_limit_label(self, atm_card_number):
        try:
            # Query the database to retrieve the ATM limit for the selected card
            query = "SELECT ATM_Limit FROM BAM.User_Account_Cards WHERE ATM_Card_Number = %s"
            self.cursor.execute(query, (atm_card_number,))
            atm_limit = self.cursor.fetchone()[0]

            # Update the UI with the ATM limit
            self.YourCurrentATMLimit_Label_2.setText(str(atm_limit))
        except Exception as e:
            print("Error occurred while updating current ATM limit label:", e)

    # Display a message in the tableWidget if it is empty.
    def display_empty_table_message(self, tableWidget, message="No cards found."):
        # Check if the tableWidget is empty
        if not tableWidget.rowCount():
            # Set the message as an item in the first cell
            tableWidget.setRowCount(1) # Set the row count to 1
            message_item = QTableWidgetItem(message)  # Create a QTableWidgetItem with the message
            # Set the item in the first cell
            message_item.setFlags(message_item.flags() & ~Qt.ItemFlag.ItemIsSelectable)  # Make the item not selectable
            message_item.setFlags(message_item.flags() & ~Qt.ItemFlag.ItemIsEditable)  # Make the item not editable
            message_item.setFlags(message_item.flags() & ~Qt.ItemFlag.ItemIsEnabled)  # Disable the item
            message_item.setTextAlignment(Qt.AlignmentFlag.AlignCenter)  # Center align the text
            
            # Set the cell frame style to no frame
            message_item.setBackground(QtGui.QColor(255, 255, 255, 0))  # Set transparent background
            tableWidget.setItem(0, 0, message_item)  
            
            # Hide the vertical header (row numbers)
            tableWidget.verticalHeader().hide()                

# Methods to clear the checkbox selection and line edits when the "Cancel" button is pressed
    # Method to clear the table widget checkbox selection and single line edits when the "Cancel" button is pressed
    def clear_selection(self, tableWidget):
        # Check if the table widget is empty
        if tableWidget.rowCount() == 0:
            return

        for row in self.selected_rows:
            # Retrieve the cell widget
            cell_widget = tableWidget.cellWidget(row, 0)
            if cell_widget is not None:
                # Find the checkbox within the cell widget
                checkbox = cell_widget.findChild(QCheckBox)
                if checkbox is not None:
                    # Uncheck the checkbox
                    checkbox.setChecked(False)
        # Clear the selected rows list
        self.selected_rows = []        

# Method to clear the line edit and combo box selection when the "Cancel" button is pressed
    # Create a method to clear the transfer line edits
    def clear_transfer_line_edits(self):
        self.RecipientName_LineEdit.clear()
        self.RecipientAccountNumber_LineEdit.clear()
        self.TransferAmount_LineEdit.clear()

    # Create a method to clear the change profile password line edits
    def clear_change_password_line_edits(self):
        self.ChangePassword_CurrentPassword_LineEdit.clear()
        self.ChangePassword_NewPassword_LineEdit.clear()
        self.ChangePassword_ConfirmPassword_LineEdit.clear()  

    # Create a method to clear the change profile pin line edits
    def clear_change_pin_line_edits(self):
        self.ChangeProfilePin_CurrentPin_LineEdit.clear()
        self.ChangeProfilePin_NewPin_LineEdit.clear()
        self.ChangeProfilePin_ConfirmPin_LineEdit.clear()  

    # Create a method to clear the request debit card line edits and combo box
    def clear_request_debit_card_line_edits(self):       
        self.CardCategory_ComboBox.setCurrentIndex(-1)
        self.NameOnTheCard_LineEdit.clear()  
        self.SelectTypeOfTheCard_ComboBox.setCurrentIndex(-1)    

    # Create a method to clear the request debit card line edits and combo box
    def clear_Add_Account_line_edits(self):   
        self.AddAccount_FirstName_LineEdit.clear()  
        self.AddAccount_Surname_LineEdit.clear()  
        # Reset the selected date in AddAccount_DateEdit
        self.AddAccount_DateEdit.setDate(QtCore.QDate(2000, 1, 1))  # Set an empty date
        self.AddAccount_Gender_ComboBox.setCurrentIndex(-1) 
        self.AddAccount_SelectAccountType_ComboBox.setCurrentIndex(-1) 
        self.AddAccount_Street_LineEdit.clear()  
        self.AddAccount_City_LineEdit.clear()  
        self.AddAccount_State_LineEdit.clear()  
        self.AddAccount_Country_LineEdit.clear()     

    # Method to clear the deposit/withdraw amount field
    def clear_amount_field(self, line_edit):
        # Clear the specified line edit field
        line_edit.clear() 

## Methods to show error and success messages
    def show_error_message(self, message):
        # Display an error message dialog
        self.show_message(message, "Error", QMessageBox.Icon.Warning)

    def show_success_message(self, message):
        # Display a success message dialog
        self.show_message(message, "Success", QMessageBox.Icon.Information)

    def show_message(self, message, title, icon):
        # Display a message dialog with the specified title and icon
        msg = QMessageBox()
        msg.setIcon(icon)
        msg.setText(message)
        msg.setWindowTitle(title)
        msg.exec()                    

## RequestDebitCard_Page_18(CurrentIndex_18, stackedWidget_2)
    def request_debit_card(self):
        # Get the Details entered by the user
        card_category = self.CardCategory_ComboBox.currentText()
        name_on_card = self.NameOnTheCard_LineEdit.text()
        card_type = self.SelectTypeOfTheCard_ComboBox.currentText()

        # Retrieve the account number of the current user's session
        account_numbers = self.get_selected_accounts(self.RequestDebitCard_Account_TableWidget)

        # Check if all required fields are filled
        if not (card_category and name_on_card and card_type):
            self.show_error_message("Please fill in all the required fields.")
            return
        
        # Check if more than one account is selected
        if len(account_numbers) != 1:
            self.show_error_message("Please select only one account to request a debit card.")
            return

        account_number = account_numbers[0]  # Extract the selected account number

        try:
            # Check if the current account already has a debit card requested
            if self.account_has_debit_card(account_number):
                self.show_error_message("This account already has a debit card requested.")
                return
            # Generate a random 16-digit ATM card number
            atm_card_number = ''.join(str(random.randint(0, 9)) for _ in range(16))

            # Insert card details into the database
            self.save_card_details(atm_card_number, name_on_card, card_type, account_number)

            # Show success message
            self.show_success_message("Debit card requested successfully. ATM Card Number: " + atm_card_number)

            # Call populate_cards_table to update the ATMPinGeneration_ATM_TableWidget
            self.populate_cards_table(account_number, self.ATMPinGeneration_ATM_TableWidget)  
            self.populate_cards_table(account_number, self.ATMCardLimitChange_ATM_TableWidget)  
            self.populate_cards_table(account_number, self.BlockATMCard_ATM_TableWidget)  
            self.populate_cards_table(account_number, self.AlreadyBlockedInactiveATMCard_ATM_TableWidget)  
            self.populate_cards_table(account_number, self.ViewTheActiveATMCardNumber_ATM_TableWidget)  
            self.populate_cards_table(account_number, self.UnblockATMCard_ATM_TableWidget)  
                     
        except Exception as e:
            self.show_error_message(f"Error occurred while requesting debit card: {str(e)}")

    def save_card_details(self, atm_card_number, name_on_card, card_type, account_number):
        try:
            # Database query to update user row with card details
            update_query = '''
            UPDATE BAM.User_Account_Cards
            SET ATM_Card_Number = %s, Card_Holder_Name = %s, Card_Type = %s, Card_Status = %s
            WHERE account_number = %s
            '''
            self.cursor.execute(update_query, (atm_card_number, name_on_card, card_type, "Inactive", account_number))
            self.conn.commit()

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while saving card details:", e)
            # Rollback the transaction in case of an error
            self.conn.rollback()
            # Log the error or display a message to the user
            # Depending on the application's requirements
            # Might want to raise the exception or return a specific value to indicate failure   

    def account_has_debit_card(self, account_number):
        try:
            # Query to check if the account already has a debit card requested
            query = '''
            SELECT ATM_Card_Number
            FROM BAM.User_Account_Cards
            WHERE Account_Number = %s AND ATM_Card_Number IS NOT NULL
            '''
            self.cursor.execute(query, (account_number,))
            return self.cursor.fetchone() is not None    

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while checking for debit card:", e)
            # It might be necessary to raise the exception again or return a specific value to indicate failure
            # Depending on the application's requirements

    def get_current_account_number(self):
        try:
            # Retrieve the identifier (username or email) of the current user
            current_identifier = self.get_current_identifier()

            # Query the database to retrieve the account number associated with the current user
            query = '''
            SELECT UAC.Account_Number
            FROM BAM.User_Account_Cards AS UAC
            INNER JOIN BAM.BAM_registration_data AS BRD 
            ON UAC.Username = BRD.Username
            WHERE BRD.Username = %s OR BRD.Email = %s
            ''' 
            self.cursor.execute(query, (current_identifier, current_identifier))
            result = self.cursor.fetchone()

            if result:
                return result[0]  # Return the account number
            else:
                # Handle the case where the account number is not found
                raise ValueError("Account number not found for the current user")  
            
        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while fetching account number:", e)
            # Log the error or display a message to the user
            # Depending on the application's requirements
            return None   

## ATMPinGeneration_Page_21(CurrentIndex_21, stackedWidget_2)
    def activate_card(self, row_num):
        # Get the PIN entered by the user
        pin = self.EnterFourDigitsOfYourDesiredPin_LineEdit.text() 

        # Check if the PIN field is empty
        if not pin:
            self.show_error_message("Please enter a PIN.")
            return

        # Check if the PIN is exactly 4 digits
        if len(pin) != 4 or not pin.isdigit():
            self.show_error_message("Please enter a 4-digit PIN.")
            return

        try:
            # Retrieve the ATM card number of the current user's session
            atm_card_number = self.get_atm_card_number_from_row(self.ATMPinGeneration_ATM_TableWidget, row_num)

            # Check if the PIN already exists in the database
            if self.is_pin_exists_in_database(atm_card_number):
                existing_pin = self.is_pin_exists_in_database(atm_card_number)
                # Check if the entered PIN is the same as the existing PIN
                if pin == existing_pin:
                    self.show_error_message("Entered PIN is the same as the current PIN. Please enter a different PIN.")
                    return
                
                # Prompt the user with a message box for confirmation
                msg_box = QMessageBox()
                msg_box.setText('A PIN already exists for this card. Are you sure you want to change the PIN?')
                msg_box.setWindowTitle('Confirmation')
                msg_box.setStandardButtons(QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No)
                reply = msg_box.exec()

                # If the user confirms (presses "Yes"), proceed with changing the PIN
                if reply == QMessageBox.StandardButton.Yes:
                    self.update_pin(atm_card_number, pin)
                    self.show_success_message("PIN changed successfully.")
                # If the user cancels (presses "No"), simply close the message box without taking any action
                else:
                    pass
            else:  

                # Update the card status to "Active" in the database
                self.update_card_status(atm_card_number, pin)

                # Show a success message
                self.show_success_message("Card activated successfully.")

                # Additional actions if needed, such as updating the UI
        
        except Exception as e:
            self.show_error_message(f"Error occurred while activating card: {str(e)}")

    def get_atm_card_number_from_row(self, table_widget, row_num):
        # Retrieve the ATM card number associated with the selected row in the given table widget
        atm_card_number_item = table_widget.item(row_num, 1)  # ATM card number is in the second column
        if atm_card_number_item:
            return atm_card_number_item.text()
        else:
            raise ValueError("ATM card number not found for the selected row")       

    def update_card_status(self, atm_card_number, ATM_Card_PIN_Number):
        try:
            # Query to update the card status to "Active" in the database
            update_query = '''
            UPDATE BAM.User_Account_Cards
            SET Card_Status = %s, ATM_Card_PIN_Number = %s
            WHERE ATM_Card_Number = %s
            '''
            self.cursor.execute(update_query, ("Active", ATM_Card_PIN_Number, atm_card_number))
            self.conn.commit()

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while updating card status:", e)
            # It might be necessary to raise the exception again or return a specific value to indicate failure
            # Depending on the application's requirements

    def is_pin_exists_in_database(self, atm_card_number):
        try:
            # Query to check if the PIN exists in the database
            query = '''
            SELECT ATM_Card_PIN_Number
            FROM BAM.User_Account_Cards
            WHERE ATM_Card_Number = %s
            '''
            self.cursor.execute(query, (atm_card_number,))
            result = self.cursor.fetchone()

            return result[0] if result else None
        
        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while checking PIN existence:", e)
            # It might be necessary to raise the exception again or handle it differently based on the application's requirements
            # Depending on the application's requirements

    def update_pin(self, atm_card_number, new_pin):
        try:
            # Query to update the PIN in the database
            update_query = '''
            UPDATE BAM.User_Account_Cards 
            SET ATM_Card_PIN_Number = %s
            WHERE ATM_Card_Number = %s
            '''
            self.cursor.execute(update_query, (new_pin, atm_card_number))
            self.conn.commit() 

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while updating PIN:", e)
            # It might be necessary to raise the exception again or handle it differently based on the application's requirements 
            # Depending on the application's requirements 
  
## ATMCardLimitChange_Page_24(CurrentIndex_24, stackedWidget_2)
    def change_atm_card_limit(self, row_num):
        # Get the new ATM limit entered by the user
        new_limit = self.NewATMLimit_LineEdit.text()

        # Check if the new limit field is empty
        if not new_limit:
            self.show_error_message("Please enter a new ATM limit.")
            return

        # Check if the new limit consists only of digits
        if not new_limit.isdigit():
            self.show_error_message("Please enter a valid number for the new ATM limit.")
            return

        # Convert the new limit to an integer
        new_limit = int(new_limit)

        # Check if the new limit exceeds the maximum limit of 50,000
        if new_limit > 50000:
            self.show_error_message("The new ATM limit cannot exceed 50,000.")
            return

        try:
            # Retrieve the ATM card number of the current user's session
            atm_card_number = self.get_atm_card_number_from_row(self.ATMCardLimitChange_ATM_TableWidget, row_num)

            # Check if the card is active
            if not self.is_card_active(atm_card_number):
                self.show_error_message("Cannot change ATM card limit. The card is inactive.")
                return
            
            # Retrieve the current ATM limit from the database
            current_limit = self.get_current_atm_limit(atm_card_number)

            # Check if the new limit is the same as the current limit
            if new_limit == current_limit:
                self.show_error_message("The new ATM limit is the same as the current limit. Please enter a different limit.")
                return

            # Update the ATM limit in the database
            self.update_atm_limit(atm_card_number, new_limit)

            # Update the UI with the new ATM limit
            self.YourCurrentATMLimit_Label_2.setText(str(new_limit))

            # Show a success message
            self.show_success_message("ATM card limit changed successfully.")

        except Exception as e:
            self.show_error_message(f"Error occurred while changing ATM card limit: {str(e)}")

    def get_current_atm_card_number(self):
        try:
            # Retrieve the ATM card number associated with the current user
            current_identifier = self.get_current_identifier() 

            # Query the database to retrieve the ATM card number
            query = '''
            SELECT UAC.ATM_Card_Number
            FROM BAM.User_Account_Cards AS UAC
            INNER JOIN BAM.BAM_registration_data AS BRD 
            ON UAC.Username = BRD.Username
            WHERE BRD.Username = %s OR BRD.Email = %s
            '''
            self.cursor.execute(query, (current_identifier, current_identifier))
            result = self.cursor.fetchone()

            if result:
                return result[0]  # Return the ATM card number
            else:
                # Handle the case where the ATM card number is not found
                raise ValueError("ATM card number not found for the current user")
            
        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while fetching ATM card number:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return None 

    def get_current_atm_limit(self, atm_card_number):
        try:
            # Query the database to retrieve the current ATM limit associated with the ATM card number
            query = '''
            SELECT ATM_Limit
            FROM BAM.User_Account_Cards
            WHERE ATM_Card_Number = %s
            '''
            self.cursor.execute(query, (atm_card_number,))
            result = self.cursor.fetchone()

            if result:
                return result[0]  # Return the current ATM limit
            else:
                # Handle the case where the ATM limit is not found
                raise ValueError("ATM limit not found for the specified card number")
            
        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while fetching ATM limit:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return None       

    def update_atm_limit(self, atm_card_number, new_limit):
        try:
            # Query to update the ATM limit in the database
            update_query = '''
            UPDATE BAM.User_Account_Cards
            SET ATM_Limit = %s
            WHERE ATM_Card_Number = %s
            '''
            self.cursor.execute(update_query, (new_limit, atm_card_number))
            self.conn.commit()   

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while updating ATM limit:", e)
            # It might be necessary raise the exception again or handle it differently based on the application's requirements   
            # Depending on the application's requirements

## BlockATMCard_Page_27(CurrentIndex_27, stackedWidget_2)
    # Implement the confirm_block_card function
    def confirm_block_card(self):
        try:
            # Check if any checkbox is checked
            selected_row = -1
            for row in range(self.BlockATMCard_ATM_TableWidget.rowCount()):
                checkbox_widget = self.BlockATMCard_ATM_TableWidget.cellWidget(row, 0)
                if checkbox_widget is not None:
                    checkbox = checkbox_widget.findChild(QCheckBox)
                    if checkbox is not None and checkbox.isChecked():
                        selected_row = row
                        break
            
            if selected_row == -1:
                self.show_error_message("Please select an ATM card to block.")
                return

            # Get the ATM card number of the selected card
            atm_card_number = self.get_atm_card_number_from_row(self.BlockATMCard_ATM_TableWidget, selected_row)

            # Check if the card is already blocked
            if self.is_card_blocked(atm_card_number):
                self.show_error_message("The selected ATM card is already blocked.")
                return

            # Prompt the user with a message box for confirmation
            msg_box = QMessageBox()
            msg_box.setText('Are you sure you want to block the selected ATM card?')
            msg_box.setWindowTitle('Confirmation')
            msg_box.setStandardButtons(QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No)
            reply = msg_box.exec()

            # If the user confirms (presses "Yes"), proceed with blocking the card
            if reply == QMessageBox.StandardButton.Yes:
                self.block_selected_atm_card(atm_card_number)
            # If the user cancels (presses "No"), simply close the message box without taking any action
            else:
                pass
        
        except Exception as e:
            self.show_error_message(f"Error occurred while confirming block card: {str(e)}")

    # Function to block the selected ATM card
    def block_selected_atm_card(self, atm_card_number):
        try:
            # Update the card status to "Blocked" in the database
            self.update_card_status_block(atm_card_number, "Blocked")

            # Show a success message
            self.show_success_message(f"ATM card {atm_card_number} blocked successfully.")

        except Exception as e:
            self.show_error_message(f"Error occurred while blocking ATM card: {str(e)}")

    def update_card_status_block(self, atm_card_number, card_status):
        try:
            # Query to update the card status in the database
            update_query = '''
            UPDATE BAM.User_Account_Cards
            SET Card_Status = %s
            WHERE ATM_Card_Number = %s
            '''
            self.cursor.execute(update_query, (card_status, atm_card_number))
            self.conn.commit()

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while updating card status:", e)
            # It might be necessary to raise the exception again or handle it differently based on the application's requirements   
            # Depending on the application's requirements

    def is_card_blocked(self, atm_card_number):
        try:
            # Query to check if the card status is 'Blocked'
            query = '''
            SELECT Card_Status
            FROM BAM.User_Account_Cards
            WHERE ATM_Card_Number = %s
            '''
            self.cursor.execute(query, (atm_card_number,))
            result = self.cursor.fetchone()

            if result and result[0] == 'Blocked':
                return True
            else:
                return False 

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while checking if card is blocked:", e)
            # It might be necessary to raise the exception again or handle it differently based on the application's requirements     
            # Depending on the application's requirements

## UnlockATMCard_Page_33(CurrentIndex_33, stackedWidget_2)
    # Implement the confirmation dialog for unblocking ATM cards
    def confirm_unblock_card(self):
        try:
            # Check if any checkbox is checked
            selected_row = -1
            for row in range(self.UnblockATMCard_ATM_TableWidget.rowCount()):
                checkbox_widget = self.UnblockATMCard_ATM_TableWidget.cellWidget(row, 0)
                if checkbox_widget is not None:
                    checkbox = checkbox_widget.findChild(QCheckBox)
                    if checkbox is not None and checkbox.isChecked():
                        selected_row = row
                        break
            
            if selected_row == -1:
                self.show_error_message("Please select an ATM card to unblock.")
                return

            # Get the ATM card number of the selected card
            atm_card_number = self.get_atm_card_number_from_row(self.UnblockATMCard_ATM_TableWidget, selected_row)

            # Check if the card is already unblocked
            if self.is_card_active(atm_card_number):
                self.show_error_message("The selected ATM card is already unblocked.")
                return

            # Prompt the user with a message box for confirmation
            msg_box = QMessageBox()
            msg_box.setText('Are you sure you want to unblock the selected ATM card?')
            msg_box.setWindowTitle('Confirmation')
            msg_box.setStandardButtons(QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No)
            reply = msg_box.exec()

            # If the user confirms (presses "Yes"), proceed with unblocking the card
            if reply == QMessageBox.StandardButton.Yes:
                self.unblock_selected_atm_card(atm_card_number)
            # If the user cancels (presses "No"), simply close the message box without taking any action
            else:
                pass
        
        except Exception as e:
            self.show_error_message(f"Error occurred while confirming unblock card: {str(e)}")

    # Function to unblock the selected ATM card
    def unblock_selected_atm_card(self, atm_card_number):
        try:
            # Update the card status to "Active" in the database
            self.update_card_status_unblock(atm_card_number, "Active")

            # Show a success message
            self.show_success_message(f"ATM card {atm_card_number} unblocked successfully.")

        except Exception as e:
            self.show_error_message(f"Error occurred while unblocking ATM card: {str(e)}")

    # Database query to update the card status to "Active"
    def update_card_status_unblock(self, atm_card_number, card_status):
        try:
            # Query to update the card status in the database
            update_query = '''
            UPDATE BAM.User_Account_Cards
            SET Card_Status = %s
            WHERE ATM_Card_Number = %s
            '''
            self.cursor.execute(update_query, (card_status, atm_card_number))
            self.conn.commit()   

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while updating card status:", e)
            # It might be necessary to raise the exception again or handle it differently based on the application's requirements  
            # Depending on the application's requirements 

    def is_card_active(self, atm_card_number):
        try:
            # Query to check if the card status is 'Blocked'
            query = '''
            SELECT Card_Status
            FROM BAM.User_Account_Cards
            WHERE ATM_Card_Number = %s
            '''
            self.cursor.execute(query, (atm_card_number,))
            result = self.cursor.fetchone()

            if result and result[0] == 'Active':
                return True
            else:
                return False     

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while checking card status:", e)
            # It might be necessary to raise the exception again or handle it differently based on the application's requirements   
            # Depending on the application's requirements             

## DepositAmount_Page_4(CurrentIndex_4, stackedWidget_2)
    def deposit_amount(self):
        # Retrieve the entered deposit amount from the UI
        amount_text = self.DepositAmount_LineEdit.text()
        # Check if the amount field is empty
        if not amount_text:
                self.show_error_message("Please enter the deposit amount.")
                return
        
        # Check if the amount contains only digits
        if not amount_text.isdigit():
                self.show_error_message("Please enter only digits for the deposit amount.")
                return

        # Convert the amount to an integer
        amount = int(amount_text)
        # Check if the amount is within the specified range
        if not 100 <= amount <= 20000:
                self.show_error_message("The deposit amount should be between 100 and 20,000.")
                return

        # Get the current user identifier (username or email)
        current_identifier = self.get_current_identifier()

        try:
            # Fetch the selected account number(s)
            selected_accounts = self.get_selected_accounts(self.DepositMoney_Account_TableWidget)
            if not selected_accounts:
                self.show_error_message("Please select at least one account.")
                return
            
            # Loop through selected accounts and update balances individually
            for account_number in selected_accounts:
                # Fetch the current balance from the database
                current_balance = self.fetch_balance(current_identifier, account_number)
        
                # Calculate the new balance after deposit
                new_balance = current_balance + amount
           
                # Update the balance in the database
                self.update_balance(current_identifier, new_balance, account_number)
            
                # Update the balance label in the UI with proper comma formatting
                self.AvailableBalance_Label_2.setText('{:,.2f}'.format(new_balance))

                # Record the transaction
                self.record_transaction("Deposit", amount, sender_account_number=account_number)

            # Show success message
            self.show_success_message("Deposit successful!")

            # Navigate to the AvailableBalance_Page_12
            self.stackedWidget_2.setCurrentIndex(12)    
            # Select the ViewBalance_PushButton
            self.on_button_clicked(self.ViewBalance_PushButton)  

        except Exception as e:
            # If an error occurs during the process, display an error message
            self.show_error_message(f"Error processing deposit: {str(e)}")   

    def get_selected_accounts(self, tableWidget):
        # This method retrieves the selected account numbers from the table widgets
        selected_accounts = []

        # Check each row in the table widget and add the account number to the list if its checkbox is checked
        for row_num in range(tableWidget.rowCount()):
            checkbox_widget = tableWidget.cellWidget(row_num, 0)
            if checkbox_widget:
                checkbox = checkbox_widget.findChild(QCheckBox)
                if checkbox and checkbox.isChecked():
                    account_number_item = tableWidget.item(row_num, 1)
                    selected_accounts.append(account_number_item.text())

        return selected_accounts 

## WithdrawAmount_Page_6(CurrentIndex_6, stackedWidget_2)
    def withdraw_amount(self):
        # Retrieve the entered withdrawal amount from the UI
        amount_text = self.WithdrawAmount_LineEdit.text()

        # Check if the amount field is empty
        if not amount_text:
            self.show_error_message("Please enter the withdrawal amount.")
            return
        
        # Check if the amount contains only digits
        if not amount_text.isdigit():
            self.show_error_message("Please enter only digits for the withdrawal amount.")
            return

        # Convert the amount to an integer
        amount = int(amount_text)

        # Get the current user identifier (username or email)
        current_identifier = self.get_current_identifier()

        try:
            # Fetch the selected account number(s)
            selected_accounts = self.get_selected_accounts(self.WithdrawMoney_Account_TableWidget)
            if not selected_accounts:
                self.show_error_message("Please select at least one account.")
                return
        
            # Loop through selected accounts and update balances individually
            for account_number in selected_accounts:
                # Fetch the current balance from the database
                current_balance = self.fetch_balance(current_identifier, account_number)
        
                # Check if the withdrawal amount is greater than the current balance
                if amount > current_balance:
                    self.show_error_message("Insufficient balance for withdrawal.")
                    return

                # Calculate the new balance after withdrawal
                new_balance = current_balance - amount
       
                # Update the balance in the database
                self.update_balance(current_identifier, new_balance, account_number)
    
                # Update the balance label in the UI with proper comma formatting
                self.AvailableBalance_Label_2.setText("{:,.2f}".format(new_balance))

                # Record the transaction
                self.record_transaction("Withdrawal", amount, sender_account_number=account_number)

            # Show success message
            self.show_success_message("Withdrawal successful!")

            # Navigate to the AvailableBalance_Page_12
            self.stackedWidget_2.setCurrentIndex(12) 
            # Select the ViewBalance_PushButton
            self.on_button_clicked(self.ViewBalance_PushButton) 

        except Exception as e:
            # If an error occurs during the process, display an error message
            self.show_error_message(f"Error processing withdrawal: {str(e)}")

    def get_current_identifier(self, account_number=None):
        try:
            if account_number:
                # Query the database to retrieve the username associated with the provided account number
                query = '''
                SELECT BRD.Username
                FROM BAM.BAM_registration_data AS BRD
                INNER JOIN BAM.User_Account_Cards AS UAC 
                ON BRD.Username = UAC.Username
                WHERE UAC.Account_Number = %s
                ''' 
                self.cursor.execute(query, (account_number,))
                result = self.cursor.fetchone()

                if result:
                    return result[0]  # Return the username
                else:
                    raise ValueError("Username not found for the given account number")
            else: 
                # Retrieve entered usernames and email from the UI
                entered_username_login = self.LoginUsername_LineEdit_1.text()
                entered_username_forgot = self.ForgotPassword_Username_LineEdit.text()
                entered_email_forgot = self.ForgotUsername_Email_LineEdit.text()
                entered_username_registration = self.Registration_Username_LineEdit.text()

                # Determine the current identifier (username or email)
                entered_username = entered_username_login or entered_username_forgot or entered_username_registration
                entered_email = entered_email_forgot

                return entered_email if entered_email else entered_username
            
        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred in get_current_identifier:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return None   

    def fetch_balance(self, current_identifier, account_number):
        try:
            # Fetch the current balance from the database using the current identifier
            select_query = '''
            SELECT UAC.Balance
            FROM BAM.User_Account_Cards AS UAC
            INNER JOIN BAM.BAM_registration_data AS BRD 
            ON UAC.Username = BRD.Username
            WHERE (BRD.Username = %s OR BRD.Email = %s) AND UAC.Account_Number = %s
            '''
            self.cursor.execute(select_query, (current_identifier, current_identifier, account_number))
            result = self.cursor.fetchone()
            # If result is None, return 0 as balance
            if result is None:
                return 0
            
            # Extract balance from the result tuple
            current_balance = result[0]
            
            return current_balance
            
        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while fetching balance:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return 0  # Return 0 in case of an error

    def update_balance(self, current_identifier, new_balance, account_number):
        try:
            # Update the balance in the database for the current user
            update_query = '''
            UPDATE BAM.User_Account_Cards AS UAC
            SET Balance = %s
            FROM BAM.BAM_registration_data AS BRD 
            WHERE UAC.Username = BRD.Username 
            AND (BRD.Username = %s OR BRD.Email = %s)
            AND UAC.Account_Number = %s
            '''
            self.cursor.execute(update_query, (new_balance, current_identifier, current_identifier, account_number))
            self.conn.commit()
    
        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while updating balance:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return None

## Transfer_Page_8(CurrentIndex_8, stackedWidget_2)
    def transfer_amount(self):
        # Retrieve entered recipient name, account number, and transfer amount from UI
        recipient_name = self.RecipientName_LineEdit.text().strip()
        recipient_account_number = self.RecipientAccountNumber_LineEdit.text().strip()
        transfer_amount_text = self.TransferAmount_LineEdit.text().strip()

        # Check if any required field is empty
        if not recipient_name or not recipient_account_number or not transfer_amount_text:
            self.show_error_message("Please fill in all the required fields.")
            return

        # Check if transfer amount contains only digits
        if not transfer_amount_text.isdigit():
            self.show_error_message("Please enter only digits for the transfer amount.")
            return

        # Convert transfer amount to an integer
        transfer_amount = int(transfer_amount_text)

        # Check if transfer amount is within the specified range
        if not 100 <= transfer_amount <= 20000:
            self.show_error_message("The transfer amount should be between 100 and 20,000.")
            return

        # Get sender's information from the database
        sender_identifier = self.get_current_identifier()

        try:
            # Fetch sender's balance for each selected account
            selected_accounts = self.get_selected_accounts(self.Transfer_Account_TableWidget)
            for account_number in selected_accounts:
                sender_balance = self.fetch_balance(sender_identifier, account_number)
                # Check if sender has sufficient balance for the transfer
                if sender_balance < transfer_amount:
                    self.show_error_message("Insufficient balance for transfer.")
                    return
        except Exception as e:
            self.show_error_message(f"Error fetching sender's balance: {str(e)}")
            return

        try:
            # Loop through selected accounts and perform the transfer
            for account_number in selected_accounts:
                # Fetch the current balance from the database
                current_balance = self.fetch_balance(sender_identifier, account_number)

                # Deduct transfer amount from sender's balance
                sender_new_balance = current_balance - transfer_amount

                # Update the balance in the database for the sender
                self.update_balance(sender_identifier, sender_new_balance, account_number)

                # Fetch recipient's information from the database
                recipient_info = self.fetch_recipient_info(recipient_name, recipient_account_number)

                # Check if recipient exists and matches the provided account number
                if not recipient_info:
                    self.show_error_message("Recipient does not exist or provided account number is incorrect.")
                    return

                # Add transfer amount to recipient's balance
                recipient_new_balance = recipient_info['balance'] + transfer_amount

                # Update the balance in the database for the recipient
                self.update_balance_recipient(recipient_info['account_number'], recipient_new_balance)

                # Record the transaction for both sender and recipient
                self.record_transaction("Transfer", transfer_amount, sender_account_number=account_number, recipient_account_number=recipient_info['account_number'])

                # Update sender's balance label in UI
                self.AvailableBalance_Label_2.setText('{:,.2f}'.format(sender_new_balance))

            # Show success message
            self.show_success_message("Transfer successful!")

            # Navigate to the AvailableBalance_Page_12
            self.stackedWidget_2.setCurrentIndex(12)
            # Select the ViewBalance_PushButton
            self.on_button_clicked(self.ViewBalance_PushButton)

        except Exception as e:
            # If an error occurs during the process, display an error message
            self.show_error_message(f"Error processing transfer: {str(e)}")

    def fetch_recipient_info(self, recipient_name, recipient_account_number):
        try:
            # Fetch recipient's information from the database based on name and account number
            select_query = '''
            SELECT uac.Account_Number, uac.Balance
            FROM BAM.User_Account_Cards AS uac
            WHERE (uac.First_Name || ' ' || uac.Surname) = %s AND uac.Account_Number = %s
            '''
            self.cursor.execute(select_query, (recipient_name, recipient_account_number))
            recipient_info = self.cursor.fetchone()
            if recipient_info:
                return {'account_number': recipient_account_number, 'balance': recipient_info[1]}
        
            return None
        
        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while fetching recipient information:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return None
    
    def update_balance_recipient(self, account_number, new_balance):
        try:
            # Update the balance in the database for the given account number
            update_query = '''
            UPDATE BAM.User_Account_Cards
            SET Balance = %s
            WHERE Account_Number = %s
            '''
            self.cursor.execute(update_query, (new_balance, account_number))
            self.conn.commit()    

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while updating recipient's balance:", e)
            #  It might be necessary to raise the exception again or handle it differently based on the application's requirements    

## ViewTransaction_Page_10(CurrentIndex_10, stackedWidget_2)
    def record_transaction(self, transaction_type, amount, sender_account_number=None, recipient_account_number=None):
        try:
            # Get the current timestamp
            current_time = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")

            # Fetch the username based on the user_identifier (account number)
            sender_username = self.get_username_from_account_number(sender_account_number)

            # Fetch the recipient's username based on the recipient's account number
            recipient_username = self.get_username_from_account_number(recipient_account_number)

            # Fetch the previous balance for the sender
            sender_previous_balance = self.fetch_balance(sender_username, sender_account_number)


            # Construct the transaction record text
            if transaction_type == "Withdrawal":
                transaction_record = f"{current_time} - Withdrawn Amount: {amount}"
                # Insert the transaction record with the sender's account number as the user identifier
                self.insert_transaction_record(sender_account_number, sender_username, transaction_record, sender_previous_balance)
            elif transaction_type == "Deposit":
                # Construct transaction record for deposit
                transaction_record = f"{current_time} - Deposited Amount: {amount}"
                # Insert the transaction record with the sender's account number as the user identifier
                self.insert_transaction_record(sender_account_number, sender_username, transaction_record, sender_previous_balance)   
            elif transaction_type == "Transfer":
                # Fetch recipient's previous balance
                recipient_previous_balance = self.fetch_balance(recipient_username, recipient_account_number)

                # Fetch sender's first name and surname
                sender_info = self.fetch_user_info(sender_account_number)
                sender_name = f"{sender_info['first_name']} {sender_info['surname']}" if sender_info else "Unknown Sender"

                # Fetch recipient's first name and surname
                recipient_info = self.fetch_user_info(recipient_account_number)
                recipient_name = f"{recipient_info['first_name']} {recipient_info['surname']}" if recipient_info else "Unknown Recipient"

                # Construct transaction records for sender and recipient
                transaction_record_sender = f"{current_time} - Transfer Sent: {amount} to: {recipient_name} (account number: {recipient_account_number})"
                transaction_record_recipient = f"{current_time} - Transfer Received: {amount} from: {sender_name} (account number: {sender_account_number})"

                # Insert transaction records for sender and recipient
                self.insert_transaction_record(sender_account_number, sender_username, transaction_record_sender, sender_previous_balance)
                self.insert_transaction_record(recipient_account_number, recipient_username, transaction_record_recipient, recipient_previous_balance)
 
        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while recording transaction:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements

    def insert_transaction_record(self, user_identifier, username, transaction_record, previous_balance):
        try:
            # Insert the transaction record into the TransactionHistory table
            if user_identifier:
                insert_query = '''
                INSERT INTO BAM.TransactionHistory (user_identifier, username, transaction_record, previous_balance)
                VALUES (%s, %s, %s, %s)
                '''
                self.cursor.execute(insert_query, (user_identifier, username, transaction_record, previous_balance))
                self.conn.commit()

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while inserting transaction record:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements

    def get_username_from_account_number(self, account_number, context=None):
        try:
            # Query the database to retrieve the username associated with the provided account number
            query = '''
            SELECT BRD.Username
            FROM BAM.BAM_registration_data AS BRD
            INNER JOIN BAM.User_Account_Cards AS UAC 
            ON BRD.Username = UAC.Username
            WHERE UAC.Account_Number = %s
            ''' 
            self.cursor.execute(query, (account_number,))
            result = self.cursor.fetchone()

            if result:
                return result[0]  # Return the username
            elif context == "transfer":
                raise ValueError("Username not found for the given account number")
            else:
                return None

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred in get_username_from_account_number:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return None       

    def fetch_user_info(self, account_number):
        try:
            # Fetch user information from the database based on the account number
            select_query = '''
            SELECT uac.First_Name, uac.Surname, uac.Account_Number
            FROM BAM.User_Account_Cards AS uac
            WHERE uac.Account_Number = %s
            '''
            self.cursor.execute(select_query, (account_number,))
            user_info = self.cursor.fetchone()
            if user_info:
                return {'first_name': user_info[0], 'surname': user_info[1], 'account_number': user_info[2]}
            return None

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while fetching user information:", e)
            return None
      
## ProfileDetails_Page_13(CurrentIndex_13, stackedWidget_2)
    def update_user_details_ui(self, user_details):
        """
        Update UI components with user details.
        """

        try:
            if user_details:
                account_number, username, password, first_name, surname, date_of_birth, email, gender, account_type, confirm_pin, street, city, state, country, security_question, answer = user_details

                # Set welcome message
                self.User_First_Surname_Name_Label.setText(f"Welcome\n {first_name} {surname}")

                # Set text for Account_Profile_PushButton
                initials = first_name[0] + surname[0]
                self.Account_Profile_PushButton.setText(initials.upper()) 

                # Set username, password, and first name etc in their respective labels
                # Account Details
                self.AccountDetails_AccountNumber_Label_2.setText(str(account_number)) 
                self.AccountDetails_FirstName_Label_2.setText(first_name) 
                self.AccountDetails_Surname_Label_2.setText(surname)
                self.AccountDetails_DateOfBirth_Label_2.setText(date_of_birth.strftime('%Y-%m-%d')) 
                self.AccountDetails_Email_Label_2.setText(email) 
                self.AccountDetails_Gender_Label_2.setText(gender) 
                self.AccountDetails_AccountType_Label_2.setText(account_type) 
                self.AccountDetails_Street_Label_2.setText(street) 
                self.AccountDetails_City_Label_2.setText(city) 
                self.AccountDetails_State_Label_2.setText(state) 
                self.AccountDetails_Country_Label_2.setText(country) 
                # Profile Details
                self.ProfileDetails_Username_Label_2.setText(username) 
                self.ProfileDetails_Password_Label_2.setText(password) 
                self.ProfileDetails_Email_Label_2.setText(email) 
                self.ProfileDetails_ProfilePin_Label_2.setText(confirm_pin) 
                self.ProfileDetails_SecurityQuestion_Label_2.setText(security_question) 
                self.ProfileDetails_Answer_Label_2.setText(answer) 

        except Exception as e:
            # Handle any exceptions that occur during the UI update process
            print("Error occurred while updating user details UI:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements   

## AccountDetails_Page_2(CurrentIndex_2, stackedWidget_2)
    def update_account_details_ui(self, account_details):
        """
        Update UI components with account details.
        """
        try:
            if account_details:
                account_number, first_name, surname, date_of_birth, gender, account_type, street, city, state, country = account_details
               
                # Set AccountNumber, FirstName etc in their respective labels
                # Account Details
                self.AccountDetails_AccountNumber_Label_2.setText(str(account_number)) 
                self.AccountDetails_FirstName_Label_2.setText(first_name) 
                self.AccountDetails_Surname_Label_2.setText(surname)
                self.AccountDetails_DateOfBirth_Label_2.setText(date_of_birth.strftime('%Y-%m-%d')) 
                self.AccountDetails_Gender_Label_2.setText(gender) 
                self.AccountDetails_AccountType_Label_2.setText(account_type) 
                self.AccountDetails_Street_Label_2.setText(street) 
                self.AccountDetails_City_Label_2.setText(city) 
                self.AccountDetails_State_Label_2.setText(state) 
                self.AccountDetails_Country_Label_2.setText(country) 
        except Exception as e:
            print("Error occurred while updating account details UI:", e)  

    def get_account_details(self, account_number):
        try:
            # Query to fetch account details from the database using account number
            select_query = "SELECT Account_Number, First_Name, Surname, Date_Of_Birth, Gender, Account_Type, Street, City, State, Country FROM BAM.User_Account_Cards WHERE Account_Number = %s"
            self.cursor.execute(select_query, (account_number,))
            account_details = self.cursor.fetchone()
            return account_details 
        except Exception as e:
            print("Error occurred while fetching account details:", e)
            return None               
           
## Login_Page_1(CurrentIndex_1, stackedWidget)
    def handle_login(self):
        # Retrieve entered username and password
        entered_username = self.LoginUsername_LineEdit_1.text()
        entered_password = self.Login_Password_LineEdit_2.text()

        # Check if both username and password are provided
        if not entered_username and not entered_password:
             self.show_error_message("Please enter both username and password.")
        elif not entered_username:
             self.show_error_message("Please enter username.")
        elif not entered_password:
             self.show_error_message("Please enter password.")
        else:
             # Check if entered credentials are valid
             result = self.check_credentials(entered_username, entered_password)

             # Display appropriate error messages
             if result == "both":
                self.show_error_message("Invalid username and password")
             elif result == "username":
                self.show_error_message("Invalid username")
             elif result == "password":
                self.show_error_message("Invalid password")
             else:
                # Credentials are valid, switch to MainAccount_Page_5(CurrentIndex_5, stackedWidget)
                self.stackedWidget.setCurrentIndex(5)  # Index 5 is MainAccount_Page_5

                # Fetch user details and update Label_41(CurrentIndex_5, stackedWidget)
                user_details = self.get_user_details(entered_username)
                self.update_user_details_ui(user_details)

                self.reset_button_style()

                # Define other_tableWidgets as a list containing all table widgets
                other_tableWidgets = [
                    self.AccountDetails_Account_TableWidget,
                    self.DepositMoney_Account_TableWidget,
                    self.WithdrawMoney_Account_TableWidget,
                    self.Transfer_Account_TableWidget,
                    self.ViewTransaction_Account_TableWidget,
                    self.ViewBalance_Account_TableWidget,
                    self.RequestDebitCard_Account_TableWidget,
                    self.ATMPinGeneration_Account_TableWidget,
                    self.ATMCardLimitChange_Account_TableWidget,
                    self.BlockATMCard_Account_TableWidget,
                    self.ViewLinkedATMCard_Account_TableWidget,
                    self.UnblockATMCard_Account_TableWidget,
                    self.AddAccount_Account_TableWidget,
                    self.CloseAccount_Account_TableWidget
                ]

                # Populate the accounts table for each tableWidget
                for tableWidget in other_tableWidgets:
                    self.populate_accounts_table(entered_username, tableWidget, other_tableWidgets)

                # Fetch ATM card number for the logged-in user
                atm_card_number = self.get_current_atm_card_number()

                # Fetch and display ATM card limit using ATM card number
                atm_card_limit = self.fetch_atm_card_limit(atm_card_number)
                if atm_card_limit is not None:
                    self.YourCurrentATMLimit_Label_2.setText(str(atm_card_limit))

                # Set the current index to 0 (WelcomeDelighted_Page_0) after login
                self.stackedWidget_2.setCurrentIndex(0)     

    # Method to fetch ATM card limit for the logged-in user using ATM card number
    def fetch_atm_card_limit(self, atm_card_number):
        try:
            # Query to fetch ATM card limit from the database using ATM card number
            select_query = "SELECT ATM_Limit FROM BAM.User_Account_Cards WHERE ATM_Card_Number = %s"
            self.cursor.execute(select_query, (atm_card_number,))
            atm_card_limit = self.cursor.fetchone()
            if atm_card_limit:
                return atm_card_limit[0]  # Return ATM card limit
            else:
                return None  # Return None if ATM card limit is not found
            
        except Exception as e:
            # Handle any exceptions that occur during the database query execution
            print("Error occurred while fetching ATM card limit:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return None  # Return None to indicate that an error occurred   
                
    def get_user_details(self, identifier):
        try:
            # Database query to fetch user details by either username or email
            select_query = '''
            SELECT UAC.Account_Number, BRD.Username, BRD.Password, BRD.First_Name, BRD.Surname, BRD.Date_Of_Birth, BRD.Email, 
                   BRD.Gender, UAC.Account_Type, BRD.Confirm_Pin, BRD.Street, BRD.City, BRD.State, BRD.Country, 
                   BRD.Security_Question, BRD.Answer
            FROM BAM.BAM_registration_data AS BRD
            INNER JOIN BAM.User_Account_Cards AS UAC 
            ON BRD. Username= UAC.Username
            WHERE BRD.Username = %s OR BRD.Email = %s
            '''
            self.cursor.execute(select_query, (identifier, identifier))
            user_details = self.cursor.fetchone()

            return user_details  
        
        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while fetching user details:", e)
            # Log the error or display a message to the user
            # Depending on the application's requirements
            return None

    def check_credentials(self, username, password):
        try:
            # Database verification logic       
            select_query = "SELECT * FROM BAM.BAM_registration_data WHERE Username = %s AND Password = %s"
            self.cursor.execute(select_query, (username, password))

            existing_data = self.cursor.fetchone()

            if existing_data is not None:
                return "valid"
            else:
                # Check separately for incorrect username and password
                username_exists = self.username_exists(username)
                password_matches = self.password_matches(username, password)

                if not username_exists and not password_matches:
                    return "both"
                elif not username_exists:
                    return "username"
                elif not password_matches:
                    return "password"
                else:
                    return "invalid"
                
        except Exception as e:
            # Handle any exceptions that occur during the database query execution
            print("Error occurred while checking credentials:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return "error"  # Return an error status to indicate that an error occurred       

    def username_exists(self, username):
        try:
            # Database verification logic
            select_query = "SELECT * FROM BAM.BAM_registration_data WHERE Username = %s"
            self.cursor.execute(select_query, (username,))
            existing_data = self.cursor.fetchone()
            return existing_data is not None
        
        except Exception as e:
            # Handle any exceptions that occur during the database query execution
            print("Error occurred while checking if username exists:", e)
            #  It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return False  # Return False to indicate an error occurred during the query execution

    def password_matches(self, username, password): 
        try:
            # Database verification logic
            select_query = "SELECT * FROM BAM.BAM_registration_data WHERE Username = %s AND Password = %s"
            self.cursor.execute(select_query, (username, password))
            existing_data = self.cursor.fetchone()
            return existing_data is not None
        
        except Exception as e:
            # Handle any exceptions that occur during the database query execution
            print("Error occurred while checking if password matches:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return False  # Return False to indicate an error occurred during the query execution
    
## ForgotPassword_Page_3(CurrentIndex_3, stackedWidget)
    def update_password(self):
        # Get data from UI
        username = self.ForgotPassword_Username_LineEdit.text()
        pin_number = self.ForgotPassword_ProfilePin_LineEdit.text()
        confirm_pin = self.ForgotPassword_ConfirmProfilePin_LineEdit.text()
        email = self.ForgotPassword_Email_LineEdit.text()
        security_question = self.ForgotPassword_SecurityQuestion_ComboBox.currentText()
        answer = self.ForgotPassword_Answer_LineEdit.text()
        new_password = self.ForgotPassword_NewPassword_LineEdit.text()
        confirm_password = self.ForgotPassword_ConfirmNewPassword_LineEdit.text()

        # Check if any required field is empty
        required_fields = [username, pin_number, confirm_pin, email, security_question, answer, new_password, confirm_password]

        if any(not field.strip() for field in required_fields):
            # Display an error message
            self.show_error_message("Please fill in all the required fields.")
        else:
            try:
                # Check if entered credentials are valid
                if not self.validate_forgot_password_credentials(username, pin_number, confirm_pin, email, security_question, answer):
                    return

                # Check if new password and confirm password match
                if new_password != confirm_password:
                    self.show_error_message("New Password and Confirm Password do not match.")
                    return

                # Check if the password is at least four characters long
                if len(new_password) < 4:
                    self.show_error_message("Password should be at least four characters long.")
                    return

                # Update password in the database
                update_query = "UPDATE BAM.BAM_registration_data SET Password = %s, Confirm_Password = %s WHERE Username = %s"
                self.cursor.execute(update_query, (new_password, new_password, username))
                self.conn.commit()

                # Display a success message
                self.show_success_message("Password change successful!")

                # Switch to MainAccount_Page_5(CurrentIndex_5, stackedWidget)
                self.stackedWidget.setCurrentIndex(5)
                # Switch to a specific page "ProfileDetails_Page_13" (CurrentIndex_13, stackedWidget_2)
                self.stackedWidget_2.setCurrentIndex(13)
                # Select the ManageProfile_PushButton
                self.on_button_clicked(self.ManageProfile_PushButton) 

                # Fetch user details and update UI
                user_details = self.get_user_details(username)
                self.update_user_details_ui(user_details)

                # Reset UI components to their initial state
                self.reset_ui()

                # Define other_tableWidgets as a list containing all table widgets
                other_tableWidgets = [
                    self.AccountDetails_Account_TableWidget,
                    self.DepositMoney_Account_TableWidget,
                    self.WithdrawMoney_Account_TableWidget,
                    self.Transfer_Account_TableWidget,
                    self.ViewTransaction_Account_TableWidget,
                    self.ViewBalance_Account_TableWidget,
                    self.RequestDebitCard_Account_TableWidget,
                    self.ATMPinGeneration_Account_TableWidget,
                    self.ATMCardLimitChange_Account_TableWidget,
                    self.BlockATMCard_Account_TableWidget,
                    self.ViewLinkedATMCard_Account_TableWidget,
                    self.UnblockATMCard_Account_TableWidget,
                    self.AddAccount_Account_TableWidget,
                    self.CloseAccount_Account_TableWidget
                ]

                # Populate the accounts table for each tableWidget
                for tableWidget in other_tableWidgets:
                    self.populate_accounts_table(username, tableWidget, other_tableWidgets)

                # Fetch ATM card number for the logged-in user
                atm_card_number = self.get_current_atm_card_number()

                # Fetch and display ATM card limit using ATM card number
                atm_card_limit = self.fetch_atm_card_limit(atm_card_number)
                if atm_card_limit is not None:
                    self.YourCurrentATMLimit_Label_2.setText(str(atm_card_limit))

            except Exception as e:
                # If an error occurs during the password update, display an error message
                self.show_error_message(f"Error updating password: {str(e)}")        

    def validate_forgot_password_credentials(self, username, pin_number, confirm_pin, email, security_question, answer):
        try:
            # Validate the entered credentials
            if not self.username_exists(username):
                self.show_error_message("Invalid username.")
                return False

            if not self.pin_number_matches(username, pin_number):
                self.show_error_message("Invalid PIN number.")
                return False

            if confirm_pin != pin_number:
                self.show_error_message("Confirm PIN does not match the entered PIN.")
                return False

            if not self.email_matches(username, email):
                self.show_error_message("Invalid email.")
                return False

            if not self.security_question_matches(username, security_question, answer):
                self.show_error_message("Invalid security question or answer.")
                return False

            return True
        
        except Exception as e:
            # Handle any exceptions that occur during database queries
            print("Error occurred during credential validation:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return False  # Return False to indicate an error occurred

    def pin_number_matches(self, username, pin_number):
        try:
            # Database verification logic for PIN number
            select_query = "SELECT * FROM BAM.BAM_registration_data WHERE Username = %s AND Confirm_Pin = %s"
            self.cursor.execute(select_query, (username, pin_number))
            existing_data = self.cursor.fetchone()
            return existing_data is not None
        
        except Exception as e:
            # Handle any exceptions that occur during the database query
            print("Error occurred during PIN number verification:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return False  # Return False to indicate an error occurred

    def email_matches(self, username, email):
        try:
            # Database verification logic for email
            select_query = "SELECT * FROM BAM.BAM_registration_data WHERE Username = %s AND Email = %s"
            self.cursor.execute(select_query, (username, email))
            existing_data = self.cursor.fetchone()
            return existing_data is not None
        
        except Exception as e:
            # Handle any exceptions that occur during the database query
            print("Error occurred during email verification:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return False  # Return False to indicate an error occurred

    def security_question_matches(self, username, security_question, answer):
        try:
            # Database verification logic for security question and answer
            select_query = "SELECT * FROM BAM.BAM_registration_data WHERE Username = %s AND Security_Question = %s AND Answer = %s"
            self.cursor.execute(select_query, (username, security_question, answer))
            existing_data = self.cursor.fetchone()
            return existing_data is not None
        
        except Exception as e:
            # Handle any exceptions that occur during the database query
            print("Error occurred during security question verification:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return False  # Return False to indicate an error occurred
   
## ChangeProfilePassword_Page_14(CurrentIndex_14, stackedWidget_2)
    def change_password(self):
        # Get current identifier (username or email)
        current_identifier = self.get_current_identifier()

        # Get data from UI
        current_password = self.ChangePassword_CurrentPassword_LineEdit.text()
        new_password = self.ChangePassword_NewPassword_LineEdit.text()
        confirm_password = self.ChangePassword_ConfirmPassword_LineEdit.text()

        # Check if any required field is empty
        required_fields = [current_password, new_password, confirm_password]

        if any(not field.strip() for field in required_fields):
            # Display an error message
            self.show_error_message("Please fill in all the required fields.")
        else:
            try:
                # Verify if the current password matches the one stored in the database
                if not self.validate_current_password(current_identifier, current_password):
                    self.show_error_message("Current password is incorrect.")
                    return

                # Check if new password and confirm password match
                if new_password != confirm_password:
                    self.show_error_message("New Password and Confirm Password do not match.")
                    return

                # Check if the password is at least four characters long
                if len(new_password) < 4:
                    self.show_error_message("Password should be at least four characters long.")
                    return
                
                # Check if the new password matches the existing password in the database
                if self.password_exists(current_identifier, new_password):
                    self.show_error_message("The new password should not match the existing password. Please choose a different password.")
                    return   

                # Update password in the database
                update_query = "UPDATE BAM.BAM_registration_data SET Password = %s, Confirm_Password = %s WHERE Username = %s OR Email = %s"
                self.cursor.execute(update_query, (new_password, new_password, current_identifier, current_identifier))
                self.conn.commit()

                # Update the password displayed in UI
                self.update_password_in_ui(current_identifier, new_password)

                # Display a success message
                self.show_success_message("Password change successful!")

                # Set the current index to 13(ProfileDetails_Page_13) after login
                self.stackedWidget_2.setCurrentIndex(13)
                # Select the ManageProfile_PushButton
                self.on_button_clicked(self.ManageProfile_PushButton) 

            except Exception as e:
                # If an error occurs during the password update, display an error message
                self.show_error_message(f"Error changing password: {str(e)}") 

    def validate_current_password(self, username_or_email, current_password):
        try:
            # Query the database to fetch the stored password for the given username or email
            select_query = "SELECT Password FROM BAM.BAM_registration_data WHERE Username = %s OR Email = %s"
            self.cursor.execute(select_query, (username_or_email, username_or_email))
            stored_password = self.cursor.fetchone()

            if stored_password is None:
                # If no matching user is found, return False
                return False
            else:
                # If a matching user is found, compare the stored password with the current password
                return stored_password[0] == current_password 
            
        except Exception as e:
            # Handle any exceptions that occur during the database query
            print("Error occurred during password validation:", e)
            # It might be necessary log the error or display a message to the user
            # Depending on the application's requirements
            return False  # Return False to indicate an error occurred   
        
    def password_exists(self, username_or_email, password):
        try:
            # Query the database to check if the password exists
            select_query = "SELECT COUNT(*) FROM BAM.BAM_registration_data WHERE (Username = %s OR Email = %s) AND Password = %s"
            self.cursor.execute(select_query, (username_or_email, username_or_email, password))
            password_count = self.cursor.fetchone()[0]

            return password_count > 0
            
        except Exception as e:
            # Handle any exceptions that occur during the database query
            print("Error occurred while checking if password exists:", e)
            # It might be necessary log the error or display a message to the user
            # Depending on the application's requirements
            return False  # Return False to indicate an error occurred or the password doesn't exist    

    # ProfileDetails_Page_13(CurrentIndex_13, stackedWidget_2)
    def update_password_in_ui(self, username_or_email, new_password):
        try:
            # Fetch user details from the database
            user_details = self.get_user_details(username_or_email)

            if user_details:
                account_number, username, _, first_name, surname, _, email, gender, account_type, confirm_pin, street, city, state, country, security_question, answer = user_details

                # Profile Details
                self.ProfileDetails_Username_Label_2.setText(username) 
                self.ProfileDetails_Password_Label_2.setText(new_password)  
                self.ProfileDetails_Email_Label_2.setText(email) 
                self.ProfileDetails_ProfilePin_Label_2.setText(confirm_pin) 
                self.ProfileDetails_SecurityQuestion_Label_2.setText(security_question) 
                self.ProfileDetails_Answer_Label_2.setText(answer) 
            else:
                # Handle the case when user details are not found
                print("User details not found.")
                #  It might be necessary log the error or display a message to the user
                # Depending on the application's requirements   

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while updating password in UI:", e)
            #  It might be necessary log the error or display a message to the user
            # Depending on the application's requirements       

## ChangeProfilePin_Page_15(CurrentIndex_15, stackedWidget_2)
    def change_pin(self):
        # Get current identifier (username or email)
        current_identifier = self.get_current_identifier()

        # Get data from UI
        current_pin = self.ChangeProfilePin_CurrentPin_LineEdit.text()
        new_pin = self.ChangeProfilePin_NewPin_LineEdit.text()
        confirm_pin = self.ChangeProfilePin_ConfirmPin_LineEdit.text()

        # Check if any required field is empty
        required_fields = [current_pin, new_pin, confirm_pin]

        if any(not field.strip() for field in required_fields):
            # Display an error message
            self.show_error_message("Please fill in all the required fields.")
        else:
            try:
                # Verify if the current pin matches the one stored in the database
                if not self.validate_current_pin(current_identifier, current_pin):
                    self.show_error_message("Current PIN is incorrect.")
                    return

                # Check if new pin and confirm pin match
                if new_pin != confirm_pin:
                    self.show_error_message("New PIN and Confirm PIN do not match.")
                    return
                
                # Check if the pin is exactly four digits long and consists only of digits
                if not (new_pin.isdigit() and confirm_pin.isdigit() and len(new_pin) == len(confirm_pin) == 4):
                    self.show_error_message("PIN should contain exactly four numeric digits.")
                    return
                
                # Check if the new pin already exists in the database
                if self.pin_exists(current_identifier, new_pin):
                    self.show_error_message("New PIN already exists. Please choose a different PIN.")
                    return

                # Update pin in the database
                update_query = "UPDATE BAM.BAM_registration_data SET Create_Pin = %s, Confirm_Pin = %s WHERE Username = %s OR Email = %s"
                self.cursor.execute(update_query, (new_pin, confirm_pin, current_identifier, current_identifier))
                self.conn.commit()

                # Update the pin displayed in UI
                self.update_pin_in_ui(current_identifier, new_pin)

                # Display a success message for pin change
                self.show_success_message("Pin change successful!")

                # Switch to ProfileDetails_Page_13 (CurrentIndex_13, stackedWidget_2)
                self.stackedWidget_2.setCurrentIndex(13)
                # Select the ManageProfile_PushButton
                self.on_button_clicked(self.ManageProfile_PushButton) 

            except Exception as e:
                # If an error occurs during the pin update, display an error message
                self.show_error_message(f"Error changing PIN: {str(e)}")

    def validate_current_pin(self, username_or_email, current_pin):
        try:
            # Query the database to fetch the stored pin for the given username or email
            select_query = "SELECT Confirm_Pin FROM BAM.BAM_registration_data WHERE Username = %s OR Email = %s"
            self.cursor.execute(select_query, (username_or_email, username_or_email))
            stored_pin = self.cursor.fetchone()

            if stored_pin is None:
                # If no matching user is found, return False
                return False
            else:
                # If a matching user is found, compare the stored pin with the current pin
                return stored_pin[0] == current_pin 
            
        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while validating current PIN:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return False  # Return False to indicate an error occurred 

    def pin_exists(self, username_or_email, pin):
        try:
            # Query the database to check if the pin exists for the given username or email
            select_query = "SELECT COUNT(*) FROM BAM.BAM_registration_data WHERE (Username = %s OR Email = %s) AND Create_Pin = %s"
            self.cursor.execute(select_query, (username_or_email, username_or_email, pin))
            pin_count = self.cursor.fetchone()[0]

            return pin_count > 0
            
        except Exception as e:
            # Handle any exceptions that occur during the database query
            print("Error occurred while checking if PIN exists:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return False  # Return False to indicate an error occurred or the PIN doesn't exist     
        
    def update_pin_in_ui(self, username_or_email, new_pin):
        try:
            # Fetch user details from the database
            user_details = self.get_user_details(username_or_email)

            if user_details:
                account_number, username, password, first_name, surname, _, email, gender, account_type, _, street, city, state, country, security_question, answer = user_details

                # Profile Details
                self.ProfileDetails_Username_Label_2.setText(username) 
                self.ProfileDetails_Password_Label_2.setText(password) 
                self.ProfileDetails_Email_Label_2.setText(email) 
                self.ProfileDetails_ProfilePin_Label_2.setText(new_pin) 
                self.ProfileDetails_SecurityQuestion_Label_2.setText(security_question) 
                self.ProfileDetails_Answer_Label_2.setText(answer)  

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while updating PIN in UI:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements   

    # ProfileDetails_Page_13(CurrentIndex_13, stackedWidget_2)
    def update_pin_in_ui(self, username_or_email, new_pin):
        try:
            # Fetch user details from the database
            user_details = self.get_user_details(username_or_email)

            if user_details:
                account_number, username, password, first_name, surname, _, email, gender, account_type, _, street, city, state, country, security_question, answer = user_details

                # Profile Details
                self.ProfileDetails_Username_Label_2.setText(username) 
                self.ProfileDetails_Password_Label_2.setText(password) 
                self.ProfileDetails_Email_Label_2.setText(email) 
                self.ProfileDetails_ProfilePin_Label_2.setText(new_pin) 
                self.ProfileDetails_SecurityQuestion_Label_2.setText(security_question) 
                self.ProfileDetails_Answer_Label_2.setText(answer)  

        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred while updating PIN in UI:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements                     

## ForgotUsername_Page_2(CurrentIndex_2, stackedWidget)
    def handle_forgot_username(self):
        # Retrieve data from UI
        pin_number = self.ForgotUsername_ProfilePin_LineEdit.text()
        confirm_pin = self.ForgotUsername_ConfirmProfilePin_LineEdit.text()
        email = self.ForgotUsername_Email_LineEdit.text()
        security_question = self.ForgotUsername_SecurityQuestion_ComboBox.currentText()
        answer = self.ForgotUsername_Answer_LineEdit.text() 

        # Check for empty fields
        required_fields = [pin_number, confirm_pin, email, security_question, answer]
        if any(not field.strip() for field in required_fields):
            self.show_error_message("Please fill in all the required fields.")
            return

        try:
            # Validate entered credentials
            if not self.validate_forgot_username_credentials(pin_number, confirm_pin, email, security_question, answer):
                return
            
            # Fetch user details and update UI
            user_details = self.get_user_details(email)
            if user_details:
                username = user_details[1]  # Username is the second item in the user_details tuple
                self.update_user_details_ui(user_details)
          
            # Display success message
            self.show_success_message("Forgot Username process successful!")

            # Switch to MainAccount_Page_5(CurrentIndex_5, stackedWidget)
            self.stackedWidget.setCurrentIndex(5)
            # Switch to a specific page "ProfileDetails_Page_13" (CurrentIndex_13, stackedWidget_2)
            self.stackedWidget_2.setCurrentIndex(13)
            # Select the ManageProfile_PushButton
            self.on_button_clicked(self.ManageProfile_PushButton) 

            # Fetch user details and update UI
            user_details = self.get_user_details(email)
            self.update_user_details_ui(user_details)

            # Reset UI components to their initial state
            self.reset_ui()

            # Define other_tableWidgets as a list containing all table widgets
            other_tableWidgets = [
                self.AccountDetails_Account_TableWidget,
                self.DepositMoney_Account_TableWidget,
                self.WithdrawMoney_Account_TableWidget,
                self.Transfer_Account_TableWidget,
                self.ViewTransaction_Account_TableWidget,
                self.ViewBalance_Account_TableWidget,
                self.RequestDebitCard_Account_TableWidget,
                self.ATMPinGeneration_Account_TableWidget,
                self.ATMCardLimitChange_Account_TableWidget,
                self.BlockATMCard_Account_TableWidget,
                self.ViewLinkedATMCard_Account_TableWidget,
                self.UnblockATMCard_Account_TableWidget,
                self.AddAccount_Account_TableWidget,
                self.CloseAccount_Account_TableWidget
            ]

            # Populate the accounts table for each tableWidget
            for tableWidget in other_tableWidgets:
                self.populate_accounts_table(username, tableWidget, other_tableWidgets)

            # Fetch ATM card number for the logged-in user
            atm_card_number = self.get_current_atm_card_number()

            # Fetch and display ATM card limit using ATM card number
            atm_card_limit = self.fetch_atm_card_limit(atm_card_number)
            if atm_card_limit is not None:
                self.YourCurrentATMLimit_Label_2.setText(str(atm_card_limit))  
             
        except Exception as e:
            # If an error occurs, display an error message
            self.show_error_message(f"Error handling forgot username: {str(e)}")   

    def validate_forgot_username_credentials(self, pin_number, confirm_pin, email, security_question, answer):
        try:
            # Validate the entered credentials
            if not self.email_matches_for_forgot_username(email):
                self.show_error_message("Invalid email.")
                return False

            if not self.pin_number_matches_for_forgot_username(pin_number):
                self.show_error_message("Invalid PIN number.")
                return False

            if confirm_pin != pin_number:
                self.show_error_message("Confirm PIN does not match the entered PIN.")
                return False

            if not self.security_question_matches_for_forgot_username(security_question, answer, email):
                self.show_error_message("Invalid security question or answer.")
                return False

            return True
        
        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred during username forgot password validation:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return False  # Return False to indicate validation failure

    def email_matches_for_forgot_username(self, email):
        try:
            # Database verification logic for email
            select_query = "SELECT * FROM BAM.BAM_registration_data WHERE Email = %s"
            self.cursor.execute(select_query, (email,))
            existing_data = self.cursor.fetchone()
            return existing_data is not None
        
        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred during email verification:", e)
            # It might be necessary log the error or display a message to the user
            # Depending on the application's requirements
            return False  # Return False to indicate email matching failure

    def pin_number_matches_for_forgot_username(self, pin_number):
        try:
            # Database verification logic for PIN number
            select_query = "SELECT * FROM BAM.BAM_registration_data WHERE Confirm_Pin = %s"
            self.cursor.execute(select_query, (pin_number,))
            existing_data = self.cursor.fetchone()
            return existing_data is not None
        
        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred during PIN number verification:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return False  # Return False to indicate PIN number matching failure

    def security_question_matches_for_forgot_username(self, security_question, answer, email):
        try:
            # Database verification logic for security question and answer
            select_query = "SELECT * FROM BAM.BAM_registration_data WHERE Security_Question = %s AND Answer = %s AND Email = %s"
            self.cursor.execute(select_query, (security_question, answer, email))
            existing_data = self.cursor.fetchone()
            return existing_data is not None
        
        except Exception as e:
            # Handle any exceptions that occur during the process
            print("Error occurred during security question and answer verification:", e)
            # It might be necessary to log the error or display a message to the user
            # Depending on the application's requirements
            return False  # Return False to indicate security question and answer matching failure
    
## It sets up button styling effects     
    # on_button_clicked method handles button clicks and styling
    # This method is responsible for handling button clicks and updating button styles accordingly.
    def on_button_clicked(self, button):
        # Reset background color, hover color, and font color of previously pressed button
        if self.current_pressed_button and self.current_pressed_button != button:
            self.current_pressed_button.setStyleSheet(
                "QPushButton\n"
                "{\n"
                "font: 600 12pt \"Segoe UI\"; \n"
                "    color: rgb(255, 255, 255);\n"
                "\n"
                "border-radius:10px;\n"
                "}\n"
                "QPushButton:hover, QPushButton:pressed\n"
                "{\n"
                "    background-color: rgb(0, 105, 115);\n"
                "}"
            )
            
        # Set background color and font color of currently pressed button
        button.setStyleSheet(
            "background-color: rgb(0, 81, 104); color: rgb(255, 255, 255); font: 600 12pt \"Segoe UI\"; border-radius: 10px;"
        )
        self.current_pressed_button = button  

    def connect_buttons_to_methods(self):
        # Connect each button's clicked signal to its corresponding method
        self.ViewAccountDetails_PushButton.clicked.connect(self.reset_ui)
        self.DepositMoney_PushButton.clicked.connect(self.reset_ui)
        self.WithdrawMoney_PushButton.clicked.connect(self.reset_ui)
        self.TransferMoney_PushButton.clicked.connect(self.reset_ui)
        self.ViewTransaction_PushButton.clicked.connect(self.reset_ui)
        self.ViewBalance_PushButton.clicked.connect(self.reset_ui)
        self.ATMCardServices_PushButton.clicked.connect(self.reset_ui)
        self.AddAccount_PushButton_1.clicked.connect(self.reset_ui)
        self.CloseAccount_PushButton.clicked.connect(self.reset_ui)  
        self.ManageProfile_PushButton.clicked.connect(self.reset_ui)  

        self.ChangeProfilePassword_PushButton.clicked.connect(self.reset_ui)  
        self.ChangeProfilePin_PushButton.clicked.connect(self.reset_ui)  
        self.RequestDebitCard_PushButton.clicked.connect(self.reset_ui)  
        self.ATMPinGeneration_PushButton.clicked.connect(self.reset_ui)  
        self.ATMCardLimitChange_PushButton.clicked.connect(self.reset_ui)  
        self.BlockATMCard_PushButton.clicked.connect(self.reset_ui)  
        self.ViewLinkedATMCardPushButton.clicked.connect(self.reset_ui)  
        self.UnblockATMCard_PushButton.clicked.connect(self.reset_ui)  
        self.SelectTheATMCardYouWishToBlockPushButton_1.clicked.connect(self.reset_ui)  
        self.AlreadyBlockedInactiveATMCard_PushButton.clicked.connect(self.reset_ui)  
        self.ViewTheActiveATMCardNumber_PushButton.clicked.connect(self.reset_ui)  
        self.AlreadyBlockedInactiveATMCardNumber_PushButton.clicked.connect(self.reset_ui)  

## Logout method, MainAccount_Page_5(CurrentIndex_5, stackedWidget_2)
    def logout(self):
        # Reset UI components to their initial state
        self.reset_ui()

        # Navigate the user back to the login screen or initial page
        self.stackedWidget.setCurrentIndex(0)  # Index 0(stackedWidget) is the Welcome Page

        # Clear the contents of the table widgets
        self.clear_table_widgets()

        # Hide the dropdown menu
        self.menu.hide()  

        # Reset button styles to default
        self.reset_button_style()

        self.clear_login_fields() 

        # Show a success message
        self.show_success_message("Logout Successful")  

    # Method to reset UI components
    def reset_ui(self):
        # Reset UI components to their initial state
        # clear input fields, hide certain widgets, etc.
        # ForgotUsername
        self.ForgotUsername_ProfilePin_LineEdit.clear()
        self.ForgotUsername_ConfirmProfilePin_LineEdit.clear()
        self.ForgotUsername_Answer_LineEdit.clear()
        # ForgotPassword
        self.ForgotPassword_ProfilePin_LineEdit.clear()
        self.ForgotPassword_ConfirmProfilePin_LineEdit.clear()
        self.ForgotPassword_Email_LineEdit.clear()
        self.ForgotPassword_Answer_LineEdit.clear()
        self.ForgotPassword_NewPassword_LineEdit.clear()
        self.ForgotPassword_ConfirmNewPassword_LineEdit.clear()
        # Registration
        self.Registration_Password_LineEdit.clear()
        self.Registration_ConfirmPassword_LineEdit.clear()
        self.Registration_FirstName_LineEdit.clear()
        self.Registration_Surname_LineEdit.clear()
        self.Registration_Email_LineEdit.clear()
        self.Registration_CreateProfilePin_LineEdit.clear()
        self.Registration_ConfirmProfilePin_LineEdit.clear()
        self.Registration_Street_LineEdit.clear()
        self.Registration_City_LineEdit.clear()
        self.Registration_State_LineEdit.clear()
        self.Registration_Country_LineEdit.clear()
        self.Registration_Answer_LineEdit.clear()
        # stackedWidget_2
        self.DepositAmount_LineEdit.clear()
        self.WithdrawAmount_LineEdit.clear()
        self.RecipientName_LineEdit.clear()
        self.RecipientAccountNumber_LineEdit.clear()
        self.TransferAmount_LineEdit.clear()
        self.ChangePassword_CurrentPassword_LineEdit.clear()
        self.ChangePassword_NewPassword_LineEdit.clear()
        self.ChangePassword_ConfirmPassword_LineEdit.clear() 
        self.ChangeProfilePin_CurrentPin_LineEdit.clear() 
        self.ChangeProfilePin_NewPin_LineEdit.clear() 
        self.ChangeProfilePin_ConfirmPin_LineEdit.clear()
        self.NameOnTheCard_LineEdit.clear() 
        self.EnterFourDigitsOfYourDesiredPin_LineEdit.clear() 
        self.NewATMLimit_LineEdit.clear()
        # stackedWidget_2 Add Account
        self.AddAccount_FirstName_LineEdit.clear()
        self.AddAccount_Surname_LineEdit.clear()
        self.AddAccount_Street_LineEdit.clear()
        self.AddAccount_City_LineEdit.clear()
        self.AddAccount_State_LineEdit.clear()
        self.AddAccount_Country_LineEdit.clear()

        # Reset combo box selections to their initial state
        self.ForgotUsername_SecurityQuestion_ComboBox.setCurrentIndex(-1)
        self.ForgotPassword_SecurityQuestion_ComboBox.setCurrentIndex(-1)
        self.Registration_Gender_ComboBox.setCurrentIndex(-1)
        self.Registration_SelectAccountType_ComboBox.setCurrentIndex(-1)
        self.Registration_SecurityQuestion_ComboBox.setCurrentIndex(-1)
        self.CardCategory_ComboBox.setCurrentIndex(-1)
        self.SelectTypeOfTheCard_ComboBox.setCurrentIndex(-1) 
        self.AddAccount_Gender_ComboBox.setCurrentIndex(-1) 
        self.AddAccount_SelectAccountType_ComboBox.setCurrentIndex(-1) 

        # Reset the selected date in Registration_DateEdit
        self.Registration_DateEdit.setDate(QtCore.QDate(2000, 1, 1))  # Set an empty date
        # Reset the selected date in AddAccount_DateEdit
        self.AddAccount_DateEdit.setDate(QtCore.QDate(2000, 1, 1))  # Set an empty date

        # Clear the focus of all widgets
        self.clear_all_widget_focus() 

    # Method to clear login fields
    def clear_login_fields(self):
        self.LoginUsername_LineEdit_1.clear()
        self.Login_Password_LineEdit_2.clear()  
        self.ForgotUsername_Email_LineEdit.clear() 
        self.ForgotPassword_Username_LineEdit.clear()  
        self.Registration_Username_LineEdit.clear() 

    def clear_all_widget_focus(self):
        # Clear the focus of all widgets
        app = QtWidgets.QApplication.instance()
        if app is not None:
            for widget in app.allWidgets():
                widget.clearFocus()   

    def reset_button_style(self):
        # Define the buttons whose styles need to be reset
        buttons = [
            self.ViewAccountDetails_PushButton,
            self.DepositMoney_PushButton,
            self.WithdrawMoney_PushButton,
            self.TransferMoney_PushButton,
            self.ViewTransaction_PushButton,
            self.ViewBalance_PushButton,
            self.ATMCardServices_PushButton,
            self.AddAccount_PushButton_1,
            self.CloseAccount_PushButton,
            self.ManageProfile_PushButton
        ]
    
        # Reset the style of each button to its default state
        default_style = (
            "QPushButton\n"
            "{\n"
            "font: 600 12pt \"Segoe UI\"; \n"
            "color: rgb(255, 255, 255);\n"
            "\n"
            "border-radius:10px;\n"
            "}\n"
            "QPushButton:Hover\n"
            "{\n"
            "background-color: rgb(0, 105, 115);\n"
            "}\n"
            "QPushButton:pressed\n"
            "{\n"
            "background-color: rgb(0, 81, 104)\n"
            "}"
        )

        # Apply the default style to each button
        for button in buttons:
            button.setStyleSheet(default_style)

    # Method to clear the contents of the table widgets
    def clear_table_widgets(self):
        # Clear the contents of all table widgets
        tableWidgets = [
            self.AccountDetails_Account_TableWidget,
            self.DepositMoney_Account_TableWidget,
            self.WithdrawMoney_Account_TableWidget,
            self.Transfer_Account_TableWidget,
            self.ViewTransaction_Account_TableWidget,
            self.ViewBalance_Account_TableWidget,
            self.RequestDebitCard_Account_TableWidget,
            self.ATMPinGeneration_Account_TableWidget,
            self.ATMCardLimitChange_Account_TableWidget,
            self.BlockATMCard_Account_TableWidget,
            self.ViewLinkedATMCard_Account_TableWidget,
            self.UnblockATMCard_Account_TableWidget,
            self.AddAccount_Account_TableWidget,
            self.CloseAccount_Account_TableWidget,
            self.ATMPinGeneration_ATM_TableWidget,
            self.AlreadyBlockedInactiveATMCard_ATM_TableWidget,
            self.UnblockATMCard_ATM_TableWidget,
            self.ATMCardLimitChange_ATM_TableWidget,
            self.BlockATMCard_ATM_TableWidget, 
            self.ViewTheActiveATMCardNumber_ATM_TableWidget
        ]

        for tableWidget in tableWidgets:
            tableWidget.clearContents()
            tableWidget.setRowCount(0)
            tableWidget.setColumnCount(3)  # Reset the number of columns to 3  
            # Reset the default section size of the horizontal header
            tableWidget.horizontalHeader().setDefaultSectionSize(310)        

            header = tableWidget.horizontalHeader()
            font = header.font()
            font.setBold(True)
            font.setUnderline(True)
            header.setFont(font)  

## Handle date change
    def handleDateChange(self, date):
        sender = self.centralwidget.sender()
        # Check if year is greater than 2009
        if date.year() > 2009:
            # Set date to December 31, 2009
            date.setDate(2009, 12, 31)
            if sender == self.Registration_DateEdit:
                self.Registration_DateEdit.setDate(date)
            elif sender == self.AddAccount_DateEdit:
                self.AddAccount_DateEdit.setDate(date)    

## AddAccount_Page_36(CurrentIndex_36, stackedWidget_2)
    def add_account(self): 
        # Retrieve data from input fields
        first_name = self.AddAccount_FirstName_LineEdit.text()
        surname = self.AddAccount_Surname_LineEdit.text()
        date_of_birth = self.AddAccount_DateEdit.text() 
        gender = self.AddAccount_Gender_ComboBox.currentText()
        account_type = self.AddAccount_SelectAccountType_ComboBox.currentText()
        street = self.AddAccount_Street_LineEdit.text()
        city = self.AddAccount_City_LineEdit.text()
        state = self.AddAccount_State_LineEdit.text()
        country = self.AddAccount_Country_LineEdit.text()

        # Validate input data
        if not all([first_name, surname, date_of_birth, gender, account_type, street, city, state, country]):
            self.show_error_message("Please fill in all fields.")
            return

        # Generate a random 11-digit account number
        account_number = random.randint(10**10, 10**11 - 1)   

        # Insert new record into User_Account_Cards table
        try:
            # Retrieve the username of the current user
            current_username = self.get_current_identifier() 

            insert_query = "INSERT INTO BAM.User_Account_Cards (Username, Account_Number, First_Name, Surname, Date_of_Birth, Gender, Account_Type, Street, City, State, Country, Balance) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)"
            self.cursor.execute(insert_query, (current_username, account_number, first_name, surname, date_of_birth, gender, account_type, street, city, state, country, 0))
            self.conn.commit()
            self.show_success_message("Account created successfully.")

            # Update the tableWidgets
            tableWidgets = [
                self.AccountDetails_Account_TableWidget,
                self.DepositMoney_Account_TableWidget,
                self.WithdrawMoney_Account_TableWidget,
                self.Transfer_Account_TableWidget,
                self.ViewTransaction_Account_TableWidget,
                self.ViewBalance_Account_TableWidget,
                self.RequestDebitCard_Account_TableWidget,
                self.ATMPinGeneration_Account_TableWidget,
                self.ATMCardLimitChange_Account_TableWidget,
                self.BlockATMCard_Account_TableWidget,
                self.ViewLinkedATMCard_Account_TableWidget,
                self.UnblockATMCard_Account_TableWidget,
                self.AddAccount_Account_TableWidget,
                self.CloseAccount_Account_TableWidget
            ]

            for tableWidget in tableWidgets:
                self.populate_accounts_table(current_username, tableWidget, [])

            # Set the current index to AddAccount_Page_35(CurrentIndex_35, stackedWidget_2) after adding account
            self.stackedWidget_2.setCurrentIndex(35)
            # Select the AddAccount_PushButton_1
            self.on_button_clicked(self.AddAccount_PushButton_1) 

        except Exception as e:
            self.show_error_message(f"Error occurred while creating account: {str(e)}")

        # Clear input fields
        self.AddAccount_FirstName_LineEdit.clear()
        self.AddAccount_Surname_LineEdit.clear()
        # Reset the selected date in AddAccount_DateEdit
        self.AddAccount_DateEdit.setDate(QtCore.QDate(2000, 1, 1))  # Set an empty date
        self.AddAccount_Gender_ComboBox.setCurrentIndex(-1) 
        self.AddAccount_SelectAccountType_ComboBox.setCurrentIndex(-1) 
        self.AddAccount_Street_LineEdit.clear()
        self.AddAccount_City_LineEdit.clear()
        self.AddAccount_State_LineEdit.clear()
        self.AddAccount_Country_LineEdit.clear()                     

## CloseAccount_Page_34(CurrentIndex_34, stackedWidget_2)
    def close_account(self): 
        # Check if any checkbox is checked
        selected_rows = [row for row in range(self.CloseAccount_Account_TableWidget.rowCount()) if self.CloseAccount_Account_TableWidget.cellWidget(row, 0).findChild(QCheckBox).isChecked()]
        if len(selected_rows) != 1:
            self.show_error_message("Please select one account to close.")
            return 

        # Prompt the user with a message box for confirmation
        msg_box = QMessageBox()
        msg_box.setText('Are you sure you want to close the selected account? This action cannot be undone.')
        msg_box.setWindowTitle('Confirmation')
        msg_box.setStandardButtons(QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No)
        reply = msg_box.exec()

        # If the user confirms (presses "Yes"), proceed with closing the account
        if reply == QMessageBox.StandardButton.Yes:
            try:
                # Get the account number of the selected row
                selected_row = selected_rows[0]
                account_number_item = self.CloseAccount_Account_TableWidget.item(selected_row, 1)
                account_number = account_number_item.text()

                # Check if there is only one account associated with the current username
                current_username = self.get_current_identifier()
                account_count_query = "SELECT COUNT(*) FROM BAM.User_Account_Cards WHERE Username = %s"
                self.cursor.execute(account_count_query, (current_username,))
                account_count = self.cursor.fetchone()[0]

                if account_count == 1:
                    self.show_error_message("You cannot close your last account. Please keep at least one account.")
                    return
            
                # Delete all data related to the account from the database, except username and password
                delete_query = "DELETE FROM BAM.User_Account_Cards WHERE Account_Number = %s"
                self.cursor.execute(delete_query, (account_number,))
                self.conn.commit()

                # Delete transaction history related to the account
                delete_transaction_query = "DELETE FROM BAM.TransactionHistory WHERE user_identifier = %s"
                self.cursor.execute(delete_transaction_query, (account_number,))
                self.conn.commit()

                # Show a success message
                self.show_success_message("Account closed successfully.")

                # Update the table widgets
                tableWidgets = [
                    self.AccountDetails_Account_TableWidget,
                    self.DepositMoney_Account_TableWidget,
                    self.WithdrawMoney_Account_TableWidget,
                    self.Transfer_Account_TableWidget,
                    self.ViewTransaction_Account_TableWidget,
                    self.ViewBalance_Account_TableWidget,
                    self.RequestDebitCard_Account_TableWidget,
                    self.ATMPinGeneration_Account_TableWidget,
                    self.ATMCardLimitChange_Account_TableWidget,
                    self.BlockATMCard_Account_TableWidget,
                    self.ViewLinkedATMCard_Account_TableWidget,
                    self.UnblockATMCard_Account_TableWidget,
                    self.AddAccount_Account_TableWidget,
                    self.CloseAccount_Account_TableWidget
                ]

                for tableWidget in tableWidgets:
                    self.populate_accounts_table(current_username, tableWidget, [])

                # Set the current index to AddAccount_Page_35(CurrentIndex_35, stackedWidget_2) after closing account
                self.stackedWidget_2.setCurrentIndex(35) 
                # Select the AddAccount_PushButton_1
                self.on_button_clicked(self.AddAccount_PushButton_1)

            except Exception as e:
                self.show_error_message(f"Error occurred while closing the account: {str(e)}")   

## MainAccount_Page_5(CurrentIndex_5, stackedWidget)
    def show_dropdown_menu(self):
        # Create a menu
        self.menu = QMenu(self.Account_Profile_PushButton)

        # Set fixed size for the menu
        self.menu.setFixedSize(105, 65)  # Adjust the size as needed

        # Create a QPushButton for "Log out" action
        logout_button = QPushButton("Log out")
        logout_button.setFixedSize(100, 30)  # Adjust the size as needed
        
        # Set the stylesheet with all styles combined
        logout_button.setStyleSheet("""
            QPushButton {
                font: 600 12pt "Segoe UI"; 
                color: rgb(168, 0, 0);                   
                background-color: rgb(230, 230, 230);
            }
            QPushButton:hover { 
                background-color: rgb(173, 173, 173); 
            }
            QPushButton:pressed { 
                background-color: rgb(147, 147, 147); 
            }
        """) 

        logout_button.clicked.connect(self.logout)

        # Create a QWidgetAction and set the QPushButton as its default widget
        logout_action = QWidgetAction(self.menu)
        logout_action.setDefaultWidget(logout_button)

        # Add the action to the menu
        self.menu.addAction(logout_action)

        # Create a QPushButton for "History" action
        history_button = QPushButton("History")
        history_button.setFixedSize(100, 30)  # Adjust the size as needed
        
        # Set the stylesheet with all styles combined
        history_button.setStyleSheet("""
            QPushButton {
                font: 600 12pt "Segoe UI"; 
                color: rgb(0, 0, 0);
                background-color: rgb(230, 230, 230);
            }
            QPushButton:hover { 
                background-color: rgb(173, 173, 173); 
            }
            QPushButton:pressed { 
                background-color: rgb(147, 147, 147); 
            }
        """) 

        history_button.clicked.connect(self.go_to_history)  # Connect to the method to go to history page
        # Create a QWidgetAction and set the QPushButton as its default widget
        history_action = QWidgetAction(self.menu)
        history_action.setDefaultWidget(history_button)

        # Add the "History" action to the menu
        self.menu.addAction(history_action)

        # Show the menu at the position of the button
        self.menu.exec(self.Account_Profile_PushButton.mapToGlobal(self.Account_Profile_PushButton.rect().bottomLeft()))   

    # Method to go to history page
    def go_to_history(self):
        # Change the current index of stackedWidget to 6 (index 6 corresponds to the history page)
        self.stackedWidget.setCurrentIndex(6)   

        # Hide the dropdown menu
        self.menu.hide()  

## History_Page_6(CurrentIndex_6, stackedWidget)
    def update_page_history(self, index, stacked_widget_name):
        # Update page history based on the current index of the stack widget
        if stacked_widget_name == "stackedWidget":
            # Update based on stackedWidget index
            self.page_history.append(("stackedWidget", index))
        elif stacked_widget_name == "stackedWidget_2":
            # Update based on stackedWidget_2 index
            self.page_history.append(("stackedWidget_2", index))

        # Update History_Label_2 with the updated page history
        self.update_history_label()

    def update_history_label(self):
        # Construct the page history text
        history_text = "Page History:\n"
        for page, index in self.page_history:
            history_text += f"{page} Index: {index}\n"

        # Set the text of History_Label_2 with the updated page history
        self.History_Label_2.setText(history_text)

    # LeftArrow_PushButton in LeftArrowRightArrow_Page_0 (stackedWidget_3) and AlreadyBlockedInactiveATMCardBack_PushButton in AlreadyBlocked_Page_28 (CurrentIndex_28, stackedWidget_2)
    def navigate_back(self):
        # Check if there's any page to navigate back to
        if len(self.page_history) > 1:
            # Remove the current page from the history
            self.page_history.pop()

            # Get the previous page and index
            previous_page, previous_index = self.page_history[-1]

            # Update the stacked widget to show the previous page
            if previous_page == "stackedWidget":
                self.stackedWidget.setCurrentIndex(previous_index)
            elif previous_page == "stackedWidget_2":
                self.stackedWidget_2.setCurrentIndex(previous_index)

            # Update the button style corresponding to the current index
            self.update_button_style(previous_index)  

            self.clear_login_fields()

            # Update the history label
            self.update_history_label()  

    # RightArrow_PushButton
    def navigate_forward(self):
        # Check if there's any page to navigate forward to
        if len(self.page_history) > 0:
            # Get the next page and index if available
            next_index = self.page_history.index(("stackedWidget", self.stackedWidget.currentIndex())) + 1
            if next_index < len(self.page_history):
                next_page, next_index = self.page_history[next_index]

                # Update the stacked widget to show the next page
                if next_page == "stackedWidget":
                    self.stackedWidget.setCurrentIndex(next_index)
                elif next_page == "stackedWidget_2":
                    self.stackedWidget_2.setCurrentIndex(next_index)

                # Update the button style corresponding to the current index
                self.update_button_style(next_index)  

                self.clear_login_fields()

                # Update the history label
                self.update_history_label() 

    def update_button_style(self, index):
        # Define the buttons and their corresponding index changes
        button_index_map = {
            self.ViewAccountDetails_PushButton: [1, 2], # Modify to include both pages 1 and 2
            self.DepositMoney_PushButton: [3, 4], # Pages 3 and 4
            self.WithdrawMoney_PushButton: [5, 6], # Pages 5 and 6
            self.TransferMoney_PushButton: [7, 8], # Pages 7 and 8
            self.ViewTransaction_PushButton: [9, 10], # Pages 9 and 10
            self.ViewBalance_PushButton: [11, 12], # Pages 11 and 12
            self.ATMCardServices_PushButton: list(range(16, 34)), # Pages 16 to 33 inclusive
            self.AddAccount_PushButton_1: [35, 36],
            self.CloseAccount_PushButton: 34, # Page 34
            self.ManageProfile_PushButton: [13, 14, 15] # Pages 13, 14, and 15
        }

        # Reset the style of all buttons
        self.reset_button_style()

        # Find the button(s) corresponding to the current index and style them
        for button, indices in button_index_map.items():
            if isinstance(indices, int): # If indices is an integer
                if index == indices:
                    self.on_button_clicked(button)
            elif index in indices: # If indices is an iterable
                self.on_button_clicked(button)                     

    # History_Page_6(CurrentIndex_6, stackedWidget)
    def confirm_clear_history(self):
        # Check if the history is empty
        if not self.page_history:
            self.show_error_message("Page history is already empty.")
            return
        
        # if the page history is not empty and prompt the user with a confirmation dialog
        msg_box = QMessageBox()
        msg_box.setText('Are you sure you want to clear the page history?')
        msg_box.setWindowTitle('Confirmation')
        msg_box.setStandardButtons(QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No)
        reply = msg_box.exec()

        # If the user confirms (presses "Yes"), clear the page history
        if reply == QMessageBox.StandardButton.Yes:
            self.clear_history()
            self.show_success_message("Page history cleared successfully.")
        # If the user cancels (presses "No"), simply close the message box without taking any action
        else:
            pass

    def clear_history(self):
        # Clear all data in History_Label_2
        self.page_history = []
        self.update_history_label()      

    def adjust_column_widths(self): 
        """
        Adjust the width of the columns in each specified table widget.
        """
        # List of table widgets to adjust column widths
        table_widgets = [
            self.AccountDetails_Account_TableWidget,
            self.DepositMoney_Account_TableWidget,
            self.WithdrawMoney_Account_TableWidget,
            self.Transfer_Account_TableWidget,
            self.ViewTransaction_Account_TableWidget,
            self.ViewBalance_Account_TableWidget,
            self.RequestDebitCard_Account_TableWidget,
            self.ATMPinGeneration_Account_TableWidget,
            self.ATMPinGeneration_ATM_TableWidget,
            self.ATMCardLimitChange_Account_TableWidget,
            self.ATMCardLimitChange_ATM_TableWidget,
            self.BlockATMCard_Account_TableWidget,
            self.BlockATMCard_ATM_TableWidget,
            self.AlreadyBlockedInactiveATMCard_ATM_TableWidget,
            self.ViewLinkedATMCard_Account_TableWidget,
            self.ViewTheActiveATMCardNumber_ATM_TableWidget,
            self.UnblockATMCard_Account_TableWidget,
            self.UnblockATMCard_ATM_TableWidget,
            self.CloseAccount_Account_TableWidget,
            self.AddAccount_Account_TableWidget
        ]

        # Iterate over each table widget and adjust column widths
        for table_widget in table_widgets:
            header = table_widget.horizontalHeader() # Get the horizontal header
            header.setSectionResizeMode(QtWidgets.QHeaderView.ResizeMode.ResizeToContents) # Resize the columns to fit their contents   

    def go_to_welcome_page(self):
        # Call the clear_login_fields method
        self.clear_login_fields()
        
        # Switch to Welcome_Page_0(CurrentIndex_0, stackedWidget)
        self.stackedWidget.setCurrentIndex(0)     

## Fullscreen state
    def toggleFullscreen(self, event):
        # Check if the pressed key is F11
        if event.key() == Qt.Key.Key_F11:
            # If the window(BAM) is not in fullscreen mode
            if not self.fullscreen:
                # Show the main window(BAM) in fullscreen mode
                BAM.showFullScreen()
                # Set the fullscreen flag to True
                self.fullscreen = True
            else:
                # If the window(BAM) is already in fullscreen mode, show it in normal mode
                BAM.showNormal()
                # Set the fullscreen flag to False
                self.fullscreen = False              

    def cleanup(self):
        # Close the database connection when the application is closed
        try:
            # Close the cursor if it exists
            if self.cursor:
                self.cursor.close()
        
            # Close the connection if it exists
            if self.conn:
                self.conn.close()
        except Exception as e:
            # Handle any exceptions gracefully
            print(f"Error occurred during cleanup: {e}")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    BAM = QtWidgets.QMainWindow()
    ui = Ui_BAM()
    ui.setupUi(BAM)
    BAM.show()
    # Connect cleanup method to the application's aboutToQuit signal
    app.aboutToQuit.connect(ui.cleanup)
    sys.exit(app.exec())
